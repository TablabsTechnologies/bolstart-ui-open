{"version":3,"sources":["webpack:///src/app/components/company/company-info/company-info.component.ts","webpack:///src/app/components/company/company-info/company-info.component.html","webpack:///src/app/components/company/company-publish/company-publish.component.ts","webpack:///src/app/components/company/company-publish/company-publish.component.html","webpack:///src/app/components/company/create-company/create-company.component.ts","webpack:///src/app/components/company/create-company/create-company.component.html","webpack:///src/app/components/company/company-profile/company-profile.component.ts","webpack:///src/app/components/company/company-profile/company-profile.component.html","webpack:///src/app/components/company/company-top-member/company-top-member.component.ts","webpack:///src/app/components/company/company-top-member/company-top-member.component.html","webpack:///src/app/components/company/company-member/company-member.component.ts","webpack:///src/app/components/company/company-member/company-member.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/app/components/company/company.component.ts","webpack:///src/app/components/company/company.component.html","webpack:///src/app/components/company/company.module.ts","webpack:///src/app/components/company/address-book/address-book.component.ts","webpack:///src/app/components/company/address-book/address-book.component.html","webpack:///src/app/components/company/company-routing.module.ts"],"names":["CompanyInfoComponent","profileService","route","fb","companyApiService","toaster","userDetail","serviceList","getInfo","initializeForm","JSON","parse","decrypt","localStorage","getItem","toString","Utf8","queryParams","subscribe","param","getCompanyDetail","companyId","companyUpdateForm","group","contactEmail","required","description","profile_url","pattern","urlRegex","id","services","user_id","company","patchValue","companyDetail","res","success","data","setFormValue","valid","obj","value","updateCompany","message","click","push","index","splice","addService","onSubmit","selector","templateUrl","styleUrls","CompanyPublishComponent","routes","companyService","publishPostList","currentPage","throttle","scrollDistance","getPublishPostList","getCompanyPublishPost","content","oldDate","day","substring","month","year","onScrollDown","CreateCompanyComponent","awsService","accountApiService","router","type","industryList","industries","countryList","country","stateList","cityList","defaultLogo","stepper","next","document","querySelector","linear","animation","setDefault","companyForm","city","email","contactNumber","phoneNumberRegex","industry","logo","name","registrationType","state","websiteLink","stages","company_type","initializeCompanyValues","selectCountry","location","mobileNumber","isVerified","registerCompany","encrypt","stringify","setItem","emitEvent","navigate","error","event","imageEditorType","imageChangedEvent","imagePicker","nativeElement","uploadFile","file","then","map","getStateList","countryID","getStateListBasedOnCountry","selectState","getCityList","stateID","getCityListBasedOnState","getImage","savCompany","imageCropped","fileChangeEvent","CompanyProfileComponent","add","timelineImage","defaultTimlineImage","console","log","isOwener","updateProfileInfo","isMobileVerified","CompanyTopMemberComponent","memberList","getMemberList","size","visit","CompanyMemberComponent","toastr","userList","isShow","role","scrollUpDistance","yeaList","years","monthList","isShowList","searchList","initializeExpForm","addEmployeeForm","userId","startYear","startMonth","isWorking","userName","profileImage","title","item","removeMember","assignEmployeeRole","userRole","warning","companyName","companyLogo","working","addEmployeeByAdmin","reset","firstName","lastName","profilePicture","length","searchOnlyUser","setTimeout","onAddEmployee","onBlur","onFocus","search","environment","production","baseUrl","jobPostBaseUrl","defaultPic","CompanyComponent","CompanyModule","declarations","imports","providers","exports","AddressBookComponent","groupName","groupList","emailId","selectedUserList","getAddresssBookByComId","createAddressBook","selectedGroup","selectUser","getAddressBookByCompanyId","selectedForEdit","updateAddressBook","groupId","selectedGroupID","deleteAddressBook","getAddressBookById","newUser","emailid","profile_piture","addMemberInGroup","submitGroup","confirmDelete","path","component","children","CompanyRoutingModule","forChild"],"mappings":"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","file":"default~components-company-company-module~components-investor-investor-module-es5.js","sourcesContent":["import * as $ from 'jquery';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CompanyApiService } from '../company-api.service';\r\nimport { ProfileService } from '../../profile/profile.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\n@Component({\r\n  selector: 'app-company-info',\r\n  templateUrl: './company-info.component.html',\r\n  styleUrls: ['./company-info.component.scss']\r\n})\r\nexport class CompanyInfoComponent implements OnInit {\r\n\r\n  companyUpdateForm: FormGroup;\r\n  userDetail: any = {};\r\n  companyDetail: any;\r\n  imageEditorType: number;\r\n  imageChangedEvent;\r\n  serviceList: any = [];\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private companyApiService: CompanyApiService,\r\n    private toaster: ToastrService,\r\n\r\n\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo()\r\n    this.initializeForm();\r\n  }\r\n\r\n  getInfo() {\r\n    this.userDetail = JSON.parse(CryptoJS.AES.decrypt(localStorage.getItem('Bolstart'), \"Bollstart\").toString(CryptoJS.enc.Utf8));\r\n    this.route.queryParams.subscribe(param => {\r\n      this.getCompanyDetail(param.companyId)\r\n    })\r\n  }\r\n\r\n\r\n  initializeForm() {\r\n    this.companyUpdateForm = this.fb.group({\r\n      contactEmail: [\"\", [Validators.required]],\r\n      description: [\"\", [Validators.required]],\r\n      profile_url: [\"\", [Validators.required, Validators.pattern(common.urlRegex)]],\r\n      id: [\"\", [Validators.required]],\r\n      services: [\"\"],\r\n      user_id: [\"\", [Validators.required]],\r\n    })\r\n\r\n  }\r\n\r\n  setFormValue(company) {\r\n    this.companyUpdateForm.patchValue({\r\n      contactEmail: company.contactEmail,\r\n      description: company.description,\r\n      profile_url: company.profile_url,\r\n      id: company.id,\r\n      user_id: this.userDetail.id,\r\n    })\r\n    this.serviceList = this.companyDetail.services == null ? [] : this.companyDetail.services\r\n  }\r\n  getCompanyDetail(companyId) {\r\n    this.companyApiService.getCompanyDetail(companyId).subscribe(res => {\r\n      if (res.success) {\r\n        // this.companyDetail = res.data;\r\n        this.companyDetail = res.data;\r\n        this.setFormValue(this.companyDetail)\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.companyUpdateForm.valid) {\r\n      let obj = {\r\n        contactEmail: this.companyUpdateForm.value.contactEmail,\r\n        description: this.companyUpdateForm.value.description,\r\n        id: this.companyUpdateForm.value.id,\r\n        services: this.serviceList,\r\n        user_id: this.userDetail.id,\r\n        profile_url: this.companyUpdateForm.value.profile_url\r\n      }\r\n      this.companyApiService.updateCompany(obj).subscribe(res => {\r\n        if (res.success) {\r\n          this.toaster.success(res.message);\r\n          $(\"#aboutModel .close\").click();\r\n          this.companyDetail = res.data;\r\n          this.setFormValue(this.companyDetail)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  /* ===============  Add Service  ==================== */\r\n  addService() {\r\n    if (this.companyUpdateForm.value.services != \"\") {\r\n      this.serviceList.push(this.companyUpdateForm.value.services);\r\n    }\r\n  }\r\n  removeTag(index) {\r\n    this.serviceList.splice(index, 1)\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"card p-4\">\r\n    <div class=\"row\">\r\n        <div class=\"col-11\">\r\n            <h5>Description </h5>\r\n        </div>\r\n        <div class=\"col-1\">\r\n            <img *ngIf=\"userDetail?.company_id == companyDetail?.id\" class=\"pencil\" src=\"assets/logo/pen.svg\"\r\n                data-target=\"#aboutModel\" data-toggle=\"modal\" style=\"width: 25px;\">\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <pre class=\"break-line\">{{companyDetail?.description}}</pre>\r\n    </div>\r\n    <div *ngIf=\"companyDetail?.services?.length > 0\">\r\n        <div class=\"row\">\r\n            <div class=\"col-11\">\r\n                <h5>Services</h5>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"chip\" *ngFor=\"let item of companyDetail?.services\">\r\n                {{item}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-11\">\r\n                <h5>Social Media URL.</h5>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <a href=\"//{{companyDetail?.profile_url}}\" target=\"blank\">{{companyDetail?.profile_url}}</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- ================ About Model ======================= -->\r\n<div class=\"modal fade\" id=\"aboutModel\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content p-3\">\r\n                <div class=\"modal-Custheader p-2\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h6 class=\"modal-title\">Update Company Information</h6>\r\n                </div>\r\n                <div>\r\n                    <form [formGroup]=\"companyUpdateForm\">\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-12\">\r\n                                <label>Short Description <span class=\"mandatory\">*</span></label>\r\n                                <textarea class=\"form-control description\" cols=\"10\" placeholder=\"description\"\r\n                                    formControlName=\"description\"></textarea>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('description').invalid && companyUpdateForm.get('description').touched\">Enter\r\n                                    Short Description</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Email <span class=\"mandatory\">*</span></label>\r\n                                <input class=\"form-control\" placeholder=\"Enter Email\" formControlName=\"contactEmail\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('contactEmail').invalid && companyUpdateForm.get('contactEmail').touched\">Enter\r\n                                    Valid Email id.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Social Media URL<span class=\"mandatory\">*</span></label>\r\n                                <input class=\"form-control\" placeholder=\"Enter Email\" formControlName=\"profile_url\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('profile_url').invalid && companyUpdateForm.get('profile_url').touched\">Enter\r\n                                    Valid Social Media URL.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-6\">\r\n                                <label>Services</label>\r\n                                <input class=\"form-control\" placeholder=\"Enter Service\" formControlName=\"services\">\r\n\r\n                            </div>\r\n                            <div class=\"col col-2 pt-4\">\r\n                                <label></label>\r\n                                <button class=\"btn btn-secondary\" (click)=\"addService()\">Add</button>\r\n                            </div>\r\n                            <div class=\" col col-md-12 pt-5\">\r\n                                <div class=\"chip\" *ngFor=\"let item of serviceList;let i = index;\">\r\n                                    {{item}} &nbsp; <i class=\"fa fa-times\" aria-hidden=\"true\"\r\n                                        (click)=\"removeTag(i)\"></i>\r\n                                </div> &nbsp;\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <button type=\"submit\" class=\"btn btn-primary mt-5\" (click)=\"onSubmit()\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as CryptoJS from 'crypto-js';\r\nimport * as moment from 'moment';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CompanyApiService } from 'src/app/components/company/company-api.service';\r\nimport { ProfileService } from '../../profile/profile.service';\r\nimport { postService } from './../../../shared/post-container/post-container.service';\r\n\r\n@Component({\r\n  selector: 'app-company-publish',\r\n  templateUrl: './company-publish.component.html',\r\n  styleUrls: ['./company-publish.component.scss']\r\n})\r\nexport class CompanyPublishComponent implements OnInit {\r\n  companyId: any;\r\n  publishPostList: any = [];\r\n  userDetail: any;\r\n\r\n  currentPage: number = 0;\r\n  throttle = 150;\r\n  scrollDistance = 2;\r\n\r\n  constructor(\r\n    private routes: ActivatedRoute,\r\n    private companyService: CompanyApiService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n\r\n    /*    this.postService.deleteEvent.subscribe(data => {\r\n         this.publishPostList.map((post, index) => {\r\n           if (data == post.id) {\r\n             this.publishPostList.splice(index, 1)\r\n           }\r\n         })\r\n       })\r\n       this.postService.updateEvent.subscribe(data => {\r\n         this.publishPostList.map((post) => {\r\n           if (data.id == post.id) {\r\n             return [post.description = data.description, post.image = data.image]\r\n           }\r\n         })\r\n       }) */\r\n  }\r\n\r\n  getInfo() {\r\n    this.userDetail = JSON.parse(CryptoJS.AES.decrypt(localStorage.getItem('Bolstart'), \"Bollstart\").toString(CryptoJS.enc.Utf8));\r\n    this.routes.queryParams.subscribe(param => {\r\n      this.companyId = param.companyId\r\n    })\r\n\r\n    this.getPublishPostList(this.currentPage)\r\n  }\r\n  getPublishPostList(currentPage) {\r\n    this.companyService.getCompanyPublishPost(this.companyId, currentPage, this.userDetail.id).subscribe(res => {\r\n      if (res.success) {\r\n        this.publishPostList = res.data.content;\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeDateFormat(oldDate) {\r\n    let day = oldDate.substring(0, 2);\r\n    let month = moment.monthsShort(oldDate.substring(3, 5) - 1);\r\n    let year = oldDate.substring(6, 10);\r\n    return `${day}-${month}-${year}`\r\n  }\r\n\r\n\r\n  /* ======================  infinite Scroll  =========================== */\r\n  onScrollDown() {\r\n    this.currentPage += 1\r\n    this.getPublishPostList(this.currentPage);\r\n\r\n  }\r\n\r\n}","<div class=\"search-results\" infinite-scroll [infiniteScrollDistance]=\"scrollDistance\" (scrolled)=\"onScrollDown()\"\r\n    [scrollWindow]=\"false\" [infiniteScrollThrottle]=\"throttle\">\r\n    <ul class=\"events\">\r\n        <li class=\"list\" *ngFor=\"let item of publishPostList\">\r\n            <time></time>\r\n            <span class=\"content\">\r\n                <label>{{onChangeDateFormat(item.date)}}</label>\r\n                <publish-container [publish]=\"item\" [userInfo]=\"userDetail\"></publish-container>\r\n            </span>\r\n        </li>\r\n    </ul>\r\n</div>","import * as CryptoJS from 'crypto-js';\r\n\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../../account/account-api.service';\r\nimport { AwsService } from './../../../shared/AWS-Service/aws.service';\r\nimport { CompanyApiService } from './../company-api.service';\r\nimport { CroppedEvent } from 'ngx-photo-editor';\r\nimport { ProfileService } from './../../../components/profile/profile.service';\r\nimport { Router } from '@angular/router';\r\nimport Stepper from 'bs-stepper';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\n@Component({\r\n  selector: 'app-create-company',\r\n  templateUrl: './create-company.component.html',\r\n  styleUrls: ['./create-company.component.scss']\r\n})\r\nexport class CreateCompanyComponent implements OnInit {\r\n  @ViewChild(\"imagePicker\", { static: false }) imagePicker: ElementRef;\r\n  type: number = 2;\r\n  userDetail: any;\r\n  companyForm: FormGroup;\r\n  imageEditorType: number;\r\n  imageChangedEvent;\r\n  industryList: any = common.industries;\r\n  countryList: any = common.country;\r\n  stateList: any = [];\r\n  cityList: any = [];\r\n  serviceList: any = [];\r\n  defaultLogo = \"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/enterprise.png\";\r\n\r\n  private stepper: Stepper\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private awsService: AwsService,\r\n    private accountApiService: AccountApiService,\r\n    private companyApiService: CompanyApiService,\r\n    private profileService: ProfileService,\r\n    private toaster: ToastrService,\r\n    private router: Router\r\n  ) { }\r\n  next() {\r\n    this.stepper.next();\r\n  }\r\n\r\n  onSubmit() {\r\n    return false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\r\n      linear: false,\r\n      animation: true\r\n    })\r\n    this.getInfo();\r\n    this.initializeForm();\r\n    this.setDefault();\r\n\r\n  }\r\n\r\n\r\n  getInfo() {\r\n    this.userDetail = JSON.parse(CryptoJS.AES.decrypt(localStorage.getItem('Bolstart'), \"Bollstart\").toString(CryptoJS.enc.Utf8));\r\n  }\r\n\r\n  initializeForm() {\r\n    this.companyForm = this.fb.group({\r\n      city: [\"\", [Validators.required]],\r\n      contactEmail: [\"\", [Validators.required, Validators.email]],\r\n      contactNumber: [\"\", [Validators.required, Validators.pattern(common.phoneNumberRegex)]],\r\n      country: [\"\", [Validators.required]],\r\n      description: [\"\", [Validators.required]],\r\n      industry: [\"\", [Validators.required]],\r\n      logo: [\"\", [Validators.required]],\r\n      name: [\"\", [Validators.required]],\r\n      profile_url: [\"\", [Validators.required, Validators.pattern(common.urlRegex)]],\r\n      registrationType: [\"\"],\r\n      state: [\"\", [Validators.required]],\r\n      websiteLink: [\"\", [Validators.required, Validators.pattern(common.urlRegex)]],\r\n      stages: [\"\", [Validators.required]],\r\n      company_type: [\"\", [Validators.required]],\r\n      services: [\"\"]\r\n    })\r\n    this.initializeCompanyValues()\r\n    this.selectCountry();\r\n  }\r\n\r\n  initializeCompanyValues() {\r\n    this.companyForm.patchValue({\r\n      city: this.userDetail.location,\r\n      contactNumber: this.userDetail.mobileNumber,\r\n      country: this.userDetail.country,\r\n      state: this.userDetail.state,\r\n    })\r\n  }\r\n\r\n  savCompany() {\r\n    if (this.companyForm.valid) {\r\n      let obj = {\r\n        city: this.companyForm.value.city,\r\n        contactEmail: this.companyForm.value.contactEmail,\r\n        contactNumber: this.companyForm.value.contactNumber,\r\n        country: this.companyForm.value.country,\r\n        description: this.companyForm.value.description,\r\n        industry: this.companyForm.value.industry,\r\n        isVerified: \"false\",\r\n        logo: this.companyForm.value.logo,\r\n        name: this.companyForm.value.name,\r\n        profile_url: this.companyForm.value.profile_url,\r\n        services: this.serviceList,\r\n        stages: this.companyForm.value.stages,\r\n        state: this.companyForm.value.state,\r\n        user_id: this.userDetail.id,\r\n        websiteLink: this.companyForm.value.websiteLink,\r\n        company_type: this.companyForm.value.company_type\r\n      }\r\n      this.companyApiService.registerCompany(obj).subscribe(res => {\r\n        if (res.success) {\r\n          this.toaster.success(res.message);\r\n          this.userDetail[\"company_id\"] = res.data.id;\r\n          this.userDetail[\"companyName\"] = res.data.name;\r\n          this.userDetail[\"compnayLogo\"] = res.data.logo;\r\n          let encrypt = CryptoJS.AES.encrypt(JSON.stringify(this.userDetail), \"Bollstart\").toString();\r\n          localStorage.setItem('Bolstart', encrypt);\r\n          this.profileService.emitEvent();\r\n          this.router.navigate(['./company/companyinfo/publish'], { queryParams: { companyId: res.data.id } });\r\n        } else {\r\n          this.toaster.error(res.message);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  setDefault() {\r\n    this.companyForm.patchValue({\r\n      logo: this.defaultLogo,\r\n    })\r\n  }\r\n\r\n  fileChangeEvent(event: any) {\r\n    if (this.imageEditorType == 1) {\r\n      this.imageChangedEvent = event;\r\n    } else {\r\n      this.imageChangedEvent = event\r\n    }\r\n  }\r\n\r\n  getImage(type) {\r\n    try {\r\n      this.imageEditorType = type\r\n      this.imagePicker.nativeElement.click();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  imageCropped(event: CroppedEvent) {\r\n    // this.img = `url(${event.base64})`\r\n    if (this.imageEditorType == 1) {\r\n      this.awsService.uploadFile(event.file, \"profile\").then(res => {\r\n        this.companyForm.patchValue({\r\n          profile_url: res\r\n        })\r\n      })\r\n\r\n    } else {\r\n      this.awsService.uploadFile(event.file, \"company\").then(res => {\r\n        this.companyForm.patchValue({\r\n          logo: res\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  /* ===================== country select  =========================== */\r\n  selectCountry() {\r\n    let country = this.companyForm.value.country;\r\n    this.countryList.map(res => {\r\n      if (res.name == country) {\r\n        this.getStateList(res.id)\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  getStateList(countryID) {\r\n    this.accountApiService.getStateListBasedOnCountry(countryID).subscribe(res => {\r\n      if (res.success) {\r\n        this.stateList = res.data;\r\n        this.selectState()\r\n      }\r\n    })\r\n  }\r\n\r\n  selectState() {\r\n    let state = this.companyForm.value.state;\r\n    this.stateList.map(res => {\r\n      if (res.name == state) {\r\n        this.getCityList(res.id);\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityList(stateID) {\r\n    this.accountApiService.getCityListBasedOnState(stateID).subscribe(res => {\r\n      if (res.success) {\r\n        this.cityList = res.data;\r\n      }\r\n    })\r\n  }\r\n  /* ===============  Add Service  ==================== */\r\n  addService() {\r\n    if (this.companyForm.value.services != \"\") {\r\n      this.serviceList.push(this.companyForm.value.services);\r\n      this.companyForm.patchValue({\r\n        services: ''\r\n      })\r\n    }\r\n  }\r\n  removeTag(index) {\r\n    this.serviceList.splice(index, 1)\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card p-4\">\r\n        <div id=\"stepper1\" class=\"bs-stepper\">\r\n            <div class=\"bs-stepper-header\">\r\n                <div class=\"step\" data-target=\"#test-l-1\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">1</span>\r\n                        <span class=\"bs-stepper-label\">Startup</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"step\" data-target=\"#test-l-2\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">2</span>\r\n                        <span class=\"bs-stepper-label\">Category</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"step\" data-target=\"#test-l-3\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">3</span>\r\n                        <span class=\"bs-stepper-label\">Contact Info</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"bs-stepper-content\">\r\n                <form [formGroup]=\"companyForm\">\r\n                    <div id=\"test-l-1\" class=\"content\">\r\n                        <div class=\"row pt-2\">\r\n\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Company Name <span class=\"mandatory\">*</span> </label>\r\n                                <input class=\"form-control\" placeholder=\"Company Name\" formControlName=\"name\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('name').invalid && companyForm.get('name').touched\">Enter\r\n                                    Company Name.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Website Url <span class=\"mandatory\">*</span></label>\r\n                                <input class=\"form-control\" type=\"url\" placeholder=\"Website Url\"\r\n                                    formControlName=\"websiteLink\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('websiteLink').invalid && companyForm.get('websiteLink').touched\">Enter\r\n                                    Website URL.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-6\">\r\n                                <label>stages <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"stages\">\r\n                                    <option value=\"\" selected hidden disabled>Select Stages</option>\r\n                                    <option value=\"Bootstrapped\">Bootstrapped</option>\r\n                                    <option value=\"Pre-Seed\">Pre-Seed</option>\r\n                                    <option value=\"Seed\">Seed</option>\r\n                                    <option value=\"Series A\">Series A</option>\r\n                                    <option value=\"Series B\">Series B</option>\r\n                                    <option value=\"Series c\">Series C</option>\r\n                                    <option value=\"Series D\">Series D</option>\r\n                                    <option value=\"Series E\">Series E</option>\r\n                                    <option value=\"Series F\">Series F</option>\r\n                                    <option value=\"Series G\">Series G</option>\r\n                                    <option value=\"Pre-IPO\">Pre-IPO</option>\r\n                                    <option value=\"IPO\"> IPO</option>\r\n                                    <option value=\"Seed\">Seed</option>\r\n                                    <option value=\"Pre series\">Pre series</option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('stages').invalid && companyForm.get('stages').touched\">Select\r\n                                    Stages.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Social Media URL <span class=\"mandatory\">*</span></label>\r\n                                <div>\r\n                                    <input class=\"form-control\" type=\"url\" placeholder=\"Social Media URL\"\r\n                                        formControlName=\"profile_url\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"companyForm.get('profile_url').invalid && companyForm.get('profile_url').touched\">Social\r\n                                        Media URL.</small>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Short Description <span class=\"mandatory\">*</span></label>\r\n                                <textarea class=\"form-control\" style=\"max-height: 125px;\" placeholder=\"description\"\r\n                                    formControlName=\"description\"></textarea>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('description').invalid && companyForm.get('description').touched\">Enter\r\n                                    Short Description</small>\r\n                            </div>\r\n                            <div class=\"col col-md-3\">\r\n                                <label>Company Logo <span class=\"mandatory\">*</span></label>\r\n                                <div>\r\n                                    <img class=\"logo\" [src]=\"companyForm.value.logo\">\r\n                                    <i class=\"fa fa-camera fab center\" (click)=\"getImage(2)\"></i>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div id=\"test-l-2\" class=\"content\">\r\n                        <div class=\"row pt-2\">\r\n\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Industry <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"industry\">\r\n                                    <option value=\"\" selected hidden disabled>Select Industry</option>\r\n                                    <option *ngFor=\"let item of industryList\" [value]=\"item\">{{item}}</option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('industry').invalid && companyForm.get('industry').touched\">Select\r\n                                    Industry</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Company Type <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"company_type\">\r\n                                    <option value=\"\" selected hidden disabled>Company Type</option>\r\n                                    <option value=\"Public\">Public</option>\r\n                                    <option value=\"Private\">Private</option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('company_type').invalid && companyForm.get('company_type').touched\">Select\r\n                                    Company Type</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-3\">\r\n                                <label>Services</label>\r\n                                <input class=\"form-control\" placeholder=\"Enter Service\" formControlName=\"services\">\r\n\r\n                            </div>\r\n                            <div class=\"col col-2 pt-4\">\r\n                                <label></label>\r\n                                <button class=\"btn btn-secondary\" (click)=\"addService()\">Add</button>\r\n                            </div>\r\n                            <div class=\" col col-md-7 pt-5\">\r\n                                <div class=\"chip\" *ngFor=\"let item of serviceList;let i = index;\">\r\n                                    {{item}} &nbsp; <i class=\"fa fa-times\" aria-hidden=\"true\"\r\n                                        (click)=\"removeTag(i)\"></i>\r\n                                </div> &nbsp;\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"text-right\">\r\n                            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div id=\"test-l-3\" class=\"content\">\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Email <span class=\"mandatory\">*</span></label>\r\n                                <input class=\"form-control\" placeholder=\"Enter Email\" formControlName=\"contactEmail\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('contactEmail').invalid && companyForm.get('contactEmail').touched\">Enter\r\n                                    Valid Email id.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Mobile Number <span class=\"mandatory\">*</span></label>\r\n                                <div style=\"display: flex;\">\r\n                                    <select class=\"form-control\" style=\"width: 65px;\">\r\n                                        <option>+91</option>\r\n                                        <option>+1</option>\r\n                                    </select> &nbsp;\r\n                                    <input class=\"form-control\" placeholder=\"Enter mobile number\"\r\n                                        formControlName=\"contactNumber\">\r\n\r\n                                </div>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('contactNumber').invalid && companyForm.get('contactNumber').touched\">Enter\r\n                                    Mobile Number.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-4\">\r\n                                <label>Country <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"country\" (change)=\"selectCountry()\">\r\n                                    <option value='' selected hidden disabled>select country\r\n                                    </option>\r\n                                    <option [value]='item.name' *ngFor=\"let item of countryList\">{{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('country').invalid && companyForm.get('country').touched\">Select\r\n                                    Country.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-4\">\r\n                                <label>States/Union territories <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"state\" (change)=\"selectState()\">\r\n                                    <option value='' selected hidden disabled>select States/Union territory\r\n                                    </option>\r\n                                    <option [value]='item.name' *ngFor=\"let item of stateList\">{{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('state').invalid && companyForm.get('state').touched\">Select\r\n                                    States/Union territories.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-4\">\r\n                                <label>City <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"city\">\r\n                                    <option value='' selected hidden disabled>select States/Union territory\r\n                                    </option>\r\n                                    <option [value]='item.name' *ngFor=\"let item of cityList\">{{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyForm.get('city').invalid && companyForm.get('city').touched\">Select\r\n                                    city.</small>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"text-right\">\r\n                            <button type=\"submit\" class=\"btn btn-primary mt-5\" (click)=\"savCompany()\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ngx-photo-editor [imageChanedEvent]=\"imageChangedEvent\" (imageCropped)=\"imageCropped($event)\" [viewMode]=\"1\"\r\n    [aspectRatio]=\"1/1\" [darkTheme]=\"false\" [resizeToWidth]=\"200\" [resizeToHeight]=\"200\">\r\n</ngx-photo-editor>\r\n<input style=\"display: none;\" type=\"file\" accept=\"image/*\" #imagePicker (change)=\"fileChangeEvent($event)\" />","import * as $ from 'jquery';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../../account/account-api.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AwsService } from 'src/app/shared/AWS-Service/aws.service';\r\nimport { CompanyApiService } from '../company-api.service';\r\nimport { CroppedEvent } from 'ngx-photo-editor';\r\nimport { ProfileService } from '../../profile/profile.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\nimport { environment } from './../../../../environments/environment.prod';\r\n\r\n@Component({\r\n  selector: 'app-company-profile',\r\n  templateUrl: './company-profile.component.html',\r\n  styleUrls: ['./company-profile.component.scss']\r\n})\r\nexport class CompanyProfileComponent implements OnInit {\r\n  @ViewChild(\"imagePicker\", { static: false }) imagePicker: ElementRef;\r\n  add: any = \"assets/img/Add3.png\"\r\n  userDetail: any = {}\r\n  companyDetail;\r\n  companyUpdateForm: FormGroup;\r\n  imageEditorType: number;\r\n  imageChangedEvent;\r\n  industryList: any = common.industries;\r\n  countryList: any = common.country;\r\n  stateList: any = [];\r\n  cityList: any = [];\r\n  timelineImage: string = environment.defaultTimlineImage;\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private route: ActivatedRoute,\r\n    private companyApiService: CompanyApiService,\r\n    private accountApiService: AccountApiService,\r\n    private toaster: ToastrService,\r\n    private awsService: AwsService,\r\n    private fb: FormBuilder,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo()\r\n    this.initializeForm();\r\n  }\r\n  initializeForm() {\r\n    this.companyUpdateForm = this.fb.group({\r\n      city: [\"\", [Validators.required]],\r\n      contactNumber: [\"\", [Validators.required, Validators.pattern(common.phoneNumberRegex)]],\r\n      country: [\"\", [Validators.required]],\r\n      industry: [\"\", [Validators.required]],\r\n      logo: [\"\", [Validators.required]],\r\n      name: [\"\", [Validators.required]],\r\n      state: [\"\", [Validators.required]],\r\n      stages: [\"\", [Validators.required]],\r\n      websiteLink: [\"\", [Validators.required, Validators.pattern(common.urlRegex)]],\r\n      company_type: [\"\", [Validators.required]],\r\n      id: [\"\", [Validators.required]],\r\n    })\r\n\r\n  }\r\n\r\n  setFormValue(company) {\r\n    this.companyUpdateForm.patchValue({\r\n      city: company.city,\r\n      contactNumber: company.contactNumber,\r\n      country: company.country,\r\n      industry: company.industry,\r\n      logo: company.logo,\r\n      name: company.name,\r\n      state: company.state,\r\n      websiteLink: company.websiteLink,\r\n      company_type: company.company_type,\r\n      stages: company.stages,\r\n      id: company.id\r\n    })\r\n    this.selectCountry();\r\n  }\r\n\r\n  getInfo() {\r\n    this.userDetail = JSON.parse(CryptoJS.AES.decrypt(localStorage.getItem('Bolstart'), \"Bollstart\").toString(CryptoJS.enc.Utf8));\r\n    console.log(this.userDetail);\r\n    this.route.queryParams.subscribe(param => {\r\n      this.getCompanyDetail(param.companyId)\r\n    })\r\n  }\r\n\r\n  companyVerify() {\r\n    if (this.userDetail.isOwener) {\r\n      let obj = {\r\n        id: this.companyDetail.id,\r\n        isVerified: \"false\"\r\n      }\r\n      this.profileService.updateProfileInfo(obj).subscribe(res => {\r\n        if (res.success) {\r\n          this.companyDetail.isMobileVerified = \"true\";\r\n        }\r\n      })\r\n    };\r\n  }\r\n  getCompanyDetail(companyId) {\r\n    this.companyApiService.getCompanyDetail(companyId).subscribe(res => {\r\n      if (res.success) {\r\n        // this.companyDetail = res.data;\r\n        this.companyDetail = res.data;\r\n        console.log(this.companyDetail)\r\n        this.setFormValue(this.companyDetail)\r\n      }\r\n    })\r\n  }\r\n\r\n  getImage(type) {\r\n    try {\r\n      this.imageEditorType = type\r\n      this.imagePicker.nativeElement.click();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  fileChangeEvent(event: any) {\r\n    if (this.imageEditorType == 1) {\r\n      this.imageChangedEvent = event;\r\n    } else {\r\n      this.imageChangedEvent = event\r\n    }\r\n  }\r\n\r\n  imageCropped(event: CroppedEvent) {\r\n    if (this.imageEditorType == 1) {\r\n      this.awsService.uploadFile(event.file, \"profile\").then(res => {\r\n        this.companyUpdateForm.patchValue({\r\n          profile_url: res\r\n        })\r\n      })\r\n\r\n    } else {\r\n      this.awsService.uploadFile(event.file, \"company\").then(res => {\r\n        this.companyUpdateForm.patchValue({\r\n          logo: res\r\n        })\r\n        let obj = {\r\n          id: this.companyUpdateForm.value.id,\r\n          logo: this.companyUpdateForm.value.logo,\r\n          user_id: this.userDetail.id\r\n        }\r\n        this.companyApiService.updateCompany(obj).subscribe(res => {\r\n          if (res.success) {\r\n            this.toaster.success(res.message);\r\n            this.companyDetail = res.data;\r\n            this.setFormValue(this.companyDetail)\r\n          } else {\r\n            this.toaster.error(res.message);\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n  /* ===================== country select  =========================== */\r\n  selectCountry() {\r\n    let country = this.companyUpdateForm.value.country;\r\n    this.countryList.map(res => {\r\n      if (res.name == country) {\r\n        this.getStateList(res.id)\r\n      }\r\n    })\r\n  }\r\n\r\n  getStateList(countryID) {\r\n    this.accountApiService.getStateListBasedOnCountry(countryID).subscribe(res => {\r\n      if (res.success) {\r\n        this.stateList = res.data;\r\n        this.selectState();\r\n      }\r\n    })\r\n  }\r\n\r\n  selectState() {\r\n    let state = this.companyUpdateForm.value.state;\r\n    this.stateList.map(res => {\r\n      if (res.name == state) {\r\n        this.getCityList(res.id);\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityList(stateID) {\r\n    this.accountApiService.getCityListBasedOnState(stateID).subscribe(res => {\r\n      if (res.success) {\r\n        this.cityList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.companyUpdateForm.valid) {\r\n      let obj = {\r\n        city: this.companyUpdateForm.value.city,\r\n        contactNumber: this.companyUpdateForm.value.contactNumber,\r\n        country: this.companyUpdateForm.value.country,\r\n        description: this.companyUpdateForm.value.description,\r\n        id: this.companyUpdateForm.value.id,\r\n        industry: this.companyUpdateForm.value.industry,\r\n        logo: this.companyUpdateForm.value.logo,\r\n        name: this.companyUpdateForm.value.name,\r\n        profile_url: this.companyUpdateForm.value.profile_url,\r\n        state: this.companyUpdateForm.value.state,\r\n        stages: this.companyUpdateForm.value.state,\r\n        user_id: this.userDetail.id,\r\n        websiteLink: this.companyUpdateForm.value.websiteLink,\r\n      }\r\n      this.companyApiService.updateCompany(obj).subscribe(res => {\r\n        if (res.success) {\r\n          this.toaster.success(res.message);\r\n          $(\"#UpdateModel .close\").click();\r\n          this.companyDetail = res.data;\r\n          this.setFormValue(this.companyDetail)\r\n        } else {\r\n          this.toaster.error(res.message);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<section class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8 mb-2\">\r\n            <div class=\"card\">\r\n                <div class=\"bg\" [style.background-image]=\"timelineImage\">\r\n                    <!-- <i (click)=\"getImage(2)\" class=\"fa fa-camera fab right\" *ngIf=\"companyDetail?.isOwener\"></i> -->\r\n                    <div class=\"inner\">\r\n                        <div class=\"profile-image\">\r\n                            <img class=\"profile\" [src]=\"companyDetail?.logo\">\r\n                            <i (click)=\"getImage(2)\" class=\"fa fa-camera fab profile-edit\"\r\n                                *ngIf=\"userDetail?.company_id == companyDetail?.id\" data-target=\"#VerifyModel\"\r\n                                #VerifyModel data-toggle=\"modal\"></i>\r\n                        </div>\r\n                        <div class=\"custom-padding\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-8\">\r\n                                    <div class=\"name\" style=\"display: inline-flex;\">{{companyDetail?.name}}\r\n                                        ({{companyDetail?.company_type}})&nbsp; <h6 data-toggle=\"tooltip\"\r\n                                            data-placement=\"right\" title=\"Not Verified\" style=\"color: #F0541E;\"\r\n                                            *ngIf=\"companyDetail?.isVerified == 'false'\"><i\r\n                                                class=\"fa fa-exclamation-circle\"></i>&nbsp;\r\n\r\n                                        </h6>\r\n                                        <h6 data-toggle=\"tooltip\" data-placement=\"right\" title=\"Verified\"\r\n                                            style=\"color: #009944;\" *ngIf=\"companyDetail?.isVerified == 'approved'\"><i\r\n                                                class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\r\n                                            &nbsp;\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div>\r\n                                        <a href=\"//{{companyDetail?.websiteLink}}\" target=\"_blank\"\r\n                                            class=\"connection\">{{companyDetail?.websiteLink}}</a>\r\n                                    </div>\r\n                                    <span class=\"name_second\">{{companyDetail?.industry}}</span>\r\n                                    <div>\r\n                                        <span>{{companyDetail?.city}},\r\n                                            {{companyDetail?.state}},{{companyDetail?.country}}</span>\r\n                                    </div>\r\n                                    <!-- <div>\r\n                                        <a *ngIf=\"!companyDetail?.isOwener && companyDetail?.isFollowed == null\"\r\n                                            (click)=\"followRequest(companyDetail?.id)\">Follow</a>\r\n                                        <a *ngIf=\"!companyDetail?.isOwener && companyDetail?.isFollowed == 'true'\"\r\n                                            (click)=\"unfollowRequest(companyDetail?.id)\">Unfollow</a>\r\n                                    </div> -->\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <img *ngIf=\"userDetail?.company_id == companyDetail?.id\" class=\"pencil m-2\"\r\n                                        src=\"assets/logo/edit.svg\" data-target=\"#UpdateModel\" data-toggle=\"modal\">\r\n                                </div>\r\n                                <!-- <div class=\"col-4\">\r\n                                    <img *ngIf=\"companyDetail?.isOwener\" class=\"pencil m-2\" src=\"assets/logo/pen.svg\"\r\n                                        data-target=\"#UpdateModel\" data-toggle=\"modal\">\r\n                                    <button class=\"btn btn-primary ml-5\"\r\n                                        *ngIf=\"!companyDetail?.isOwener && companyDetail?.isConnected == null\"\r\n                                        (click)=\"sendRequest(companyDetail?.id)\">Reach\r\n                                        Out</button>\r\n                                    <button class=\"btn btn-outline-primary ml-5\"\r\n                                        *ngIf=\"!companyDetail?.isOwener && companyDetail?.isConnected == 'false' \"\r\n                                        (click)=\"cancelRequest(companyDetail?.id)\">Cancel\r\n                                        Request</button>\r\n                                    <button class=\"btn btn-primary ml-5\"\r\n                                        *ngIf=\"!companyDetail?.isOwener && companyDetail?.isConnected == 'true'\"\r\n                                        (click)=\"deleteConnection(companyDetail?.id)\">Disconnect</button>\r\n\r\n\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"display: inline-flex;\">\r\n                            <div class=\"btn-1\" routerLink=\"./publish\" [queryParams]=\"{companyId:companyDetail?.id}\"\r\n                                routerLinkActive=\"active-link\">Updates</div> &nbsp;\r\n                            <div class=\"btn-1\" routerLink=\"./detail\" [queryParams]=\"{companyId:companyDetail?.id}\"\r\n                                routerLinkActive=\"active-link\">About</div>&nbsp;\r\n                            <div class=\"btn-1\" routerLink=\"./employee\" [queryParams]=\"{companyId:companyDetail?.id}\"\r\n                                routerLinkActive=\"active-link\">Employee\r\n                            </div>&nbsp; &nbsp;\r\n                            <span style=\"padding-top: 5px; cursor: pointer;\">\r\n                                <!-- <h6 style=\"color: #F0541E;\" (click)=\"companyVerify()\"\r\n                                    *ngIf=\"companyDetail?.isVerified == null \">\r\n                                    <i class=\"fa fa-close\"></i>&nbsp;Not verified\r\n                                </h6>\r\n                                <h6 style=\"color: #63c0df;\"\r\n                                    *ngIf=\"companyDetail?.isVerified == 'false' && userDetail?.isOwener\">\r\n                                    <i class=\"fa fa-spinner fa-spin fa-1x\"></i>&nbsp;\r\n                                    Request Pending\r\n                                </h6>\r\n                                <h6 style=\"color: #F0541E;\"\r\n                                    *ngIf=\"companyDetail?.isVerified == 'false' && !userDetail?.isOwener\"><i\r\n                                        class=\"fa fa-close\"></i>&nbsp;\r\n                                    Not Verified\r\n                                </h6> -->\r\n\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n        <div class=\"d-none d-md-block col-md-4 mb-2\">\r\n            <app-company-top-member *ngIf=\"companyDetail != null\" [companyId]=\"companyDetail?.id\"\r\n                [userDetail]=\"userDetail\"></app-company-top-member>\r\n            <app-address-book\r\n                *ngIf=\"companyDetail?.id != null && (userDetail?.company_id == companyDetail?.id && (userDetail.userRole == 'owner' || userDetail.userRole == 'Admin' )) \"\r\n                [companyId]=\"companyDetail?.id\" [userDetail]=\"userDetail\"></app-address-book>\r\n            <advertisement [image]=\"add\"></advertisement>\r\n        </div>\r\n    </div>\r\n\r\n</section>\r\n\r\n<div class=\"modal fade\" id=\"UpdateModel\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-3\">\r\n            <div class=\"modal-Custheader p-2\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h6 class=\"modal-title\">Update Company Information</h6>\r\n            </div>\r\n            <div>\r\n                <form [formGroup]=\"companyUpdateForm\">\r\n                    <div class=\"content\">\r\n                        <div class=\"row pt-2\">\r\n\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Company Name <span class=\"mandatory\">*</span></label>\r\n                                <input class=\"form-control\" placeholder=\"Company Name\" formControlName=\"name\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('name').invalid && companyUpdateForm.get('name').touched\">Enter\r\n                                    Company Name.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Website Url <span class=\"mandatory\">*</span>\r\n                                </label>\r\n                                <input class=\"form-control\" placeholder=\"Website Url\" formControlName=\"websiteLink\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('websiteLink').invalid && companyUpdateForm.get('websiteLink').touched\">Enter\r\n                                    Website URL.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-6\">\r\n                                <label>stages <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"stages\">\r\n                                    <option value=\"Bootstrapped\">Bootstrapped</option>\r\n                                    <option value=\"Pre-Seed\">Pre-Seed</option>\r\n                                    <option value=\"Seed\">Seed</option>\r\n                                    <option value=\"Series A\">Series A</option>\r\n                                    <option value=\"Series B\">Series B</option>\r\n                                    <option value=\"Series c\">Series C</option>\r\n                                    <option value=\"Series D\">Series D</option>\r\n                                    <option value=\"Series E\">Series E</option>\r\n                                    <option value=\"Series F\">Series F</option>\r\n                                    <option value=\"Series G\">Series G</option>\r\n                                    <option value=\"Pre-IPO\">Pre-IPO</option>\r\n                                    <option value=\"IPO\"> IPO</option>\r\n                                    <option value=\"Seed\">Seed</option>\r\n                                    <option value=\"Pre series\">Pre series</option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('stages').invalid && companyUpdateForm.get('stages').touched\">Select\r\n                                    Stages.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Mobile Number <span class=\"mandatory\">*</span></label>\r\n                                <div style=\"display: flex;\">\r\n                                    <select class=\"form-control\" style=\"width: 65px;\">\r\n                                        <option>+91</option>\r\n                                        <option>+1</option>\r\n                                    </select> &nbsp;\r\n                                    <input class=\"form-control\" placeholder=\"Enter mobile number\"\r\n                                        formControlName=\"contactNumber\">\r\n\r\n                                </div>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('contactNumber').invalid && companyUpdateForm.get('contactNumber').touched\">Enter\r\n                                    Mobile Number.</small>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Industry <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"industry\">\r\n                                    <option value=\"\" selected hidden disabled>Select Industry</option>\r\n                                    <option *ngFor=\"let item of industryList\" [value]=\"item\">{{item}}</option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('industry').invalid && companyUpdateForm.get('industry').touched\">Select\r\n                                    Industry</small>\r\n                            </div>\r\n                            <div class=\"col col-md-6\">\r\n                                <label>Company Type <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"company_type\">\r\n                                    <option value=\"\" selected hidden disabled>Company Type</option>\r\n                                    <option value=\"Public\">Public</option>\r\n                                    <option value=\"Private\">Private</option>\r\n                                    <option value=\"etc\">etc</option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('company_type').invalid && companyUpdateForm.get('company_type').touched\">Select\r\n                                    Company Type</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-4\">\r\n                                <label>Country <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"country\" (change)=\"selectCountry()\">\r\n                                    <option value='' selected hidden disabled>select country\r\n                                    </option>\r\n                                    <option [value]='item.name' *ngFor=\"let item of countryList\">{{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('country').invalid && companyUpdateForm.get('country').touched\">Select\r\n                                    Country.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-4\">\r\n                                <label>States/Union territories <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"state\" (change)=\"selectState()\">\r\n                                    <option value='' selected hidden disabled>select States/Union territory\r\n                                    </option>\r\n                                    <option [value]='item.name' *ngFor=\"let item of stateList\">{{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('state').invalid && companyUpdateForm.get('state').touched\">Select\r\n                                    States/Union territories.</small>\r\n                            </div>\r\n                            <div class=\"col col-md-4\">\r\n                                <label>City <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"city\">\r\n                                    <option value='' selected hidden disabled>select States/Union territory\r\n                                    </option>\r\n                                    <option [value]='item.name' *ngFor=\"let item of cityList\">{{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"companyUpdateForm.get('city').invalid && companyUpdateForm.get('city').touched\">Select\r\n                                    city.</small>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"row pt-2\">\r\n                            <div class=\"col col-md-4\"></div>\r\n                            <div class=\"col col-md-4 text-center\">\r\n                                <label>Company Logo <span class=\"mandatory\">*</span></label>\r\n                                <div>\r\n                                    <img class=\"logo\" [src]=\"companyUpdateForm.value.logo\">\r\n                                    <i class=\"fa fa-camera fab center\" (click)=\"getImage(2)\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col col-md-4\"></div>\r\n                        </div> -->\r\n                        <div class=\"text-center\">\r\n                            <button type=\"submit\" class=\"btn btn-primary mt-5\" (click)=\"onSubmit()\">Submit</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ngx-photo-editor [imageChanedEvent]=\"imageChangedEvent\" (imageCropped)=\"imageCropped($event)\" [viewMode]=\"1\"\r\n    [aspectRatio]=\"1/1\" [darkTheme]=\"false\">\r\n</ngx-photo-editor>\r\n<input style=\"display: none;\" type=\"file\" accept=\"image/*\" #imagePicker (change)=\"fileChangeEvent($event)\" />","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { CompanyApiService } from '../company-api.service';\r\nimport { ProfileService } from '../../profile/profile.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-company-top-member',\r\n  templateUrl: './company-top-member.component.html',\r\n  styleUrls: ['./company-top-member.component.scss']\r\n})\r\nexport class CompanyTopMemberComponent implements OnInit {\r\n  @Input() companyId: any;\r\n  @Input() userDetail: any\r\n\r\n  memberList: any = [];\r\n  currentPage: number = 0;\r\n\r\n  constructor(\r\n    private companyService: CompanyApiService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n\r\n  }\r\n  getInfo() {\r\n    this.getMemberList(this.currentPage, 5)\r\n  }\r\n\r\n  viewAll() {\r\n\r\n  }\r\n\r\n  getMemberList(currentPage, size) {\r\n    this.companyService.getMemberList(this.companyId, currentPage, size).subscribe(res => {\r\n      if (res.success) {\r\n        this.memberList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  checkProfile(id) {\r\n    localStorage.setItem(\"visit\", id);\r\n    this.router.navigate(['../profile/timeline'], { queryParams: { visit: id } });\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <h6 class=\"head\">Company Employee</h6>\r\n        <label class=\"view pointer\" routerLink=\"./employee\" [queryParams]=\"{companyId:companyId}\"\r\n            routerLinkActive=\"active-link\">View All</label>\r\n\r\n    </div>\r\n    <ul>\r\n        <li *ngFor=\"let item of memberList\">\r\n            <a (click)=\"checkProfile(item.id)\"><img class=\"profile\"\r\n                    [src]=\"item.profilePicture\" />&nbsp;{{item.firstName}} {{item.lastName}}\r\n                <b style=\"color:#293266 ;\" *ngIf=\"item.userRole != null\">({{item.userRole}})</b></a>\r\n        </li>\r\n    </ul>\r\n</div>","import * as $ from 'jquery';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { CompanyApiService } from './../company-api.service';\r\nimport { ProfileService } from './../../profile/profile.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\n@Component({\r\n  selector: 'app-company-member',\r\n  templateUrl: './company-member.component.html',\r\n  styleUrls: ['./company-member.component.scss']\r\n})\r\nexport class CompanyMemberComponent implements OnInit {\r\n  public addEmployeeForm: FormGroup;\r\n  keyWord: string;\r\n  userList: any = [];\r\n  isShow: boolean = false;\r\n  selectedUser: any;\r\n  role: string = \"\";\r\n  memberList: any = [];\r\n  userDetail: any = {};\r\n  currentPage: number = 0;\r\n  throttle = 150;\r\n  scrollDistance = 1;\r\n  scrollUpDistance = 1.5;\r\n  yeaList: any = common.years();\r\n  monthList: any = common.month;\r\n  isShowList: boolean = true\r\n  searchList = [];\r\n  companyDetail: any\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private fb: FormBuilder,\r\n    private companyService: CompanyApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n    this.initializeExpForm();\r\n  }\r\n\r\n  initializeExpForm() {\r\n    this.addEmployeeForm = this.fb.group({\r\n      userId: ['', [Validators.required]],\r\n      startYear: ['', [Validators.required]],\r\n      startMonth: ['', [Validators.required]],\r\n      isWorking: [true],\r\n      userName: ['', [Validators.required]],\r\n      profileImage: ['', Validators.required],\r\n      title: ['', [Validators.required]],\r\n\r\n    })\r\n  }\r\n\r\n  getInfo() {\r\n    this.userDetail = JSON.parse(CryptoJS.AES.decrypt(localStorage.getItem('Bolstart'), \"Bollstart\").toString(CryptoJS.enc.Utf8));\r\n    this.route.queryParams.subscribe(param => {\r\n      console.log(param)\r\n      this.getCompanyDetail(param.companyId)\r\n    })\r\n\r\n\r\n  }\r\n\r\n  getMemberList(currentPage, size) {\r\n    this.companyService.getMemberList(this.companyDetail.id, currentPage, size).subscribe(res => {\r\n      if (res.success) {\r\n        this.memberList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteMember(item, index) {\r\n    this.companyService.removeMember(item.id, this.companyDetail.id).subscribe(res => {\r\n      if (res.success) {\r\n        this.memberList.splice(index, 1)\r\n      }\r\n    })\r\n  }\r\n\r\n  addEmployeeRole(item) {\r\n    this.companyService.assignEmployeeRole(item.id, item.userRole, this.companyDetail.id).subscribe(res => {\r\n      if (!res.success) {\r\n        this.toastr.warning(res.message)\r\n      }\r\n    })\r\n  }\r\n  checkProfile(id) {\r\n    localStorage.setItem(\"visit\", id);\r\n    this.router.navigate(['../profile/timeline'], { queryParams: { visit: id } });\r\n  }\r\n\r\n  onAddEmployee() {\r\n    let obj = {\r\n      companyId: this.companyDetail.id,\r\n      companyName: this.companyDetail.name,\r\n      companyLogo: this.companyDetail.logo,\r\n      startMonth: this.addEmployeeForm.value.startMonth,\r\n      startYear: this.addEmployeeForm.value.startYear,\r\n      title: this.addEmployeeForm.value.title,\r\n      userId: this.addEmployeeForm.value.userId,\r\n      working: true\r\n    }\r\n    this.companyService.addEmployeeByAdmin(obj).subscribe(res => {\r\n      if (res.success) {\r\n        this.getMemberList(this.currentPage, 20);\r\n        this.addEmployeeForm.reset();\r\n        $(\"#addEmployee .close\").click();\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  selectEmployee(item) {\r\n    this.addEmployeeForm.patchValue({\r\n      userId: item.id,\r\n      userName: item.firstName + \" \" + item.lastName,\r\n      profileImage: item.profilePicture,\r\n    })\r\n  }\r\n\r\n  onFocus() {\r\n    this.isShowList = true\r\n  }\r\n\r\n  search() {\r\n    if (this.addEmployeeForm.value.userName.length > 2) {\r\n      this.profileService.searchOnlyUser(this.addEmployeeForm.value.userName, this.userDetail.id).subscribe(res => {\r\n        if (res.success) {\r\n          this.searchList = res.data;\r\n        }\r\n      })\r\n    } else {\r\n      this.addEmployeeForm.patchValue({\r\n        profileImage: \"\",\r\n        userId: \"\"\r\n      })\r\n      return\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    setTimeout(() => {\r\n      this.isShowList = false;\r\n      this.searchList = [];\r\n    }, 500)\r\n  }\r\n  getCompanyDetail(companyId) {\r\n    this.companyService.getCompanyDetail(companyId).subscribe(res => {\r\n      if (res.success) {\r\n        this.companyDetail = res.data\r\n        this.getMemberList(this.currentPage, 20)\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"card custom-height\">\r\n    <!-- <div class=\"card-header\">\r\n      \r\n    </div> -->\r\n    <div class=\"card-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-11\">\r\n                <h5>Company Employee </h5>\r\n            </div>\r\n            <div class=\"col-1\">\r\n                <img *ngIf=\"userDetail?.company_id == companyDetail?.id\" class=\"pencil\" src=\"assets/logo/plus.svg\"\r\n                    data-target=\"#addEmployee\" data-toggle=\"modal\" style=\"width: 25px;\">\r\n            </div>\r\n        </div>\r\n        <div class=\"emp-list\" *ngIf=\"memberList.length > 0\">\r\n            <div class=\"row mb-2\" *ngFor=\"let item of memberList;let i = index;\">\r\n                <div class=\"col-7\">\r\n                    <div style=\"display: flex;\">\r\n                        <img [src]=\"item.profilePicture\" class=\"profile\" (click)=\"checkProfile(item.id)\" />&nbsp;\r\n                        <h6 class=\"pt-2\">\r\n                            <span (click)=\"checkProfile(item.id)\">{{item.firstName}} {{item.lastName}}</span>\r\n                            <br>\r\n                            <label style=\"color: darkgray;\">{{item.headline}}</label>\r\n                            <br>\r\n                            <label class=\"text-primary\" *ngIf=\"item.userRole != null\">(<b>{{item.userRole}}</b>)</label>\r\n\r\n                        </h6>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                    <select class=\"form-control\"\r\n                        *ngIf=\"userDetail?.company_id == companyDetail.id && item.userRole != 'owner'\"\r\n                        [(ngModel)]=\"item.userRole\" (change)=\"addEmployeeRole(item)\">\r\n                        <option value=null selected hidden disabled>Select Employee Role</option>\r\n                        <option value=\"Admin\">Admin</option>\r\n                        <option value=\"Employee\">Employee</option>\r\n                    </select>\r\n                </div>\r\n                <div></div>\r\n                <div class=\"col-1 mb-2\" *ngIf=\"userDetail?.company_id == companyDetail.id && item.userRole != 'owner' \">\r\n                    <span class=\"add-trash\"><i class=\"fa fa-trash\" (click)=\"deleteMember(item,i)\"></i></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"addEmployee\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content p-3\">\r\n                <div class=\"modal-Custheader p-2\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h6 class=\"modal-title\">Add Employee</h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div>\r\n                        <form class=\"p-2\" [formGroup]=\"addEmployeeForm\" (submit)=\"onAddEmployee()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-md-12 p-2\">\r\n                                    <label>Employee Name <span class=\"mandatory\">*</span></label>\r\n                                    <div class=\"form-control\">\r\n                                        <img [src]=\"addEmployeeForm.value.profileImage\" style=\"width: 23px;\">\r\n                                        <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"search()\"\r\n                                            class=\"school\" placeholder=\"eg. Adam Smith\" formControlName=\"userName\">\r\n                                    </div>\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"addEmployeeForm.get('userName').invalid && addEmployeeForm.get('userName').touched\">Select\r\n                                        Employee.</small>\r\n                                    <div class=\"card list\" *ngIf=\"isShowList && searchList.length > 0\">\r\n                                        <ul>\r\n                                            <li *ngFor=\"let item of searchList\">\r\n                                                <span style=\"display: flex;\" (click)=\"selectEmployee(item)\">\r\n                                                    <img [src]=\"item.profilePicture\" class=\"profile\" />&nbsp;\r\n                                                    <h6 class=\"pt-2\">\r\n                                                        {{item.firstName}}&nbsp;{{item.lastName}}<br>\r\n                                                        <label style=\"color: darkgray;\">{{item.headline}}</label>\r\n                                                    </h6>\r\n                                                </span>\r\n                                                <hr>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-md-12 p-2\">\r\n                                    <label>Title<span class=\"mandatory\">*</span></label>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"eg. Sales Manager\"\r\n                                        formControlName=\"title\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"addEmployeeForm.get('title').invalid && addEmployeeForm.get('title').touched\">Enter\r\n                                        Title.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-3 p-2\">\r\n                                    <label>Start Date <span class=\"mandatory\">*</span></label>\r\n                                    <select class=\"form-control\" formControlName=\"startYear\">\r\n                                        <option value='' selected disabled hidden>Start year</option>\r\n                                        <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"col col-xl-3 p-3\">\r\n                                    <label></label>\r\n                                    <select class=\"form-control\" formControlName=\"startMonth\">\r\n                                        <option value='' selected hidden disabled>Start Month</option>\r\n                                        <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-right\">\r\n                                <button type=\"submit\" [disabled]=\"addEmployeeForm.invalid\"\r\n                                    class=\"btn btn-outline-primary\">Add Employee</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export const environment = {\r\n  production: true,\r\n  //baseUrl: \"http://ec2-13-233-64-33.ap-south-1.compute.amazonaws.com:8080/BolStart/api/\",\r\n  baseUrl: \"https://api.bolstart.com/bolstart/api/\",\r\n  jobPostBaseUrl:\"https://api.bolstart.com/bolstart/\",\r\n  //baseUrl: \"https://tablabs-dialindia.herokuapp.com/api/\",\r\n  defaultPic: \"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/profile_avater.png\",\r\n  defaultTimlineImage: \"url(https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/timline.jpg)\"\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.scss']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<section class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</section>","import { AddressBookComponent } from './address-book/address-book.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompanyApiService } from './company-api.service';\r\nimport { CompanyComponent } from './company.component';\r\nimport { CompanyInfoComponent } from './company-info/company-info.component';\r\nimport { CompanyMemberComponent } from './company-member/company-member.component';\r\nimport { CompanyProfileComponent } from './company-profile/company-profile.component';\r\nimport { CompanyPublishComponent } from './company-publish/company-publish.component';\r\nimport { CompanyRoutingModule } from './company-routing.module';\r\nimport { CompanyTopMemberComponent } from './company-top-member/company-top-member.component';\r\nimport { CreateCompanyComponent } from './create-company/create-company.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxPhotoEditorModule } from 'ngx-photo-editor';\r\nimport { SharedModule } from './../../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [CompanyComponent, CreateCompanyComponent, CompanyProfileComponent, CompanyPublishComponent, CompanyInfoComponent, CompanyMemberComponent, CompanyTopMemberComponent, AddressBookComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CompanyRoutingModule,\r\n    SharedModule,\r\n    NgxPhotoEditorModule\r\n\r\n  ],\r\n  providers: [CompanyApiService],\r\n  exports: [CompanyPublishComponent, CompanyInfoComponent]\r\n})\r\nexport class CompanyModule { }\r\n","import * as CryptoJS from 'crypto-js';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { CompanyApiService } from '../company-api.service';\r\nimport { ProfileService } from '../../profile/profile.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-address-book',\r\n  templateUrl: './address-book.component.html',\r\n  styleUrls: ['./address-book.component.scss']\r\n})\r\nexport class AddressBookComponent implements OnInit {\r\n  @Input() companyId: any;\r\n  @Input() userDetail: any\r\n\r\n  groupName: any = \"\";\r\n  selectedGroup: any;\r\n  groupList = []\r\n  selectedGroupID: any;\r\n  selectedForEdit: number;\r\n\r\n  emailId: any = \"\";\r\n  firstName: any = \"\";\r\n  lastName: any = \"\";\r\n  memberList: any;\r\n  isShow: boolean;\r\n  selectedUserList: any = [];\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private companyService: CompanyApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getInfo();\r\n\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.getAddresssBookByComId()\r\n  }\r\n\r\n  getInfo() {\r\n    let encrypt = localStorage.getItem('Bolstart');\r\n    this.userDetail = JSON.parse(CryptoJS.AES.decrypt(encrypt, \"Bollstart\").toString(CryptoJS.enc.Utf8))\r\n  }\r\n  submitGroup() {\r\n    if (this.groupName != \"\") {\r\n      let obj = {\r\n        companyId: this.companyId,\r\n        emailId: [],\r\n        groupName: this.groupName,\r\n      }\r\n      this.companyService.createAddressBook(obj).subscribe(res => {\r\n        if (res.success) {\r\n          this.groupName = \"\";\r\n          this.selectedGroup = res.data;\r\n          console.log(this.userDetail)\r\n          this.selectUser(this.userDetail);\r\n          this.getAddresssBookByComId();\r\n          this.selectedGroup = {}\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getAddresssBookByComId() {\r\n    this.companyService.getAddressBookByCompanyId(this.companyId).subscribe(res => {\r\n      if (res.success) {\r\n        this.groupList = res.data;\r\n      }\r\n    })\r\n  }\r\n  onEditGroupName(index) {\r\n    if (this.selectedForEdit !== index) {\r\n      this.selectedForEdit = index\r\n    } else {\r\n      this.selectedForEdit = null\r\n    }\r\n\r\n  }\r\n  updateGroupName(item) {\r\n    let obj = {\r\n      companyId: item.companyId,\r\n      groupName: item.groupName,\r\n      emailId: item.emailId,\r\n      id: item.id\r\n    }\r\n    this.companyService.updateAddressBook(obj).subscribe(res => {\r\n      if (res.success) {\r\n        this.getAddresssBookByComId()\r\n        this.selectedForEdit = null;\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteGroup(groupId) {\r\n    this.selectedGroupID = groupId\r\n  }\r\n\r\n  confirmDelete() {\r\n    this.companyService.deleteAddressBook(this.selectedGroupID).subscribe(res => {\r\n      if (res.success) {\r\n        this.selectedGroup = {};\r\n        this.selectedUserList = [];\r\n        this.getAddresssBookByComId();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /* Member List */\r\n  selectGroup(item) {\r\n    this.selectedGroup = item;\r\n    this.getAddressBookById(item.id)\r\n  }\r\n  getList() {\r\n    if (this.firstName != \"\") {\r\n      this.profileService.searchOnlyUser(this.firstName, this.userDetail.id).subscribe(res => {\r\n        if (res.success) {\r\n          this.memberList = res.data;\r\n          this.isShow = true;\r\n        } else {\r\n          this.memberList = [];\r\n          this.isShow = false;\r\n        }\r\n      })\r\n    } else {\r\n      this.memberList = [];\r\n      this.isShow = false;\r\n    }\r\n  }\r\n\r\n  selectUser(item) {\r\n    let newUser: any = []\r\n    newUser.push({ user_id: item.id, emailid: item.emailId, profile_piture: item.profilePicture, firstName: `${item.firstName}`, lastName: `${item.lastName}` })\r\n    console.log(newUser)\r\n    this.companyService.addMemberInGroup(newUser, this.userDetail.id, this.selectedGroup.id).subscribe(res => {\r\n      if (res.success) {\r\n        this.getAddresssBookByComId()\r\n        this.getAddressBookById(this.selectedGroup.id)\r\n\r\n      }\r\n    })\r\n    this.isShow = false;\r\n  }\r\n\r\n  getAddressBookById(id) {\r\n    this.companyService.getAddressBookById(id).subscribe(res => {\r\n      if (res.success) {\r\n        this.selectedUserList = [];\r\n        this.selectedUserList = res.data.emailId\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteMember(index) {\r\n    this.selectedUserList.splice(index, 1);\r\n    let obj = {\r\n      emailId: this.selectedUserList,\r\n      id: this.selectedGroup.id\r\n    }\r\n\r\n    this.companyService.updateAddressBook(obj).subscribe(res => {\r\n      if (res.success) {\r\n        this.getAddresssBookByComId()\r\n        this.getAddressBookById(this.selectedGroup.id)\r\n      }\r\n    })\r\n  }\r\n  addGuest() {\r\n    if (this.firstName != \"\" && this.lastName != \"\" && this.emailId != \"\") {\r\n      let newUser: any = []\r\n      newUser.push({ user_id: null, emailid: this.emailId, profile_piture: environment.defaultPic, firstName: this.firstName, lastName: this.lastName })\r\n      this.companyService.addMemberInGroup(newUser, this.userDetail.id, this.selectedGroup.id).subscribe(res => {\r\n        if (res.success) {\r\n          this.firstName = \"\";\r\n          this.lastName = \"\";\r\n          this.emailId = \"\";\r\n          this.getAddresssBookByComId()\r\n          this.getAddressBookById(this.selectedGroup.id)\r\n        }\r\n      })\r\n      this.isShow = false;\r\n    }\r\n  }\r\n  hide() {\r\n    setTimeout(() => {\r\n      this.isShow = false;\r\n    }, 1000)\r\n\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <h6 class=\"head\">Address Book</h6>\r\n        <label class=\"view pointer\" data-target=\"#memberList\" data-toggle=\"modal\">View All</label>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <ul>\r\n            <li *ngFor=\"let item of groupList\" (click)=\"selectGroup(item)\" class=\"groupLabel pointer\"\r\n                data-target=\"#memberList\" data-toggle=\"modal\">\r\n                {{item.groupName}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"memberList\" role=\"dialog\">\r\n    <div class=\"modal-dialog md-lg\">\r\n        <div class=\"modal-content p-3\">\r\n            <div class=\"modal-Custheader p-2\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h6 class=\"modal-title\">Address Book</h6>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-4 group-section\">\r\n                        <div class=\"add-group\">\r\n                            <input class=\"form-control\" [(ngModel)]=\"groupName\" placeholder=\"Enter New Group\"> &nbsp; <i\r\n                                class=\"fa fa-plus fab-add\" (click)=\"submitGroup()\"></i>\r\n                        </div>\r\n                        <hr>\r\n\r\n                        <div *ngIf=\"groupList.length > 0\">\r\n                            <ul>\r\n                                <li *ngFor=\"let item of groupList;let i = index;\">\r\n                                    <label class=\"groupLabel pointer\"\r\n                                        [ngClass]=\"{selectedLabel: item.groupName == selectedGroup?.groupName}\"\r\n                                        *ngIf=\"selectedForEdit != i\"\r\n                                        (click)=\"selectGroup(item)\">{{item.groupName}}</label>\r\n                                    <span class=\"group-edit\" *ngIf=\"selectedForEdit == i\">\r\n                                        <input [(ngModel)]=\"item.groupName\" class=\"form-control\" /> &nbsp;\r\n                                        <i class=\"fa fa-check fab-add\" (click)=\"updateGroupName(item)\"></i>\r\n                                        <i class=\"fa fa-close fab-add\" (click)=\"onEditGroupName(i)\"></i>\r\n                                    </span>\r\n                                    <span class=\"add-trash\" *ngIf=\"selectedForEdit != i\"><i class=\"fa fa-window-close\"\r\n                                            data-toggle=\"modal\" data-target=\"#deleteModel\"\r\n                                            (click)=\" deleteGroup(item.id)\"></i>\r\n                                        &nbsp; <i class=\"fa fa-edit\" (click)=\"onEditGroupName(i)\"></i></span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                        <div style=\"padding-top: 11px;\">\r\n                            <label class=\"groupLabel\">{{selectedGroup?.groupName}}</label>\r\n                        </div>\r\n                        <hr>\r\n                        <div *ngIf=\"selectedGroup != undefined\">\r\n                            <div class=\"add-member\">\r\n                                <input class=\"form-control\" [(ngModel)]=\"firstName\" (focusout)=\"hide()\"\r\n                                    (keyup)=\"getList()\" placeholder=\"First Name\">&nbsp;\r\n                                <input class=\"form-control\" [(ngModel)]=\"lastName\" placeholder=\"Last Name\">&nbsp;\r\n                                <input style=\"width: 20rem;\" [(ngModel)]=\"emailId\" class=\"form-control\"\r\n                                    placeholder=\"Email Id\">&nbsp;\r\n                                <i class=\"fa fa-plus fab-add\" (click)=\"addGuest()\"></i>\r\n                            </div>\r\n                            <div class=\"card position\" *ngIf=\"isShow && memberList.length > 0\">\r\n                                <ul>\r\n                                    <li *ngFor=\"let item of memberList\">\r\n                                        <span style=\"display: flex;\" (click)=\"selectUser(item)\">\r\n                                            <img [src]=\"item.profilePicture\" class=\"profile\" />&nbsp;\r\n                                            <h6 class=\"pt-2\">\r\n                                                {{item.firstName}}&nbsp;{{item.lastName}}<br>\r\n                                                <label style=\"color: darkgray;\">{{item.headline}}</label>\r\n                                            </h6>\r\n                                        </span>\r\n                                        <hr>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ul>\r\n                                    <li *ngFor=\"let item of selectedUserList;let i= index\">\r\n                                        <a><img class=\"profile\" [src]=\"item.profile_piture\" />&nbsp;{{item.firstName}}\r\n                                            {{item.lastName}}\r\n                                            <b style=\"color:#293266 ;\">({{item.emailid}})</b></a>\r\n                                        <span class=\"add-trash second\"><i class=\"fa fa-trash\"\r\n                                                (click)=\"deleteMember(i)\"></i></span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"deleteModel\" role=\"dialog\">\r\n    <div class=\"modal-dialog  modal-sm\">\r\n        <div class=\"modal-content p-3\">\r\n            <div class=\"modal-Custheader p-2\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h6 class=\"modal-title\">Delete Group</h6>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <label>Are sure want to delete group</label>\r\n                <div class=\"text-right\">\r\n                    <label class=\"text-info\" data-dismiss=\"modal\" aria-label=\"Close\">Cancel</label> &nbsp;\r\n                    <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"confirmDelete()\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CompanyComponent } from './company.component';\r\nimport { CompanyInfoComponent } from './company-info/company-info.component';\r\nimport { CompanyMemberComponent } from './company-member/company-member.component';\r\nimport { CompanyProfileComponent } from './company-profile/company-profile.component';\r\nimport { CompanyPublishComponent } from './company-publish/company-publish.component';\r\nimport { CreateCompanyComponent } from './create-company/create-company.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', \r\n    component: CompanyComponent,\r\n    children: [\r\n      {\r\n        path: 'createCompany',\r\n        component: CreateCompanyComponent\r\n      }\r\n    ],\r\n\r\n  },\r\n  {\r\n    path: \"companyinfo\",\r\n    component: CompanyProfileComponent,\r\n    children: [\r\n      {\r\n        path: 'publish',\r\n        component: CompanyPublishComponent\r\n      },\r\n      {\r\n        path: 'detail',\r\n        component: CompanyInfoComponent\r\n      },\r\n      {\r\n        path: 'employee',\r\n        component: CompanyMemberComponent\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n"]}