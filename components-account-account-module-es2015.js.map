{"version":3,"sources":["./src/app/components/account/account.component.ts","./src/app/components/account/account.component.html","./src/app/components/account/forgotpassword/forgotpassword.component.ts","./src/app/components/account/forgotpassword/forgotpassword.component.html","./src/app/components/account/account-routing.module.ts","./src/app/components/account/login/login.component.ts","./src/app/components/account/login/login.component.html","./src/app/components/account/new-profile/new-profile.component.ts","./src/app/components/account/new-profile/new-profile.component.html","./node_modules/angularx-social-login/__ivy_ngcc__/fesm2015/angularx-social-login.js","./src/app/components/account/account.module.ts"],"names":[],"mappings":"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;;;AErBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAC9B;AACJ;AACb;;AAEM;AACxC;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,sBAAsB,2BAA2B;AACpI;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,gCAAgC;AAC9F;AACA,SAAS;AACT;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAa;AAC3C;AACA;AACA,8BAA8B,iDAAY;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gEAAgE,qCAAqC,sDAAe,6BAA6B;AACjJ,0BAA0B,gEAAyB,EAAE,4DAA4D;AACjH;AACA;AACA;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,sCAAsC;AACxF;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAuB,EAAE,0BAA0B;AAC5E,yBAAyB,8DAAuB,EAAE,iDAAiD,qCAAqC,sDAAe,yBAAyB,EAAE;AAClL;AACA;AACA,YAAY,4DAAY;AACxB,YAAY;AACZ;AACA,KAAK,wCAAwC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE;AAClF;AACA,cAAc,oDAAoD,gEAAyB,qBAAqB,uBAAuB,SAAS,4DAAY,EAAE,EAAE,EAAE,EAAE,EAAE;AACtK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,MAAM;AACX;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,wBAAwB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,kEAAkE,kCAAkC;AACpG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8DAA8D,gCAAgC;AAC9F;AACA,SAAS;AACT;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oDAAoD,GAAG,QAAQ;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB,GAAG,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iBAAiB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,0BAA0B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6DAA6D,mCAAmC;AAChG;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAE6M;;AAE7M,iD;;;;;;;;;;;;AC72BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACjB;AACiB;AAEzB;AACH;AACS;AACjB;AACqC;AAC3B;AACiB;AACjC;;AAgClC,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBArBb,CAAC,sEAAiB,EAC3B;YACE,OAAO,EAAE,yBAAyB;YAClC,QAAQ,EAAE;gBACR,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE;oBACT;wBACE,EAAE,EAAE,yEAAmB,CAAC,WAAW;wBACnC,QAAQ,EAAE,IAAI,yEAAmB,CAC/B,0EAA0E,CAC3E;qBACF;oBACD;wBACE,EAAE,EAAE,2EAAqB,CAAC,WAAW;wBACrC,QAAQ,EAAE,IAAI,2EAAqB,CAAC,iBAAiB,CAAC;qBACvD;iBACF;aACyB;SAC7B;KACF,YA1BQ;YACP,4DAAY;YACZ,kEAAmB;YACnB,0DAAW;YACX,uEAAiB;YACjB,4EAAoB;SACrB;mIAsBU,aAAa,mBA7BT,mEAAgB,EAAE,qEAAc,EAAE,gGAAuB,EAAE,sFAAmB,aAE3F,4DAAY;QACZ,kEAAmB;QACnB,0DAAW;QACX,uEAAiB;QACjB,4EAAoB;6FAuBX,aAAa;cA9BzB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mEAAgB,EAAE,qEAAc,EAAE,gGAAuB,EAAE,sFAAmB,CAAC;gBAC9F,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,0DAAW;oBACX,uEAAiB;oBACjB,4EAAoB;iBACrB;gBACD,SAAS,EAAE,CAAC,sEAAiB,EAC3B;wBACE,OAAO,EAAE,yBAAyB;wBAClC,QAAQ,EAAE;4BACR,SAAS,EAAE,KAAK;4BAChB,SAAS,EAAE;gCACT;oCACE,EAAE,EAAE,yEAAmB,CAAC,WAAW;oCACnC,QAAQ,EAAE,IAAI,yEAAmB,CAC/B,0EAA0E,CAC3E;iCACF;gCACD;oCACE,EAAE,EAAE,2EAAqB,CAAC,WAAW;oCACrC,QAAQ,EAAE,IAAI,2EAAqB,CAAC,iBAAiB,CAAC;iCACvD;6BACF;yBACyB;qBAC7B;iBACF;aACF","file":"components-account-account-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../account-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nenum showModel {\r\n  isgenerate = 1,\r\n  isVerifiy = 2,\r\n  isReset = 3,\r\n}\r\n@Component({\r\n  selector: 'app-forgotpassword',\r\n  templateUrl: './forgotpassword.component.html',\r\n  styleUrls: ['./forgotpassword.component.scss']\r\n})\r\nexport class ForgotpasswordComponent implements OnInit {\r\n  emailId: any;\r\n  state\r\n  otp: string;\r\n  otpkey: any;\r\n  resetForm: FormGroup;\r\n  fieldTextType: boolean = false;\r\n  isLoading: boolean = false;\r\n  isPwdChange: boolean = false\r\n  constructor(\r\n    private userService: AccountApiService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.state = showModel.isgenerate\r\n    this.resetForm = new FormGroup({\r\n      newPassword: new FormControl('', [Validators.required]),\r\n      confirmPassword: new FormControl('', [Validators.required]),\r\n\r\n    },\r\n    );\r\n    this.getPWDFlag();\r\n  }\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  getPWDFlag() {\r\n    this.route.queryParams.subscribe(param => {\r\n      this.isPwdChange = param.isPasswordChange\r\n    })\r\n  }\r\n  generate() {\r\n    if (this.emailId != null || this.emailId != undefined) {\r\n      let formData = new FormData();\r\n      formData.append('mobileNumber', this.emailId);\r\n      this.isLoading = true;\r\n      this.userService.generateOTP(formData).subscribe(res => {\r\n        this.isLoading = false\r\n        if (res.success) {\r\n          this.state = showModel.isVerifiy;\r\n          this.otpkey = JSON.parse(res.data).Details;\r\n          this.toastr.success(res.message, \"Success..!\");\r\n        } else {\r\n          this.toastr.error(res.message, \"Error..!\");\r\n        }\r\n      })\r\n    } else {\r\n      this.toastr.warning(\"Please Enter emailId\", 'Warning..!');\r\n    }\r\n  }\r\n  backToGenerate() {\r\n    this.state = showModel.isgenerate;\r\n\r\n  }\r\n  goToReset() {\r\n    if (this.otp != null || this.otp != undefined) {\r\n      let formData = new FormData();\r\n      formData.append('mobileNumber', this.emailId);\r\n      formData.append('otp', this.otp);\r\n      this.isLoading = true;\r\n      this.userService.verifyOTP(formData).subscribe(res => {\r\n        this.isLoading = false;\r\n        if (res.success) {\r\n          this.state = showModel.isReset;\r\n          this.toastr.success(res.message, \"Success..!\");\r\n        } else {\r\n          this.toastr.error(res.message, \"Error..!\");\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.resetForm.valid) {\r\n      if (this.resetForm.value.newPassword == this.resetForm.value.confirmPassword) {\r\n        let formData = new FormData();\r\n        formData.append('mobileNumber', this.emailId);\r\n        formData.append('password', this.resetForm.value.newPassword);\r\n        this.isLoading = true;\r\n        this.userService.resetPassword(formData).subscribe(res => {\r\n          this.isLoading = false;\r\n          if (res.success) {\r\n            this.toastr.success(res.message, \"Success..!\");\r\n            this.router.navigate(['/account/login']);\r\n          } else {\r\n            this.toastr.error(res.message, \"Error..!\");\r\n          }\r\n        })\r\n\r\n      } else {\r\n        this.toastr.warning(\"New Password and Confirm Password does not match\", 'Warning..!');\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"pwd-page\">\r\n    <div class=\"container\" *ngIf=\"state == 1\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 offset-lg-3 \">\r\n                <h2 *ngIf=\"!isPwdChange\">Forget Your Password</h2>\r\n                <h2 *ngIf=\"isPwdChange\">Change Your Password</h2>\r\n\r\n                <div class=\"theme-form text-center\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <input type=\"text\" [(ngModel)]=\"emailId\" class=\"form-control\" id=\"email\"\r\n                                placeholder=\"abc@domain.com\" required=\"\">\r\n\r\n                            <button *ngIf=\"!isLoading\" class=\"btn btn-primary\" (click)=\"generate()\">Generate\r\n                                OTP</button>\r\n                            <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                    aria-hidden=\"true\"></i> &nbsp;&nbsp;Loading...</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <a routerLink=\"/account/login\">Back</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\" *ngIf=\"state == 2\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 offset-lg-3\">\r\n                <h2>Enter Your OTP</h2>\r\n                <div class=\"theme-form\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <input type=\"text\" class=\"form-control otp\" style=\"font-size: large; font-weight: bold;\"\r\n                                [(ngModel)]=\"otp\" placeholder=\"******\">\r\n                            <button *ngIf=\"!isLoading\" class=\"btn btn-primary\" (click)=\"goToReset()\">Verify OTP</button>\r\n                            <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                    aria-hidden=\"true\"></i> &nbsp;&nbsp;Loading...</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <a (click)=\"backToGenerate();\">Back</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\" *ngIf=\"state == 3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 offset-lg-3\">\r\n                <h2>Register New Password</h2>\r\n                <form class=\"theme-form\" [formGroup]=\"resetForm\" (ngSubmit)=\"resetPassword();\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label>New Password &nbsp; <i class=\"fa\"\r\n                                    [ngClass]=\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\"\r\n                                    (click)=\"toggleFieldTextType()\"></i></label><br />\r\n                            <small\r\n                                [class.d-none]=\"resetForm.get('newPassword').valid || resetForm.get('newPassword').untouched\"\r\n                                class=\"text-danger\">Invalid! at least one number.</small>\r\n                            <input [type]=\"fieldTextType ? 'text' : 'password'\" class=\"form-control\"\r\n                                formControlName=\"newPassword\" placeholder=\"****\">\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label>Confirm Password </label><br />\r\n                            <small\r\n                                [class.d-none]=\"resetForm.get('confirmPassword').valid || resetForm.get('confirmPassword').untouched\"\r\n                                class=\"text-danger\">Invalid! at least one number.</small>\r\n                            <input [type]=\"fieldTextType ? 'text' : 'password'\" class=\"form-control\"\r\n                                formControlName=\"confirmPassword\" placeholder=\"****\">\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button type=\"submit\" *ngIf=\"!isLoading\" class=\"btn btn-primary\"\r\n                        [disabled]=\" !resetForm.valid\">Confirm</button>\r\n                    <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\" fa fa-spinner fa-spin\"\r\n                            aria-hidden=\"true\"></i> &nbsp;&nbsp;Loading...</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!--Section ends-->","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NewProfileComponent } from './new-profile/new-profile.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'profile-new',\r\n    component: NewProfileComponent\r\n  },\r\n  {\r\n    path: 'forget/password',\r\n    component: ForgotpasswordComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import * as CryptoJS from 'crypto-js';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../account-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { SocialAuthService } from \"angularx-social-login\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\ndeclare var window: any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public newUserFrom: FormGroup;\r\n  public loginFrom: FormGroup;\r\n  isLoading: boolean;\r\n  fieldTextType;\r\n  link: any;\r\n  toggle: number = 2;\r\n  termsLink = \"https://bolstartimages.s3.ap-south-1.amazonaws.com/Terms+of+Use_Bolstart_End+Users_15122020.pdf\"\r\n  constructor(private fb: FormBuilder, private apiService: AccountApiService,\r\n    private toastr: ToastrService, public router: Router, private authService: SocialAuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    localStorage.clear();\r\n    this.register();\r\n    this.loginUser();\r\n    this.link = location.href.slice(0, - 5) + \"profile-new?userId=\"\r\n\r\n  }\r\n  switch(number) {\r\n    this.toggle = number;\r\n    this.newUserFrom.reset();\r\n    this.loginFrom.reset();\r\n    this.newUserFrom.patchValue({\r\n      countryCode: \"+91\"\r\n    })\r\n    if (this.toggle == 2) {\r\n      document.documentElement.scrollTop = 12;\r\n\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.newUserFrom = this.fb.group({\r\n      emailId: ['', [Validators.required, Validators.email]],\r\n      firstName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      mobileNumber: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      password: ['', [Validators.required]],\r\n      confirmPassword: ['', [Validators.required]],\r\n      policy: ['', [Validators.required]],\r\n      countryCode: ['+91', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  loginUser() {\r\n    this.loginFrom = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n\r\n  /* ========================= Registartion Module =================================== */\r\n  onRegister() {\r\n    this.newUserFrom.markAllAsTouched();\r\n    if (this.newUserFrom.value.password == this.newUserFrom.value.confirmPassword) {\r\n      if (this.newUserFrom.value.policy == true) {\r\n        if (this.newUserFrom.valid) {\r\n          let obj = {\r\n            emailId: this.newUserFrom.value.emailId,\r\n            firstName: this.newUserFrom.value.firstName,\r\n            lastName: this.newUserFrom.value.lastName,\r\n            mobileNumber: this.newUserFrom.value.mobileNumber,\r\n            password: this.newUserFrom.value.password,\r\n            isEmailVerified: \"false\"\r\n          }\r\n          this.isLoading = true;\r\n          this.apiService.register(obj).subscribe(res => {\r\n            this.isLoading = false;\r\n            if (res.success) {\r\n              this.toggle = 2\r\n              this.sendEmail(res.data);\r\n            } else {\r\n              this.toastr.warning(res.message);\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        this.toastr.error(\"Please accept Bolstart Policies\")\r\n      }\r\n    } else {\r\n      this.toastr.error(\"Password and Confirm Password dosen't match.\")\r\n    }\r\n\r\n  }\r\n\r\n  sendEmail(obj) {\r\n    var formData = new FormData();\r\n    formData.append('toemailId', this.newUserFrom.value.emailId);\r\n    formData.append('subject', 'Bolstart account verification');\r\n    formData.append('message', `${this.link + obj.id}`);\r\n    this.apiService.sendEmail(formData).subscribe(res => {\r\n      if (res.success) {\r\n        this.toastr.success(res.message);\r\n      } else {\r\n        this.toastr.warning(res.message);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  /* ========================================================== */\r\n  /* ========================= Login Module =================================== */\r\n  onLogin() {\r\n    let formData = new FormData;\r\n    formData.append(\"password\", this.loginFrom.value.password);\r\n    formData.append(\"os\", \"web\");\r\n    formData.append(\"deviceId\", \"89ABCDEF-01234567-89ABCDEF\");\r\n    var email_pattern = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n    var mobile_pattern = /^[0-9]/;\r\n    if (email_pattern.test(this.loginFrom.value.username)) {\r\n      formData.append(\"emailId\", this.loginFrom.value.username);\r\n      this.isLoading = true;\r\n      this.apiService.authLoginUsingEmail(formData).subscribe(res => {\r\n        \r\n        this.isLoading = false;\r\n        if (res.data != null) {\r\n          if (res.data.isEmailVerified == 'true') {\r\n            let encrypt = CryptoJS.AES.encrypt(JSON.stringify(res.data), \"Bollstart\").toString();\r\n            localStorage.setItem('member', res.data.id);\r\n            localStorage.setItem(\"company_id\", res.data.company_id)\r\n            localStorage.setItem('Bolstart', encrypt);\r\n            this.router.navigate(['/home']);\r\n          } else {\r\n            this.toastr.error(\"Please Verify Account\")\r\n          }\r\n        } else {\r\n          this.toastr.error(res.message);\r\n        }\r\n      })\r\n    } else if (mobile_pattern.test(this.loginFrom.value.username)) {\r\n      formData.append(\"mobileNumber\", this.loginFrom.value.username);\r\n      this.isLoading = true;\r\n      this.apiService.authLoginUsingMobile(formData).subscribe(res => {\r\n        this.isLoading = false;\r\n        if (res.data != null) {\r\n          if (res.data.isEmailVerified == 'true') {\r\n\r\n            let encrypt = CryptoJS.AES.encrypt(JSON.stringify(res.data), \"Bollstart\").toString();\r\n            localStorage.setItem('member', res.data.id);\r\n            localStorage.setItem('Bolstart', encrypt);\r\n            this.router.navigate(['./home'])\r\n          } else {\r\n            this.toastr.error(\"Please Verify Account\")\r\n          }\r\n        } else {\r\n          this.toastr.error(res.message);\r\n\r\n        }\r\n      })\r\n    } else {\r\n\r\n      this.toastr.warning('Enter Valid Credentials')\r\n    }\r\n  }\r\n  /* ========================================================== */\r\n  /* ========================= Social login =================================== */\r\n\r\n  gmailSignUp() {\r\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(res => {\r\n      let obj = {\r\n        emailId: res.email,\r\n        firstName: res.firstName,\r\n        lastName: res.lastName,\r\n        isGoogleLogged: \"true\"\r\n      }\r\n      this.isLoading = true;\r\n      this.apiService.register(obj).subscribe(res => {\r\n        this.isLoading = false;\r\n        if (res.success) {\r\n          this.isLoading = false;\r\n          if (res.success) {\r\n            this.toggle = 2\r\n            this.sendEmail(res.data);\r\n          } else {\r\n            this.toastr.warning(res.message);\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  scrollTop() {\r\n    document.documentElement.scrollTop = 0;\r\n    this.toggle = 1;\r\n  }\r\n}\r\n","<section>\r\n    <div class=\"logo-header\">\r\n        <img src=\"assets/img/bslogo_1.png\" style=\"height: 55px;width:190px;\" />\r\n        <div class=\"sign-wrap\">\r\n            <label (click)=\"switch(1)\">Join Now</label> &nbsp;\r\n            <span> <button class=\"btn btn-primary outline\" (click)=\"switch(2)\">Sign in</button></span>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-12\">\r\n                <h3 style=\"color: #293266;\">Bolstering the Startup Community</h3>\r\n                <h5>A social network for founders, investors, students, freelancers and everyone else interested\r\n                    in joining the startup\r\n                    community.</h5>\r\n\r\n                <div class=\"inner-wrap\" *ngIf=\"toggle == 2\">\r\n                    <!-- <h2>Welcome to Our <br /> Community</h2> -->\r\n                    <div class=\"form-wrap\">\r\n\r\n                        <!-- <img src=\"assets/img/bslogo_1.png\" style=\"height: 50px;width:190px;\" alt=\"\"\r\n                                    class=\"img-fluid mb-4 d-block\"> -->\r\n                        <form [formGroup]=\"loginFrom\" >\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-12 p-2\">\r\n                                    <input type=\"text\" placeholder=\"Email / Phone Number\" formControlName=\"username\"\r\n                                        class=\"form-control\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"form-control \">\r\n                                    <input class=\"col col-11\" [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                                        placeholder=\"Password\" formControlName=\"password\">\r\n                                    <i class=\"col col-1\" class=\"fa\"\r\n                                        [ngClass]=\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\"\r\n                                        (click)=\"toggleFieldTextType()\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-left\">\r\n                                <a href=\"javascript:void(0)\" data-dismiss=\"modal\"\r\n                                    routerLink=\"/account/forget/password\">Forgot\r\n                                    Password ?</a>\r\n                            </div>\r\n                            <button *ngIf=\"!isLoading\" type=\"submit\" (click)=\"onLogin()\" class=\"btn btn-primary\">Sign in</button>\r\n                        </form>\r\n                        <button *ngIf=\"isLoading\" (click)=\"onLogin()\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                aria-hidden=\"true\"></i>\r\n                            &nbsp;&nbsp;Loading...</button>\r\n\r\n                        <!--  <h6 class=\"divider line razor\" contenteditable>Or</h6>\r\n                                    <button type=\"button\" class=\"btn btn-secondary google\" (click)=\"loginWithGoogle()\"> <img\r\n                                            style=\"width: 18px;\" src=\"assets/img/GoogleLogo.png\">&nbsp;Login with Google</button> -->\r\n                    </div>\r\n                    <!-- <div class=\"text-center\">\r\n                        <label>Want to Join? <a (click)=\"switch(1)\">Sign Up Now </a></label>\r\n                    </div> -->\r\n                </div>\r\n\r\n                <div class=\"inner-wrap\" *ngIf=\"toggle == 1\">\r\n                    <div>\r\n                        <form [formGroup]=\"newUserFrom\" (submit)=\"onRegister()\" class=\"form-wrap\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-12 p-2\">\r\n                                    <input type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('firstName').invalid && newUserFrom.get('firstName').touched\">Enter\r\n                                        First Name.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('lastName').invalid && newUserFrom.get('lastName').touched\">Enter\r\n                                        Last Name.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-2 p-2\">\r\n                                    <select class=\"form-control\" formControlName=\"countryCode\">\r\n                                        <option value=\"+91\" selected>+91</option>\r\n                                        <option value=\"+1\">+1</option>\r\n                                    </select>\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('countryCode').invalid && newUserFrom.get('countryCode').touched\">Code.</small>\r\n                                </div>\r\n                                <div class=\"col col-xl-10 p-2\">\r\n                                    <input type=\"number\" placeholder=\"Mobile Number\" formControlName=\"mobileNumber\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('mobileNumber').invalid && newUserFrom.get('mobileNumber').touched\">Enter\r\n                                        Valid Mobile Number.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input type=\"email\" placeholder=\"Email\" formControlName=\"emailId\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('emailId').invalid && newUserFrom.get('emailId').touched\">Enter\r\n                                        Valid Email Id.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input [type]=\"fieldTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                                        placeholder=\"Password\" class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('password').invalid && newUserFrom.get('password').touched\">Enter\r\n                                        Password.</small>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"text-align: right;\">\r\n                                <i class=\"fa\" [ngClass]=\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\"\r\n                                    (click)=\"toggleFieldTextType()\"></i>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                                        formControlName=\"confirmPassword\" placeholder=\"Confirm Password\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('confirmPassword').invalid && newUserFrom.get('confirmPassword').touched\">Enter\r\n                                        Confirm Password.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-center\">\r\n                                <label> <input type=\"checkbox\" name=\"policy\" formControlName=\"policy\">\r\n                                    By Clicking Agree & join, you agree to the <br />\r\n                                    <a [href]=\"termsLink\" target=\"_blank\">Bolstart User Agreement</a> and <a\r\n                                        [href]=\"termsLink\" target=\"_blank\">Privacy Policy.</a>\r\n                                </label>\r\n                            </div>\r\n                            <button *ngIf=\"!isLoading\" type=\"submit\" class=\"btn btn-primary\">Agree &\r\n                                Join</button>\r\n                            <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                &nbsp;&nbsp;Loading...</button>\r\n                        </form>\r\n\r\n                        <!--  <h6 class=\"divider line razor\" contenteditable>Or</h6>\r\n                                    <button type=\"button\" class=\"btn btn-secondary google\" (click)=\"gmailSignUp()\"> <img\r\n                                            style=\"width: 18px;\" src=\"assets/img/GoogleLogo.png\">&nbsp;Sign up with\r\n                                        Google</button> -->\r\n                    </div>\r\n                    <!-- <div class=\"text-center\">\r\n                        <label>Already on Bolstart? <a>Sign in</a></label>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-6 d-none d-lg-block\">\r\n                <img src=\"assets/img/login/img1.png\" class=\"first-img\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"second-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <img src=\"assets/img/login/img2.png\" class=\"signUp-img\" />\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <h3>Why Bolstart?</h3>\r\n                <h5>\r\n                    Conveniently targeted social network with multiple features that enables you to build strong\r\n                    relations and save time.\r\n                </h5>\r\n                <button class=\"btn btn-primary\" (click)=\"scrollTop()\">Sign Up</button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"third-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <div class=\"content\">\r\n                    <hr>\r\n                    <div>\r\n                        <h5>01 Build investor Relationship</h5>\r\n                        <label>Write structured updates that directly reach investor's email inbox.</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>02 Keep Everyone in loop</h5>\r\n                        <label>Share email updates with your team members, mentors, and stakeholders.</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>03 Keep track of your success</h5>\r\n                        <label>Find all your updates in your timeline and keep track of your success.</label>\r\n                    </div>\r\n                    <hr>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <h3>Build Strong Network</h3>\r\n                <img src=\"assets/img/login/img2.png\" class=\"img-second\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"fourth-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <h3>Investor Dashboard</h3>\r\n                <img src=\"assets/img/login/gipy_1.gif\" class=\"img-third\" />\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>01 One View Dashboard</h5>\r\n                        <label>Investors and Mentors can view all updates from startups they are interested in on one\r\n                            single\r\n                            screen.</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>02 Startup Traction Metrics</h5>\r\n                        <label>Analyze a startup's traction metrics and make an informed investment decision.</label>\r\n                    </div>\r\n                    <hr>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"third-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-7 d-none d-lg-block text-center\" style=\"padding: 13rem;\">\r\n                <!-- <button class=\"btn btn-primary\" (click)=\"scrollTop()\">Join Bolstart</button>\r\n                <h3 class=\"and-label\">AND</h3>\r\n                <button class=\"btn btn-primary outline\">Subscribe to Newsletter</button> -->\r\n\r\n            </div>\r\n            <div class=\"col-lg-5 col-md-12\">\r\n                <h3>And so many more features coming soon.</h3>\r\n                <img src=\"assets/img/activity1.gif\" class=\"signUp-img\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"footer bg-footer\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6 col-md-6 text-center\">\r\n                <img src=\"assets/img/bslogo_1.png\" style=\"height: 55px;width:190px;\" />\r\n            </div>\r\n            <div class=\"col-2 col-md-2\">\r\n                <h6>General</h6>\r\n                <ul>\r\n                    <li (click)=\"scrollTop()\">Signup</li><br />\r\n                    <li>About</li><br />\r\n                    <li>Press</li><br />\r\n                    <li>Blogs</li><br />\r\n                    <li>Careers</li><br />\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-2 col-md-2\">\r\n                <h6>On Bolstart</h6>\r\n                <ul>\r\n                    <li>Q&A Forums </li><br />\r\n                    <li>Jobs</li><br />\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-2 col-md-2\">\r\n                <h6>Contact us</h6>\r\n                <ul>\r\n                    <li><a href=\"https://www.facebook.com/bolstart/\" target=\"_blank\">FaceBook</a></li><br />\r\n                    <li><a href=\"https://www.instagram.com/bolstart_/\" target=\"_blank\">Instagram</a></li><br />\r\n                    <li><a href=\"https://twitter.com/bolstart\" target=\"_blank\">Twitter</a></li><br />\r\n                    <li><a href=\"https://medium.com/bolstart\" target=\"_blank\">Medium</a></li><br />\r\n                    <li><a href='mailto:reachout@bolstart.com' target=\"_blank\">Email</a></li><br />\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"text-center\">\r\n        <label><span>Terms of Service</span> . <span>Privacy Policy</span></label>\r\n    </div>\r\n</section>","import * as $ from 'jquery';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../account-api.service';\r\nimport { COMETCHAT_CONSTANTS } from 'src/CONSTS';\r\nimport { CometChat } from \"@cometchat-pro/chat\";\r\nimport Stepper from 'bs-stepper';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\n@Component({\r\n  selector: 'app-new-profile',\r\n  templateUrl: './new-profile.component.html',\r\n  styleUrls: ['./new-profile.component.scss']\r\n})\r\n\r\n\r\nexport class NewProfileComponent implements OnInit {\r\n  @ViewChild('model') model: ElementRef;\r\n  private stepper: Stepper;\r\n  public informationForm: FormGroup;\r\n  public educationForm: FormGroup;\r\n  public experianceForm: FormGroup;\r\n  userInfo\r\n  showList: number = 0\r\n  type: number = 2;\r\n  roleType: number;\r\n  selectedType: string;\r\n  currentindex: number;\r\n  monthList: any = common.month;\r\n  dayList: any = common.day;\r\n  stateList: any = [];\r\n  cityList: any = [];\r\n  industryList: any = common.industries;\r\n  countryList: any = common.country;\r\n  yeaList: any = common.years();\r\n  schooleList: any = [];\r\n  experianceList: any = [];\r\n  searchList: any = [];\r\n  isLoader: boolean = false;\r\n  dummyIcon = \"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/unversity.png\"\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private accountService: AccountApiService,\r\n    private toastr: ToastrService) { }\r\n\r\n\r\n  next() {\r\n    this.stepper.next();\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    return false;\r\n  }\r\n\r\n  selectType(value) {\r\n    /* Investors and StartUP   type = 1*/\r\n    /* Freelancer , Mentor And Start Up Enthusiast  type = 2*/\r\n    this.selectedType = value;\r\n    switch (this.selectedType) {\r\n      case 'Startups':\r\n        this.type = 1;\r\n        this.roleType = 1;\r\n        break;\r\n      case 'Investors':\r\n        this.type = 1;\r\n        this.roleType = 2;\r\n        break;\r\n      case 'Mentor':\r\n        this.type = 2;\r\n        this.roleType = 3;\r\n        break;\r\n      case 'Freelancer':\r\n        this.type = 2;\r\n        this.roleType = 4;\r\n        break;\r\n      case 'Startup Enthusiast':\r\n        this.type = 2;\r\n        this.roleType = 5;\r\n        break;\r\n    }\r\n    this.initializedInfoForm();\r\n    this.informationForm.patchValue({\r\n      id: this.userInfo.id,\r\n      firstName: this.userInfo.firstName,\r\n      lastName: this.userInfo.lastName,\r\n    })\r\n  }\r\n  ngOnInit() {\r\n    this.getParams();\r\n    this.initializeEduForm();\r\n    this.initializeExpForm();\r\n    this.initializedInfoForm();\r\n\r\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\r\n      linear: false,\r\n      animation: true\r\n    });\r\n\r\n  }\r\n\r\n  getParams() {\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.getUserInfo(params.userId);\r\n      }\r\n      );\r\n\r\n  }\r\n  /* ================ UserData ======================*/\r\n  getUserInfo(userId) {\r\n    this.accountService.getUserInfoByID(userId, userId).subscribe(res => {\r\n      if (res.success) {\r\n        this.userInfo = res.data;\r\n        if (this.userInfo.isEmailVerified == 'true') {\r\n          this.model.nativeElement.click();\r\n        }\r\n      } else {\r\n        this.toastr.error(res.message);\r\n        this.router.navigate(['./account/login'])\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /* ================ Information Form ======================*/\r\n  initializedInfoForm() {\r\n    this.informationForm = this.fb.group({\r\n      id: ['', [Validators.required]],\r\n      firstName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      middleNmae: ['', [Validators.pattern(common.onlyAlphabetRegex)]],\r\n      lastName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      headline: ['', [Validators.required]],\r\n      industry: ['', [Validators.required]],\r\n      state: [''],\r\n      location: [''],\r\n      country: [''],\r\n      month: [''],\r\n      day: [''],\r\n      aboutMe: [''],\r\n    })\r\n  }\r\n\r\n  infoSubmit() {\r\n    this.informationForm.markAllAsTouched();\r\n    if (this.informationForm.valid) {\r\n      if (this.type == 1) {\r\n        this.stepper.to(3);\r\n      } else {\r\n        this.stepper.to(4);\r\n      }\r\n    }\r\n  }\r\n  /* ================= Education Form =========================*/\r\n  initializeEduForm() {\r\n    this.educationForm = this.fb.group({\r\n      institutionId: ['', [Validators.required]],\r\n      institutionLogo: ['', [Validators.required]],\r\n      institutionName: ['', [Validators.required]],\r\n      activities: [''],\r\n      degree: [''],\r\n      endDate: [''],\r\n      grade: [''],\r\n      societies: [''],\r\n      startDate: [''],\r\n      stream: [''],\r\n      userId: [''],\r\n    })\r\n  }\r\n  eduSubmit() {\r\n    this.educationForm.markAllAsTouched();\r\n    if (this.educationForm.valid) {\r\n      this.schooleList.push(this.educationForm.value);\r\n      $('#eductionModel').hide();\r\n      $('.modal-backdrop').hide();\r\n    }\r\n  }\r\n  /* =============== Experiance Form ============================*/\r\n  initializeExpForm() {\r\n    this.experianceForm = this.fb.group({\r\n      companyId: [''],\r\n      companyName: ['', [Validators.required]],\r\n      companyLogo: ['', [Validators.required]],\r\n      title: ['', [Validators.required]],\r\n      userId: ['', [Validators.required]],\r\n      startYear: ['', [Validators.required]],\r\n      startMonth: ['', [Validators.required]],\r\n      jobLocation: ['', [Validators.required]],\r\n      isWorking: [false],\r\n      endMonth: [''],\r\n      endYear: [''],\r\n      description: [''],\r\n    })\r\n  }\r\n\r\n  onsetValue() {\r\n    this.experianceForm.patchValue({\r\n      companyLogo: this.dummyIcon,\r\n      userId: this.userInfo.id\r\n    })\r\n  }\r\n  expSubmit() {\r\n    this.onsetValue()\r\n    this.experianceForm.markAllAsTouched();\r\n    if (this.experianceForm.valid) {\r\n      let obj = {\r\n        companyId: this.experianceForm.value.companyId,\r\n        companyName: this.experianceForm.value.companyName,\r\n        companyLogo: this.experianceForm.value.companyLogo,\r\n        description: this.experianceForm.value.description,\r\n        jobLocation: this.experianceForm.value.jobLocation,\r\n        endMonth: this.experianceForm.value.endMonth,\r\n        endYear: this.experianceForm.value.endYear,\r\n        isWorking: this.experianceForm.value.isWorking,\r\n        startMonth: this.experianceForm.value.startMonth,\r\n        startYear: this.experianceForm.value.startYear,\r\n        title: this.experianceForm.value.title,\r\n        userId: this.experianceForm.value.userId,\r\n\r\n      }\r\n\r\n      this.experianceList.push(obj);\r\n      $('#experianceModel').hide();\r\n      $('.modal-backdrop').hide();\r\n\r\n    }\r\n  }\r\n  verifyAccount() {\r\n    let obj = {\r\n      adhaarCard: this.informationForm.value.adhar,\r\n      bio: this.informationForm.value.aboutMe,\r\n      day: this.informationForm.value.day,\r\n      education: this.schooleList,\r\n      experience: this.experianceList,\r\n      firstName: this.informationForm.value.firstName,\r\n      headline: this.informationForm.value.headline,\r\n      gst: this.informationForm.value.gst,\r\n      id: this.userInfo.id,\r\n      isEmailVerified: \"true\",\r\n      lastName: this.informationForm.value.lastName,\r\n      location: this.informationForm.value.location,\r\n      country: this.informationForm.value.country,\r\n      month: this.informationForm.value.month,\r\n      state: this.informationForm.value.state,\r\n      typeOfUser: this.roleType,\r\n      industryName: this.informationForm.value.industry,\r\n      uid: this.userInfo.isPriority == 'true' ? this.userInfo.firstName.toLowerCase() + this.userInfo.id : \"\"\r\n    }\r\n    this.accountService.verifyAccount(obj).subscribe(res => {\r\n      this.isLoader = false;\r\n      if (res.success) {\r\n        this.toastr.success(\"User Verified Successfully\");\r\n        this.router.navigate(['/account/login']);\r\n        setTimeout(() => {\r\n          location.reload();\r\n        }, 0.100)\r\n      }\r\n    })\r\n  }\r\n\r\n  addUserToCometChat() {\r\n    this.isLoader = true;\r\n    if (this.userInfo.isPriority == 'true') {\r\n      var user = new CometChat.User(this.userInfo.firstName.toLowerCase() + this.userInfo.id);\r\n      user.setName(this.userInfo.firstName + \" \" + this.userInfo.lastName);\r\n      user.setAvatar(\"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/profile_avater.png\")\r\n      CometChat.createUser(user, COMETCHAT_CONSTANTS.AUTH_KEY).then(\r\n        user => {\r\n          this.verifyAccount();\r\n        }, error => {\r\n          this.isLoader = false;\r\n        }\r\n      )\r\n    } else {\r\n      this.verifyAccount()\r\n    }\r\n\r\n  }\r\n\r\n  /* =============== Inpuut Focus ============================ */\r\n  onFocus(value) {\r\n    switch (value) {\r\n      case 1:\r\n        this.showList = 1\r\n        break;\r\n      case 2:\r\n        this.showList = 2\r\n        break;\r\n      case 3:\r\n        this.showList = 3\r\n        break;\r\n      case 4:\r\n        this.showList = 4\r\n        break;\r\n    }\r\n  }\r\n  onBlur() {\r\n    setTimeout(() => {\r\n      this.showList = 0\r\n      this.searchList = [];\r\n    }, 500)\r\n  }\r\n  search(event) {\r\n    switch (this.showList) {\r\n      case 1:\r\n        this.getUniversityList();\r\n        break;\r\n      case 2:\r\n        this.searchList = common.degree;\r\n        break;\r\n      case 3:\r\n        this.searchList = common.field;\r\n        break;\r\n      case 4:\r\n        this.getAllCompanyList(event.target.value)\r\n        break;\r\n    }\r\n  }\r\n\r\n  selectItem(event, item) {\r\n    switch (event) {\r\n      case 1:\r\n        this.educationForm.patchValue({\r\n          institutionId: item.id,\r\n          institutionLogo: this.dummyIcon,\r\n          institutionName: item.name,\r\n          userId: this.userInfo.id\r\n        })\r\n        this.searchList = []\r\n        break;\r\n      case 2:\r\n        this.educationForm.patchValue({\r\n          degree: item\r\n        })\r\n        this.searchList = []\r\n        break;\r\n      case 3:\r\n        this.educationForm.patchValue({\r\n          stream: item\r\n        })\r\n        this.searchList = []\r\n        break;\r\n      case 4:\r\n        this.experianceForm.patchValue({\r\n          companyId: item.id,\r\n          companyName: item.name,\r\n          companyLogo: item.logo,\r\n          userId: this.userInfo.id,\r\n        })\r\n        break;\r\n    }\r\n    this.showList = 0;\r\n  }\r\n\r\n  deleteSchool(index) {\r\n    this.schooleList.splice(index, 1)\r\n  }\r\n  deleteExp(index) {\r\n    this.experianceList.splice(index, 1)\r\n  }\r\n\r\n  /* ===================== country select  =========================== */\r\n  selectCountry() {\r\n    let country = this.informationForm.value.country;\r\n    this.countryList.map(res => {\r\n      if (res.name == country) {\r\n        this.getStateList(res.id)\r\n      }\r\n    })\r\n  }\r\n\r\n  getStateList(countryID) {\r\n    this.accountService.getStateListBasedOnCountry(countryID).subscribe(res => {\r\n      if (res.success) {\r\n        this.stateList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  selectState() {\r\n    let state = this.informationForm.value.state;\r\n    this.stateList.map(res => {\r\n      if (res.name == state) {\r\n        this.getCityList(res.id);\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityList(stateID) {\r\n    this.accountService.getCityListBasedOnState(stateID).subscribe(res => {\r\n      if (res.success) {\r\n        this.cityList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  /* ==================== University ====================== */\r\n\r\n  getUniversityList() {\r\n    this.accountService.getUniversityList().subscribe(res => {\r\n      if (res.success) {\r\n        this.searchList = res.data\r\n      }\r\n    })\r\n  }\r\n  /* =============== Company List =============== */\r\n  getAllCompanyList(keyWord) {\r\n    this.accountService.getAllCompanyList(keyWord).subscribe(res => {\r\n      if (res.success) {\r\n        this.searchList = res.data\r\n      }\r\n    })\r\n  }\r\n\r\n  /* ========================= */\r\n  goToLogin() {\r\n    this.router.navigate(['/account/login']);\r\n    setTimeout(() => {\r\n      location.reload();\r\n    }, 100)\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <img src=\"assets/img/bslogo_1.png\" style=\"height: 50px;width:190px;\" alt=\"\" class=\"img-fluid mb-4 d-block m-3\">\r\n    <div id=\"stepper1\" class=\"bs-stepper\">\r\n        <div class=\"bs-stepper-header m-4\">\r\n            <div class=\"step\" data-target=\"#test-l-1\">\r\n                <button class=\"step-trigger\">\r\n                    <span class=\"bs-stepper-circle\">1</span>\r\n                    <span class=\"bs-stepper-label\">Profile</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"step\" data-target=\"#test-l-2\">\r\n                <button class=\"step-trigger\" [disabled]=\"selectedType == undefined\">\r\n                    <span class=\"bs-stepper-circle\">2</span>\r\n                    <span class=\"bs-stepper-label\">Information</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"line\" [hidden]=\"type != 1\"></div>\r\n            <div [hidden]=\"type != 1\">\r\n                <div class=\"step\" data-target=\"#test-l-4\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">3</span>\r\n                        <span class=\"bs-stepper-label\">Experiance</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"line\" [hidden]=\"type != 2\"></div>\r\n            <div [hidden]=\"type != 2\">\r\n                <div class=\"step\" data-target=\"#test-l-3\">\r\n                    <button class=\"step-trigger\" [disabled]=\"!informationForm.valid\">\r\n                        <span class=\"bs-stepper-circle\">3</span>\r\n                        <span class=\"bs-stepper-label\">Education</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"line\" [hidden]=\"type != 2\"></div>\r\n            <div [hidden]=\"type != 2\">\r\n                <div class=\"step\" data-target=\"#test-l-4\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">4</span>\r\n                        <span class=\"bs-stepper-label\">Experiance</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"bs-stepper-content\">\r\n            <div class=\"text-center mb-5\">\r\n                <h6>Your Profile helps you discover new people and opportunities</h6>\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-2\"></div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"card content\" id=\"test-l-1\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Select Profile Type</h6>\r\n                        </div>\r\n                        <div class=\"card-body text-center\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Startups'}\"\r\n                                        (click)=\"selectType('Startups')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6><i class=\"fa fa-building\"></i> &nbsp; Startup Founder</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Investors'}\"\r\n                                        (click)=\"selectType('Investors')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6> <i class=\"fa fa-sitemap\"></i>&nbsp;Investor</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Mentor'}\"\r\n                                        (click)=\"selectType('Mentor')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6> <i class=\"fa fa-binoculars\"></i>&nbsp; Mentor</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-2\"></div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Freelancer'}\"\r\n                                        (click)=\"selectType('Freelancer')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6><i class=\"fa fa-briefcase\"></i> &nbsp; Freelancer</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\"\r\n                                        [ngClass]=\"{'selected': selectedType == 'Startup Enthusiast'}\"\r\n                                        (click)=\"selectType('Startup Enthusiast')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6><i class=\"fa fa-black-tie\"></i> &nbsp; Startup Enthusiast-Student</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-2\"></div>\r\n                            </div>\r\n                            <div class=\"text-right\">\r\n                                <button class=\"btn btn-outline-primary\" [disabled]=\"selectedType == undefined\"\r\n                                    (click)=\"next()\">Continue</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card content\" id=\"test-l-2\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Information</h6>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <form [formGroup]=\"informationForm\" (submit)=\"infoSubmit()\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>First Name <span class=\"mandatory\">*</span></label>\r\n                                        <input type=\"text\" placeholder=\"eg. First Name\" formControlName=\"firstName\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('firstName').invalid && informationForm.get('firstName').touched\">Enter\r\n                                            First Name.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>Middle Name</label>\r\n                                        <input type=\"text\" placeholder=\"eg. Middle Name\" formControlName=\"middleNmae\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('middleNmae').invalid && informationForm.get('middleNmae').touched\">Enter\r\n                                            Middle Name.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>Last Name <span class=\"mandatory\">*</span></label>\r\n                                        <input type=\"text\" placeholder=\"eg. Last Name\" formControlName=\"lastName\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('lastName').invalid && informationForm.get('lastName').touched\">Enter\r\n                                            Last Name.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <!-- <div class=\"col col-md-4 p-2\">\r\n                                        <label>Company Name</label>\r\n                                        <input type=\"text\" placeholder=\"eg. company Name\" formControlName=\"companyName\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\" *ngIf=\"informationForm.get('companyName').invalid && informationForm.get('companyName').touched\">Enter\r\n                                            company Name.</small>\r\n                                    </div> -->\r\n                                    <!-- <div class=\"col col-md-4 p-2\" *ngIf=\"type == 1\">\r\n                                        <label>GST</label>\r\n                                        <input type=\"text\" placeholder=\"eg. 22AAAAA0000A1Z5\" formControlName=\"gst\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\" *ngIf=\"informationForm.get('gst').invalid && informationForm.get('gst').touched\">Enter\r\n                                            GST Number.</small>\r\n                                    </div> -->\r\n                                    <div class=\"col col-md-4 p-2\" *ngIf=\"type == 2\">\r\n                                        <label>Birthday</label>\r\n                                        <select class=\"form-control\" formControlName=\"month\">\r\n                                            <option value=\"\" selected hidden disabled>select Month</option>\r\n                                            <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('month').invalid && informationForm.get('month').touched\">Select\r\n                                            Month.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\" *ngIf=\"type == 2\">\r\n                                        <label></label>\r\n                                        <select class=\"form-control\" formControlName=\"day\">\r\n                                            <option value='' selected hidden disabled>select Day</option>\r\n                                            <option [value]='item' *ngFor=\"let item of dayList\">{{item}}</option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('day').invalid && informationForm.get('day').touched\">Select\r\n                                            Day.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 p-2\">\r\n                                        <label>Headline <span class=\"mandatory\">*</span></label>\r\n                                        <input type=\"text\" placeholder=\"eg. Assistant manager\"\r\n                                            formControlName=\"headline\" class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('headline').invalid && informationForm.get('headline').touched\">Add\r\n                                            Short\r\n                                            Headline.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 p-2\">\r\n                                        <label>Industry <span class=\"mandatory\">*</span></label>\r\n                                        <select class=\"form-control\" formControlName=\"industry\">\r\n                                            <option value='' selected hidden disabled>select industry</option>\r\n                                            <option [value]='item' *ngFor=\"let item of industryList\">{{item}}</option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('industry').invalid && informationForm.get('industry').touched\">Select\r\n                                            Industry.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>Country</label>\r\n                                        <select class=\"form-control\" formControlName=\"country\"\r\n                                            (change)=\"selectCountry()\">\r\n                                            <option value='' selected hidden disabled>select country\r\n                                            </option>\r\n                                            <option [value]='item.name' *ngFor=\"let item of countryList\">{{item.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('country').invalid && informationForm.get('country').touched\">Select\r\n                                            Country.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>States/Union territories</label>\r\n                                        <select class=\"form-control\" formControlName=\"state\" (change)=\"selectState()\">\r\n                                            <option value='' selected hidden disabled>select States/Union territory\r\n                                            </option>\r\n                                            <option [value]='item.name' *ngFor=\"let item of stateList\">{{item.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('state').invalid && informationForm.get('state').touched\">Select\r\n                                            States/Union territories.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>City/Location/Landmark</label>\r\n                                        <!-- <input class=\"form-control\" formArrayName=\"location\" type=\"text\"\r\n                                            placeholder=\"eg. Mumbai\" /> -->\r\n                                        <select class=\"form-control\" formControlName=\"location\">\r\n                                            <option value='' selected hidden disabled>select States/Union territory\r\n                                            </option>\r\n                                            <option [value]='item.name' *ngFor=\"let item of cityList\">{{item.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('location').invalid && informationForm.get('location').touched\">Select\r\n                                            Location.</small>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 p-2\">\r\n                                        <label>About</label>\r\n                                        <textarea rows=\"4\" type=\"text\" placeholder=\"eg. About Me\"\r\n                                            formControlName=\"aboutMe\" class=\"form-control\"></textarea>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('aboutMe').invalid && informationForm.get('aboutMe').touched\">Add\r\n                                            About Information..</small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" class=\"btn btn-outline-primary\">Next</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card content\" id=\"test-l-3\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Education Detail <span class=\"add-icon\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"\r\n                                        data-target=\"#eductionModel\" data-toggle=\"modal\"></i></span> </h6>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"list-group\">\r\n                                <div class=\"row\" *ngFor=\"let item of schooleList;let i = index\">\r\n                                    <div class=\"col-xl-1 pt-1\">\r\n                                        <img style=\"width: 40px;\" [src]=\"item.institutionLogo\">\r\n                                    </div>\r\n                                    <div class=\"col-xl-10\">\r\n                                        <h6>{{item.institutionName}}<br />\r\n                                            <label>{{item.stream}} {{item.startDate}}-{{item.endDate}}</label>\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div class=\"col-xl-1\">\r\n                                        <span class=\"add-icon\"><i class=\"fa fa-trash\"\r\n                                                (click)=\"deleteSchool(i)\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                                <div class=\"text-right\">\r\n                                    <a href=\"javascript:void(0)\" (click)=\"next()\">Skip</a> &nbsp; <button\r\n                                        class=\"btn btn-outline-primary\" (click)=\"next()\">Next</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card content\" id=\"test-l-4\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Experience Detail <span class=\"add-icon\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"\r\n                                        data-target=\"#experianceModel\" data-toggle=\"modal\"></i></span> </h6>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"list-group\">\r\n                                <div class=\"row\" *ngFor=\"let item of experianceList;let i = index\">\r\n                                    <div class=\"col-xl-1 pt-1\">\r\n                                        <img style=\"width: 40px;\" [src]=\"item.companyLogo\">\r\n                                    </div>\r\n                                    <div class=\"col-xl-10\">\r\n                                        <h6>{{item.companyName}}<br />\r\n                                            <label>{{item.title}} {{item.startYear}}-{{item.endYear}}</label>\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div class=\"col-xl-1\">\r\n                                        <span class=\"add-icon\"><i class=\"fa fa-trash\" (click)=\"deleteExp(i)\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                            </div>\r\n                            <div class=\"text-right\" style=\"position: absolute; bottom: -70%; right: 0px;\">\r\n                                <button *ngIf=\"!isLoader\" class=\"btn btn-outline-primary\"\r\n                                    (click)=\"addUserToCometChat()\">Verify\r\n                                    Account</button>\r\n                                <button *ngIf=\"isLoader\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    &nbsp;&nbsp;Loading...</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- -------------------------------------------------------- -->\r\n    <div class=\"modal fade\" id=\"eductionModel\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-Custheader p-2\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h6 class=\"modal-title\">Add Education</h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form class=\"p-2\" [formGroup]=\"educationForm\" (submit)=\"eduSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>School Name / college <span class=\"mandatory\">*</span></label>\r\n                                <div class=\"form-control\">\r\n                                    <img [src]=\"educationForm.value.institutionLogo\" style=\"width: 20px;\">\r\n                                    <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus(1)\" (keyup)=\"search($event)\"\r\n                                        class=\"school\" placeholder=\"eg. shivaji university\"\r\n                                        formControlName=\"institutionName\">\r\n                                </div>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"educationForm.get('institutionName').invalid && educationForm.get('institutionName').touched\">Select\r\n                                    School\r\n                                    Name / college.</small>\r\n                                <div class=\"card list\" *ngIf=\"showList == 1 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(1,item)\"><img\r\n                                            src=\"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/unversity.png\"\r\n                                            style=\"width: 25px;\">&nbsp;{{item.name}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Degree</label>\r\n                                <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus(2)\" (keyup)=\"search($event)\"\r\n                                    placeholder=\"eg. Bachelor\" class=\"form-control\" formControlName=\"degree\">\r\n                                <div class=\"card\" *ngIf=\"showList == 2 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(2,item)\">{{item}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Field</label>\r\n                                <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus(3)\" (keyup)=\"search($event)\"\r\n                                    placeholder=\"eg. Business\" class=\"form-control\" formControlName=\"stream\">\r\n                                <div class=\"card\" *ngIf=\"showList == 3 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(3,item)\">{{item}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-xl-6 p-2\">\r\n                                <label>Start Year</label>\r\n                                <select class=\"form-control\" formControlName=\"startDate\">\r\n                                    <option value='' selected disabled hidden>Select Start year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-6 p-2\">\r\n                                <label>End Year</label>\r\n                                <select class=\"form-control\" formControlName=\"endDate\">\r\n                                    <option value='' selected disabled hidden>Select End year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Grade</label>\r\n                                <input type=\"text\" formControlName=\"grade\" placeholder=\"Grade\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Activities and societies</label>\r\n                                <textarea type=\"text\" formControlName=\"activities\"\r\n                                    placeholder=\"Activities and societies\" class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Description</label>\r\n                                <textarea formControlName=\"activities\" type=\"text\" placeholder=\"Description\"\r\n                                    class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary\">Save</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- -------------------------------------- -->\r\n    <div class=\"modal fade\" id=\"experianceModel\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-Custheader p-2\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h6 class=\"modal-title\">Add Experience</h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form class=\"p-2\" [formGroup]=\"experianceForm\" (submit)=\"expSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Title<span class=\"mandatory\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"eg. Sales Manager\"\r\n                                    formControlName=\"title\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"experianceForm.get('title').invalid && experianceForm.get('title').touched\">Enter\r\n                                    Tittle.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\" *ngIf=\"type == 2\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Employment Role</label>\r\n                                <select class=\"form-control\">\r\n                                    <option selected disabled hidden>Select Employment Role</option>\r\n                                    <option value=\"Full-time\">Full-time</option>\r\n                                    <option value=\"Part-Time\">Part-Time</option>\r\n                                    <option value=\"Self-Employed\">Self-Employed</option>\r\n                                    <option value=\"Freelance\">Freelance</option>\r\n                                    <option value=\"Trainee\">Trainee</option>\r\n                                    <option value=\"Internship\">Internship</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Company Name <span class=\"mandatory\">*</span></label>\r\n                                <div class=\"form-control\">\r\n                                    <img [src]=\"experianceForm.value.companyLogo\" style=\"width: 20px;\">\r\n                                    <input type=\"text\" class=\"school\" (blur)=\"onBlur()\" (focus)=\"onFocus(4)\"\r\n                                        (keyup)=\"search($event)\" placeholder=\"eg. Tablabs Technology\"\r\n                                        formControlName=\"companyName\">\r\n                                </div>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"experianceForm.get('companyName').invalid && experianceForm.get('companyName').touched\">Select\r\n                                    Company.</small>\r\n                                <div class=\"card\" *ngIf=\"showList == 4 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(4,item)\"><img\r\n                                            [src]=\"item.logo\" style=\"width: 25px;\">&nbsp;{{item.name}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Location<span class=\"mandatory\">*</span></label>\r\n                                <input type=\"text\" placeholder=\"Location\" formControlName=\"jobLocation\"\r\n                                    class=\"form-control\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"experianceForm.get('jobLocation').invalid && experianceForm.get('jobLocation').touched\">Enter\r\n                                    Location.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <input style=\"width: 30px;\" type=\"checkbox\" formControlName=\"isWorking\"><span>I am\r\n                                    currently\r\n                                    Working</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-xl-3 p-2\">\r\n                                <label>Start Date <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"startYear\">\r\n                                    <option value='' selected disabled hidden>Select Start year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-3 p-3\">\r\n                                <label></label>\r\n                                <select class=\"form-control\" formControlName=\"startMonth\">\r\n                                    <option value=\"\" selected hidden disabled>Start Month</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-3 p-2\" *ngIf=\"!this.experianceForm.value.isWorking\">\r\n                                <label>End Date <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"endYear\">\r\n                                    <option value='' selected disabled hidden>Select End year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-3 p-3\" *ngIf=\"!this.experianceForm.value.isWorking\">\r\n                                <label></label>\r\n                                <select class=\"form-control\" formControlName=\"endMonth\">\r\n                                    <option value=\"\" selected hidden disabled>End Month</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <textarea formControlName=\"description\" type=\"text\" placeholder=\"Description\"\r\n                                    class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary\">Save</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal fade\" id=\"verifyModel\" data-backdrop=\"static\" data-keyboard=\"false\" #content role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body text-center\">\r\n                    <img src=\"assets/img/tenor.gif\" />\r\n                    <h4>Hello <b> {{userInfo?.firstName}} {{userInfo?.lastName}}</b>,</h4>\r\n                    <h4> <i> You already verified your account.</i></h4>\r\n                    <div>\r\n                        <button class=\"btn btn-primary\" (click)=\"goToLogin()\">Back to login</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button hidden #model type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#verifyModel\"></button>","import { Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ReplaySubject, AsyncSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\n\nimport * as ɵngcc0 from '@angular/core';\nclass BaseLoginProvider {\n    constructor() { }\n    loadScript(id, src, onload, parentElement = null) {\n        // get document if platform is only browser\n        if (typeof document !== 'undefined' && !document.getElementById(id)) {\n            let signInJS = document.createElement('script');\n            signInJS.async = true;\n            signInJS.src = src;\n            signInJS.onload = onload;\n            if (!parentElement) {\n                parentElement = document.head;\n            }\n            parentElement.appendChild(signInJS);\n        }\n    }\n}\n\nclass SocialUser {\n}\n\nclass GoogleLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = { scope: 'email' }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript(GoogleLoginProvider.PROVIDER_ID, 'https://apis.google.com/js/platform.js', () => {\n                    gapi.load('auth2', () => {\n                        this.auth2 = gapi.auth2.init(Object.assign(Object.assign({}, this.initOptions), { client_id: this.clientId }));\n                        this.auth2\n                            .then(() => {\n                            resolve();\n                        })\n                            .catch((err) => {\n                            reject(err);\n                        });\n                    });\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus(loginStatusOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), loginStatusOptions);\n        return new Promise((resolve, reject) => {\n            if (this.auth2.isSignedIn.get()) {\n                let user = new SocialUser();\n                const profile = this.auth2.currentUser.get().getBasicProfile();\n                const authResponse = this.auth2.currentUser.get().getAuthResponse(true); // get complete authResponse object\n                user.id = profile.getId();\n                user.name = profile.getName();\n                user.email = profile.getEmail();\n                user.photoUrl = profile.getImageUrl();\n                user.firstName = profile.getGivenName();\n                user.lastName = profile.getFamilyName();\n                user.response = authResponse;\n                const resolveUser = authResponse => {\n                    user.authToken = authResponse.access_token;\n                    user.idToken = authResponse.id_token;\n                    resolve(user);\n                };\n                if (options.refreshToken) {\n                    this.auth2.currentUser.get().reloadAuthResponse().then(resolveUser);\n                }\n                else {\n                    const authResponse = this.auth2.currentUser.get().getAuthResponse(true);\n                    resolveUser(authResponse);\n                }\n            }\n            else {\n                reject(`No user is currently logged in with ${GoogleLoginProvider.PROVIDER_ID}`);\n            }\n        });\n    }\n    signIn(signInOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\n        return new Promise((resolve, reject) => {\n            const offlineAccess = options && options.offline_access;\n            let promise = !offlineAccess\n                ? this.auth2.signIn(signInOptions)\n                : this.auth2.grantOfflineAccess(signInOptions);\n            promise\n                .then((response) => {\n                let user = new SocialUser();\n                if (response && response.code) {\n                    user.authorizationCode = response.code;\n                }\n                else {\n                    let profile = this.auth2.currentUser.get().getBasicProfile();\n                    let authResponse = this.auth2.currentUser.get().getAuthResponse(true);\n                    let token = authResponse.access_token;\n                    let backendToken = authResponse.id_token;\n                    user.id = profile.getId();\n                    user.name = profile.getName();\n                    user.email = profile.getEmail();\n                    user.photoUrl = profile.getImageUrl();\n                    user.firstName = profile.getGivenName();\n                    user.lastName = profile.getFamilyName();\n                    user.authToken = token;\n                    user.idToken = backendToken;\n                    user.response = authResponse;\n                }\n                resolve(user);\n            }, (closed) => {\n                reject(closed);\n            })\n                .catch((err) => {\n                reject(err);\n            });\n        });\n    }\n    signOut(revoke) {\n        return new Promise((resolve, reject) => {\n            let signOutPromise;\n            if (revoke) {\n                signOutPromise = this.auth2.disconnect();\n            }\n            else {\n                signOutPromise = this.auth2.signOut();\n            }\n            signOutPromise\n                .then((err) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch((err) => {\n                reject(err);\n            });\n        });\n    }\n}\nGoogleLoginProvider.PROVIDER_ID = 'GOOGLE';\n\n/**\n * The service encapsulating the social login functionality. Exposes methods like\n * `signIn`, `signOut`. Also, exposes an `authState` `Observable` that one can\n * subscribe to get the current logged in user information.\n *\n * @dynamic\n */\nclass SocialAuthService {\n    /**\n     * @param config A `SocialAuthServiceConfig` object or a `Promise` that resolves to a `SocialAuthServiceConfig` object\n     */\n    constructor(config) {\n        this.providers = new Map();\n        this.autoLogin = false;\n        this._user = null;\n        this._authState = new ReplaySubject(1);\n        /* Consider making this an enum comprising LOADING, LOADED, FAILED etc. */\n        this.initialized = false;\n        this._initState = new AsyncSubject();\n        if (config instanceof Promise) {\n            config.then((config) => {\n                this.initialize(config);\n            });\n        }\n        else {\n            this.initialize(config);\n        }\n    }\n    /** An `Observable` that one can subscribe to get the current logged in user information */\n    get authState() {\n        return this._authState.asObservable();\n    }\n    /** An `Observable` to communicate the readiness of the service and associated login providers */\n    get initState() {\n        return this._initState.asObservable();\n    }\n    initialize(config) {\n        this.autoLogin = config.autoLogin !== undefined ? config.autoLogin : false;\n        const { onError = console.error } = config;\n        config.providers.forEach((item) => {\n            this.providers.set(item.id, item.provider);\n        });\n        Promise.all(Array.from(this.providers.values()).map((provider) => provider.initialize()))\n            .then(() => {\n            if (this.autoLogin) {\n                const loginStatusPromises = [];\n                let loggedIn = false;\n                this.providers.forEach((provider, key) => {\n                    let promise = provider.getLoginStatus();\n                    loginStatusPromises.push(promise);\n                    promise\n                        .then((user) => {\n                        user.provider = key;\n                        this._user = user;\n                        this._authState.next(user);\n                        loggedIn = true;\n                    })\n                        .catch(console.debug);\n                });\n                Promise.all(loginStatusPromises).catch(() => {\n                    if (!loggedIn) {\n                        this._user = null;\n                        this._authState.next(null);\n                    }\n                });\n            }\n        })\n            .catch((error) => {\n            onError(error);\n        })\n            .finally(() => {\n            this.initialized = true;\n            this._initState.next(this.initialized);\n            this._initState.complete();\n        });\n    }\n    refreshAuthToken(providerId) {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\n            }\n            else if (providerId !== GoogleLoginProvider.PROVIDER_ID) {\n                reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\n            }\n            else {\n                const providerObject = this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject\n                        .getLoginStatus({ refreshToken: true })\n                        .then((user) => {\n                        user.provider = providerId;\n                        this._user = user;\n                        this._authState.next(user);\n                        resolve();\n                    })\n                        .catch((err) => {\n                        reject(err);\n                    });\n                }\n                else {\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n                }\n            }\n        });\n    }\n    /**\n     * A method used to sign in a user with a specific `LoginProvider`.\n     *\n     * @param providerId Id with which the `LoginProvider` has been registered with the service\n     * @param signInOptions Optional `LoginProvider` specific arguments\n     * @returns A `Promise` that resolves to the authenticated user information\n     */\n    signIn(providerId, signInOptions) {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\n            }\n            else {\n                let providerObject = this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject\n                        .signIn(signInOptions)\n                        .then((user) => {\n                        user.provider = providerId;\n                        resolve(user);\n                        this._user = user;\n                        this._authState.next(user);\n                    })\n                        .catch((err) => {\n                        reject(err);\n                    });\n                }\n                else {\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n                }\n            }\n        });\n    }\n    /**\n     * A method used to sign out the currently loggen in user.\n     *\n     * @param revoke Optional parameter to specify whether a hard sign out is to be performed\n     * @returns A `Promise` that resolves if the operation is successful, rejects otherwise\n     */\n    signOut(revoke = false) {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\n            }\n            else if (!this._user) {\n                reject(SocialAuthService.ERR_NOT_LOGGED_IN);\n            }\n            else {\n                let providerId = this._user.provider;\n                let providerObject = this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject\n                        .signOut(revoke)\n                        .then(() => {\n                        resolve();\n                        this._user = null;\n                        this._authState.next(null);\n                    })\n                        .catch((err) => {\n                        reject(err);\n                    });\n                }\n                else {\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n                }\n            }\n        });\n    }\n}\nSocialAuthService.ɵfac = function SocialAuthService_Factory(t) { return new (t || SocialAuthService)(ɵngcc0.ɵɵinject('SocialAuthServiceConfig')); };\nSocialAuthService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SocialAuthService, factory: SocialAuthService.ɵfac });\nSocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\nSocialAuthService.ERR_NOT_LOGGED_IN = 'Not logged in';\nSocialAuthService.ERR_NOT_INITIALIZED = 'Login providers not ready yet. Are there errors on your console?';\nSocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN = 'Chosen login provider is not supported for refreshing a token';\nSocialAuthService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: ['SocialAuthServiceConfig',] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialAuthService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: ['SocialAuthServiceConfig']\n            }] }]; }, null); })();\n\n/**\n * The main module of angularx-social-login library.\n */\nclass SocialLoginModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error('SocialLoginModule is already loaded. Import it in the AppModule only');\n        }\n    }\n    static initialize(config) {\n        return {\n            ngModule: SocialLoginModule,\n            providers: [\n                SocialAuthService,\n                {\n                    provide: 'SocialAuthServiceConfig',\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nSocialLoginModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SocialLoginModule });\nSocialLoginModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SocialLoginModule_Factory(t) { return new (t || SocialLoginModule)(ɵngcc0.ɵɵinject(SocialLoginModule, 12)); }, providers: [\n        SocialAuthService\n    ], imports: [[\n            CommonModule\n        ]] });\nSocialLoginModule.ctorParameters = () => [\n    { type: SocialLoginModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SocialLoginModule, { imports: function () { return [CommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialLoginModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                providers: [\n                    SocialAuthService\n                ]\n            }]\n    }], function () { return [{ type: SocialLoginModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n\n// Simulates login / logout without actually requiring an Internet connection.\n//\n// Useful for certain development situations.\n//\n// For example, if you want to simulate the greatest football referee England has ever produced:\n//\n//  const dummyUser: SocialUser = {\n//     id: '0123456789',\n//     name: 'Howard Webb',\n//     email: 'howard@webb.com',\n//     firstName: 'Howard',\n//     lastName: 'Webb',\n//     authToken: 'dummyAuthToken',\n//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',\n//     provider: 'DUMMY',\n//     idToken: 'dummyIdToken',\n//     authorizationCode: 'dummyAuthCode'\n// };\n//\n//  let config = new AuthServiceConfig([\n//  { ... },\n//  {\n//       id: DummyLoginProvider.PROVIDER_ID,\n//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor\n//   },\n//  { ... }\n//  ]);\nclass DummyLoginProvider extends BaseLoginProvider {\n    constructor(dummy) {\n        super();\n        if (dummy) {\n            this.dummy = dummy;\n        }\n        else {\n            this.dummy = DummyLoginProvider.DEFAULT_USER;\n        }\n        // Start not logged in\n        this.loggedIn = false;\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => {\n            if (this.loggedIn) {\n                resolve(this.dummy);\n            }\n            else {\n                reject('No user is currently logged in.');\n            }\n        });\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    }\n    signIn() {\n        return new Promise((resolve, reject) => {\n            this.loggedIn = true;\n            resolve(this.dummy);\n        });\n    }\n    signOut(revoke) {\n        return new Promise((resolve, reject) => {\n            this.loggedIn = false;\n            resolve();\n        });\n    }\n}\nDummyLoginProvider.PROVIDER_ID = 'DUMMY';\nDummyLoginProvider.DEFAULT_USER = {\n    id: '1234567890',\n    name: 'Mickey Mouse',\n    email: 'mickey@mouse.com',\n    firstName: 'Mickey',\n    lastName: 'Mouse',\n    authToken: 'dummyAuthToken',\n    photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',\n    provider: 'DUMMY',\n    idToken: 'dummyIdToken',\n    authorizationCode: 'dummyAuthCode',\n    response: {}\n};\n\nclass FacebookLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = {\n        scope: 'email,public_profile',\n        locale: 'en_US',\n        fields: 'name,email,picture,first_name,last_name',\n        version: 'v4.0',\n    }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript(FacebookLoginProvider.PROVIDER_ID, `//connect.facebook.net/${this.initOptions.locale}/sdk.js`, () => {\n                    FB.init({\n                        appId: this.clientId,\n                        autoLogAppEvents: true,\n                        cookie: true,\n                        xfbml: true,\n                        version: this.initOptions.version,\n                    });\n                    resolve();\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => {\n            FB.getLoginStatus((response) => {\n                if (response.status === 'connected') {\n                    let authResponse = response.authResponse;\n                    FB.api(`/me?fields=${this.initOptions.fields}`, (fbUser) => {\n                        let user = new SocialUser();\n                        user.id = fbUser.id;\n                        user.name = fbUser.name;\n                        user.email = fbUser.email;\n                        user.photoUrl =\n                            'https://graph.facebook.com/' +\n                                fbUser.id +\n                                '/picture?type=normal&access_token=' +\n                                authResponse.accessToken;\n                        user.firstName = fbUser.first_name;\n                        user.lastName = fbUser.last_name;\n                        user.authToken = authResponse.accessToken;\n                        user.response = fbUser;\n                        resolve(user);\n                    });\n                }\n                else {\n                    reject(`No user is currently logged in with ${FacebookLoginProvider.PROVIDER_ID}`);\n                }\n            });\n        });\n    }\n    signIn(signInOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\n        return new Promise((resolve, reject) => {\n            FB.login((response) => {\n                if (response.authResponse) {\n                    let authResponse = response.authResponse;\n                    FB.api(`/me?fields=${options.fields}`, (fbUser) => {\n                        let user = new SocialUser();\n                        user.id = fbUser.id;\n                        user.name = fbUser.name;\n                        user.email = fbUser.email;\n                        user.photoUrl =\n                            'https://graph.facebook.com/' +\n                                fbUser.id +\n                                '/picture?type=normal';\n                        user.firstName = fbUser.first_name;\n                        user.lastName = fbUser.last_name;\n                        user.authToken = authResponse.accessToken;\n                        user.response = fbUser;\n                        resolve(user);\n                    });\n                }\n                else {\n                    reject('User cancelled login or did not fully authorize.');\n                }\n            }, options);\n        });\n    }\n    signOut() {\n        return new Promise((resolve, reject) => {\n            FB.logout((response) => {\n                resolve();\n            });\n        });\n    }\n}\nFacebookLoginProvider.PROVIDER_ID = 'FACEBOOK';\n\nclass AmazonLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = {\n        scope: 'profile',\n        scope_data: {\n            profile: { essential: false },\n        },\n        redirect_uri: location.origin,\n    }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n    }\n    initialize() {\n        let amazonRoot = null;\n        if (document) {\n            amazonRoot = document.createElement('div');\n            amazonRoot.id = 'amazon-root';\n            document.body.appendChild(amazonRoot);\n        }\n        window.onAmazonLoginReady = () => {\n            amazon.Login.setClientId(this.clientId);\n        };\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript('amazon-login-sdk', 'https://assets.loginwithamazon.com/sdk/na/login1.js', () => {\n                    resolve();\n                }, amazonRoot);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => {\n            let token = this.retrieveToken();\n            if (token) {\n                amazon.Login.retrieveProfile(token, (response) => {\n                    if (response.success) {\n                        let user = new SocialUser();\n                        user.id = response.profile.CustomerId;\n                        user.name = response.profile.Name;\n                        user.email = response.profile.PrimaryEmail;\n                        user.response = response.profile;\n                        resolve(user);\n                    }\n                    else {\n                        reject(response.error);\n                    }\n                });\n            }\n            else {\n                reject(`No user is currently logged in with ${AmazonLoginProvider.PROVIDER_ID}`);\n            }\n        });\n    }\n    signIn(signInOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\n        return new Promise((resolve, reject) => {\n            amazon.Login.authorize(options, (authResponse) => {\n                if (authResponse.error) {\n                    reject(authResponse.error);\n                }\n                else {\n                    amazon.Login.retrieveProfile(authResponse.access_token, (response) => {\n                        let user = new SocialUser();\n                        user.id = response.profile.CustomerId;\n                        user.name = response.profile.Name;\n                        user.email = response.profile.PrimaryEmail;\n                        user.authToken = authResponse.access_token;\n                        user.response = response.profile;\n                        this.persistToken(authResponse.access_token);\n                        resolve(user);\n                    });\n                }\n            });\n        });\n    }\n    signOut() {\n        return new Promise((resolve, reject) => {\n            try {\n                amazon.Login.logout();\n                this.clearToken();\n                resolve();\n            }\n            catch (err) {\n                reject(err.message);\n            }\n        });\n    }\n    persistToken(token) {\n        localStorage.setItem(`${AmazonLoginProvider.PROVIDER_ID}_token`, token);\n    }\n    retrieveToken() {\n        return localStorage.getItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\n    }\n    clearToken() {\n        localStorage.removeItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\n    }\n}\nAmazonLoginProvider.PROVIDER_ID = 'AMAZON';\n\nclass VKLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = {\n        fields: 'photo_max,contacts',\n        version: '5.124',\n    }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n        this.VK_API_URL = '//vk.com/js/api/openapi.js';\n        this.VK_API_GET_USER = 'users.get';\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript(VKLoginProvider.PROVIDER_ID, this.VK_API_URL, () => {\n                    VK.init({\n                        apiId: this.clientId,\n                    });\n                    resolve();\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => this.getLoginStatusInternal(resolve, reject));\n    }\n    signIn() {\n        return new Promise((resolve, reject) => this.signInInternal(resolve, reject));\n    }\n    signOut() {\n        return new Promise((resolve, reject) => {\n            VK.Auth.logout((response) => {\n                resolve();\n            });\n        });\n    }\n    signInInternal(resolve, reject) {\n        VK.Auth.login((loginResponse) => {\n            if (loginResponse.status === 'connected') {\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\n            }\n        });\n    }\n    getUser(userId, token, resolve) {\n        VK.Api.call(this.VK_API_GET_USER, {\n            user_id: userId,\n            fields: this.initOptions.fields,\n            v: this.initOptions.version,\n        }, (userResponse) => {\n            resolve(this.createUser(Object.assign({}, { token }, userResponse.response[0])));\n        });\n    }\n    getLoginStatusInternal(resolve, reject) {\n        VK.Auth.getLoginStatus((loginResponse) => {\n            if (loginResponse.status === 'connected') {\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\n            }\n        });\n    }\n    createUser(response) {\n        const user = new SocialUser();\n        user.id = response.id;\n        user.name = `${response.first_name} ${response.last_name}`;\n        user.photoUrl = response.photo_max;\n        user.authToken = response.token;\n        return user;\n    }\n}\nVKLoginProvider.PROVIDER_ID = 'VK';\n\n/**\n * Protocol modes supported by MSAL.\n */\nvar ProtocolMode;\n(function (ProtocolMode) {\n    ProtocolMode[\"AAD\"] = \"AAD\";\n    ProtocolMode[\"OIDC\"] = \"OIDC\";\n})(ProtocolMode || (ProtocolMode = {}));\nconst COMMON_AUTHORITY = 'https://login.microsoftonline.com/common/';\n/**\n * Microsoft Authentication using MSAL v2: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser\n */\nclass MicrosoftLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = {\n            authority: COMMON_AUTHORITY,\n            scopes: ['openid', 'email', 'profile', 'User.Read'],\n            knownAuthorities: [],\n            protocolMode: ProtocolMode.AAD,\n            clientCapabilities: [],\n            cacheLocation: 'sessionStorage'\n        };\n        this.initOptions = Object.assign(Object.assign({}, this.initOptions), initOptions);\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            this.loadScript(MicrosoftLoginProvider.PROVIDER_ID, 'https://alcdn.msauth.net/browser/2.13.1/js/msal-browser.js', () => {\n                var _a;\n                try {\n                    const config = {\n                        auth: {\n                            clientId: this.clientId,\n                            redirectUri: (_a = this.initOptions.redirect_uri) !== null && _a !== void 0 ? _a : location.origin,\n                            authority: this.initOptions.authority,\n                            knownAuthorities: this.initOptions.knownAuthorities,\n                            protocolMode: this.initOptions.protocolMode,\n                            clientCapabilities: this.initOptions.clientCapabilities\n                        },\n                        cache: !this.initOptions.cacheLocation ? null : {\n                            cacheLocation: this.initOptions.cacheLocation\n                        }\n                    };\n                    this._instance = new msal.PublicClientApplication(config);\n                    resolve();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    getSocialUser(loginResponse) {\n        return new Promise((resolve, reject) => {\n            //After login, use Microsoft Graph API to get user info\n            let meRequest = new XMLHttpRequest();\n            meRequest.onreadystatechange = () => {\n                if (meRequest.readyState == 4) {\n                    try {\n                        if (meRequest.status == 200) {\n                            let userInfo = JSON.parse(meRequest.responseText);\n                            let user = new SocialUser();\n                            user.provider = MicrosoftLoginProvider.PROVIDER_ID;\n                            user.id = loginResponse.idToken;\n                            user.authToken = loginResponse.accessToken;\n                            user.name = loginResponse.idTokenClaims.name;\n                            user.email = loginResponse.account.username;\n                            user.idToken = loginResponse.idToken;\n                            user.response = loginResponse;\n                            user.firstName = userInfo.givenName;\n                            user.lastName = userInfo.surname;\n                            resolve(user);\n                        }\n                        else {\n                            reject(`Error retrieving user info: ${meRequest.status}`);\n                        }\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                }\n            };\n            //Microsoft Graph ME Endpoint: https://docs.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http\n            meRequest.open('GET', 'https://graph.microsoft.com/v1.0/me');\n            meRequest.setRequestHeader('Authorization', `Bearer ${loginResponse.accessToken}`);\n            try {\n                meRequest.send();\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = this._instance.getAllAccounts();\n            if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\n                const loginResponse = yield this._instance.ssoSilent({\n                    scopes: this.initOptions.scopes,\n                    loginHint: accounts[0].username\n                });\n                return yield this.getSocialUser(loginResponse);\n            }\n            else {\n                throw `No user is currently logged in with ${MicrosoftLoginProvider.PROVIDER_ID}`;\n            }\n        });\n    }\n    signIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const loginResponse = yield this._instance.loginPopup({\n                scopes: this.initOptions.scopes\n            });\n            return yield this.getSocialUser(loginResponse);\n        });\n    }\n    signOut(revoke) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = this._instance.getAllAccounts();\n            if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\n                yield this._instance.logoutPopup({\n                    account: accounts[0],\n                    postLogoutRedirectUri: (_b = (_a = this.initOptions.logout_redirect_uri) !== null && _a !== void 0 ? _a : this.initOptions.redirect_uri) !== null && _b !== void 0 ? _b : location.href\n                });\n            }\n        });\n    }\n}\nMicrosoftLoginProvider.PROVIDER_ID = 'MICROSOFT';\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AmazonLoginProvider, BaseLoginProvider, DummyLoginProvider, FacebookLoginProvider, GoogleLoginProvider, MicrosoftLoginProvider, SocialAuthService, SocialLoginModule, SocialUser, VKLoginProvider };\n\n//# sourceMappingURL=angularx-social-login.js.map","import { FacebookLoginProvider, GoogleLoginProvider } from 'angularx-social-login';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SocialAuthServiceConfig, SocialLoginModule } from 'angularx-social-login';\r\n\r\nimport { AccountApiService } from './account-api.service';\r\nimport { AccountComponent } from './account.component';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NewProfileComponent } from './new-profile/new-profile.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [AccountComponent, LoginComponent, ForgotpasswordComponent, NewProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SocialLoginModule,\r\n    AccountRoutingModule,\r\n  ],\r\n  providers: [AccountApiService,\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              '761689346542-r4m604edknk2jmuq99cr9tssm7j5r7ut.apps.googleusercontent.com'\r\n            )\r\n          },\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider('419759909345362')\r\n          }\r\n        ]\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n"],"sourceRoot":"webpack:///"}