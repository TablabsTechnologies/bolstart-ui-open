{"version":3,"sources":["webpack:///src/app/components/account/account.component.ts","webpack:///src/app/components/account/account.component.html","webpack:///src/app/components/account/forgotpassword/forgotpassword.component.ts","webpack:///src/app/components/account/forgotpassword/forgotpassword.component.html","webpack:///src/app/components/account/account-routing.module.ts","webpack:///src/app/components/account/login/login.component.ts","webpack:///src/app/components/account/login/login.component.html","webpack:///src/app/components/account/new-profile/new-profile.component.ts","webpack:///src/app/components/account/new-profile/new-profile.component.html","webpack:///node_modules/angularx-social-login/__ivy_ngcc__/fesm2015/angularx-social-login.js","webpack:///src/app/components/account/account.module.ts"],"names":["AccountComponent","selector","templateUrl","styleUrls","showModel","ForgotpasswordComponent","userService","toastr","router","route","fieldTextType","isLoading","isPwdChange","state","isgenerate","resetForm","newPassword","required","confirmPassword","getPWDFlag","queryParams","subscribe","param","isPasswordChange","emailId","undefined","formData","FormData","append","generateOTP","res","success","isVerifiy","otpkey","JSON","parse","data","Details","message","error","warning","otp","verifyOTP","isReset","valid","value","resetPassword","navigate","routes","path","component","AccountRoutingModule","forChild","imports","exports","LoginComponent","fb","apiService","authService","toggle","termsLink","localStorage","clear","register","loginUser","link","location","href","slice","number","newUserFrom","reset","loginFrom","patchValue","countryCode","document","documentElement","scrollTop","group","email","firstName","pattern","onlyAlphabetRegex","mobileNumber","lastName","password","policy","username","markAllAsTouched","obj","isEmailVerified","sendEmail","id","email_pattern","mobile_pattern","test","authLoginUsingEmail","encrypt","stringify","toString","setItem","company_id","authLoginUsingMobile","signIn","PROVIDER_ID","then","isGoogleLogged","NewProfileComponent","accountService","showList","type","monthList","month","dayList","day","stateList","cityList","industryList","industries","countryList","country","yeaList","years","schooleList","experianceList","searchList","isLoader","dummyIcon","stepper","next","selectedType","roleType","initializedInfoForm","informationForm","userInfo","getParams","initializeEduForm","initializeExpForm","querySelector","linear","animation","params","getUserInfo","userId","getUserInfoByID","model","nativeElement","click","middleNmae","headline","industry","aboutMe","to","educationForm","institutionId","institutionLogo","institutionName","activities","degree","endDate","grade","societies","startDate","stream","push","hide","experianceForm","companyId","companyName","companyLogo","title","startYear","startMonth","jobLocation","isWorking","endMonth","endYear","description","onsetValue","adhaarCard","adhar","bio","education","experience","gst","typeOfUser","industryName","uid","isPriority","toLowerCase","verifyAccount","setTimeout","reload","user","User","setName","setAvatar","createUser","AUTH_KEY","event","getUniversityList","field","getAllCompanyList","target","item","name","logo","index","splice","map","getStateList","countryID","getStateListBasedOnCountry","getCityList","stateID","getCityListBasedOnState","keyWord","selectType","infoSubmit","selectCountry","selectState","eduSubmit","onBlur","onFocus","search","expSubmit","goToLogin","BaseLoginProvider","src","onload","parentElement","getElementById","signInJS","createElement","async","head","appendChild","SocialUser","GoogleLoginProvider","clientId","initOptions","scope","Promise","resolve","reject","loadScript","gapi","load","auth2","init","Object","assign","client_id","err","loginStatusOptions","options","isSignedIn","get","profile","currentUser","getBasicProfile","authResponse","getAuthResponse","getId","getName","getEmail","photoUrl","getImageUrl","getGivenName","getFamilyName","response","resolveUser","authToken","access_token","idToken","id_token","refreshToken","reloadAuthResponse","signInOptions","offlineAccess","offline_access","promise","grantOfflineAccess","code","authorizationCode","token","backendToken","closed","revoke","signOutPromise","disconnect","signOut","SocialAuthService","config","providers","Map","autoLogin","_user","_authState","initialized","_initState","initialize","asObservable","onError","console","forEach","set","provider","all","Array","from","values","loginStatusPromises","loggedIn","key","getLoginStatus","debug","complete","providerId","ERR_NOT_INITIALIZED","ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN","providerObject","ERR_LOGIN_PROVIDER_NOT_FOUND","ERR_NOT_LOGGED_IN","ɵfac","SocialAuthService_Factory","t","ɵprov","factory","ctorParameters","decorators","args","SocialLoginModule","parentModule","Error","ngModule","provide","useValue","ɵmod","ɵinj","SocialLoginModule_Factory","ngJitMode","DummyLoginProvider","dummy","DEFAULT_USER","FacebookLoginProvider","locale","fields","version","FB","appId","autoLogAppEvents","cookie","xfbml","status","api","fbUser","accessToken","first_name","last_name","login","logout","AmazonLoginProvider","scope_data","essential","redirect_uri","origin","amazonRoot","body","window","onAmazonLoginReady","amazon","Login","setClientId","retrieveToken","retrieveProfile","CustomerId","Name","PrimaryEmail","authorize","persistToken","clearToken","getItem","removeItem","VKLoginProvider","VK_API_URL","VK_API_GET_USER","VK","apiId","getLoginStatusInternal","signInInternal","Auth","loginResponse","getUser","session","mid","sid","Api","call","user_id","v","userResponse","photo_max","ProtocolMode","COMMON_AUTHORITY","MicrosoftLoginProvider","authority","scopes","knownAuthorities","protocolMode","AAD","clientCapabilities","cacheLocation","_a","auth","redirectUri","cache","_instance","msal","PublicClientApplication","e","meRequest","XMLHttpRequest","onreadystatechange","readyState","responseText","idTokenClaims","account","givenName","surname","open","setRequestHeader","send","accounts","getAllAccounts","length","ssoSilent","loginHint","getSocialUser","loginPopup","_b","logoutPopup","postLogoutRedirectUri","logout_redirect_uri","AccountModule","declarations"],"mappings":"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","file":"components-account-account-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../account-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nenum showModel {\r\n  isgenerate = 1,\r\n  isVerifiy = 2,\r\n  isReset = 3,\r\n}\r\n@Component({\r\n  selector: 'app-forgotpassword',\r\n  templateUrl: './forgotpassword.component.html',\r\n  styleUrls: ['./forgotpassword.component.scss']\r\n})\r\nexport class ForgotpasswordComponent implements OnInit {\r\n  emailId: any;\r\n  state\r\n  otp: string;\r\n  otpkey: any;\r\n  resetForm: FormGroup;\r\n  fieldTextType: boolean = false;\r\n  isLoading: boolean = false;\r\n  isPwdChange: boolean = false\r\n  constructor(\r\n    private userService: AccountApiService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.state = showModel.isgenerate\r\n    this.resetForm = new FormGroup({\r\n      newPassword: new FormControl('', [Validators.required]),\r\n      confirmPassword: new FormControl('', [Validators.required]),\r\n\r\n    },\r\n    );\r\n    this.getPWDFlag();\r\n  }\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  getPWDFlag() {\r\n    this.route.queryParams.subscribe(param => {\r\n      this.isPwdChange = param.isPasswordChange\r\n    })\r\n  }\r\n  generate() {\r\n    if (this.emailId != null || this.emailId != undefined) {\r\n      let formData = new FormData();\r\n      formData.append('mobileNumber', this.emailId);\r\n      this.isLoading = true;\r\n      this.userService.generateOTP(formData).subscribe(res => {\r\n        this.isLoading = false\r\n        if (res.success) {\r\n          this.state = showModel.isVerifiy;\r\n          this.otpkey = JSON.parse(res.data).Details;\r\n          this.toastr.success(res.message, \"Success..!\");\r\n        } else {\r\n          this.toastr.error(res.message, \"Error..!\");\r\n        }\r\n      })\r\n    } else {\r\n      this.toastr.warning(\"Please Enter emailId\", 'Warning..!');\r\n    }\r\n  }\r\n  backToGenerate() {\r\n    this.state = showModel.isgenerate;\r\n\r\n  }\r\n  goToReset() {\r\n    if (this.otp != null || this.otp != undefined) {\r\n      let formData = new FormData();\r\n      formData.append('mobileNumber', this.emailId);\r\n      formData.append('otp', this.otp);\r\n      this.isLoading = true;\r\n      this.userService.verifyOTP(formData).subscribe(res => {\r\n        this.isLoading = false;\r\n        if (res.success) {\r\n          this.state = showModel.isReset;\r\n          this.toastr.success(res.message, \"Success..!\");\r\n        } else {\r\n          this.toastr.error(res.message, \"Error..!\");\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.resetForm.valid) {\r\n      if (this.resetForm.value.newPassword == this.resetForm.value.confirmPassword) {\r\n        let formData = new FormData();\r\n        formData.append('mobileNumber', this.emailId);\r\n        formData.append('password', this.resetForm.value.newPassword);\r\n        this.isLoading = true;\r\n        this.userService.resetPassword(formData).subscribe(res => {\r\n          this.isLoading = false;\r\n          if (res.success) {\r\n            this.toastr.success(res.message, \"Success..!\");\r\n            this.router.navigate(['/account/login']);\r\n          } else {\r\n            this.toastr.error(res.message, \"Error..!\");\r\n          }\r\n        })\r\n\r\n      } else {\r\n        this.toastr.warning(\"New Password and Confirm Password does not match\", 'Warning..!');\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"pwd-page\">\r\n    <div class=\"container\" *ngIf=\"state == 1\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 offset-lg-3 \">\r\n                <h2 *ngIf=\"!isPwdChange\">Forget Your Password</h2>\r\n                <h2 *ngIf=\"isPwdChange\">Change Your Password</h2>\r\n\r\n                <div class=\"theme-form text-center\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <input type=\"text\" [(ngModel)]=\"emailId\" class=\"form-control\" id=\"email\"\r\n                                placeholder=\"abc@domain.com\" required=\"\">\r\n\r\n                            <button *ngIf=\"!isLoading\" class=\"btn btn-primary\" (click)=\"generate()\">Generate\r\n                                OTP</button>\r\n                            <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                    aria-hidden=\"true\"></i> &nbsp;&nbsp;Loading...</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <a routerLink=\"/account/login\">Back</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\" *ngIf=\"state == 2\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 offset-lg-3\">\r\n                <h2>Enter Your OTP</h2>\r\n                <div class=\"theme-form\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <input type=\"text\" class=\"form-control otp\" style=\"font-size: large; font-weight: bold;\"\r\n                                [(ngModel)]=\"otp\" placeholder=\"******\">\r\n                            <button *ngIf=\"!isLoading\" class=\"btn btn-primary\" (click)=\"goToReset()\">Verify OTP</button>\r\n                            <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                    aria-hidden=\"true\"></i> &nbsp;&nbsp;Loading...</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-group\">\r\n                                <a (click)=\"backToGenerate();\">Back</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\" *ngIf=\"state == 3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 offset-lg-3\">\r\n                <h2>Register New Password</h2>\r\n                <form class=\"theme-form\" [formGroup]=\"resetForm\" (ngSubmit)=\"resetPassword();\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label>New Password &nbsp; <i class=\"fa\"\r\n                                    [ngClass]=\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\"\r\n                                    (click)=\"toggleFieldTextType()\"></i></label><br />\r\n                            <small\r\n                                [class.d-none]=\"resetForm.get('newPassword').valid || resetForm.get('newPassword').untouched\"\r\n                                class=\"text-danger\">Invalid! at least one number.</small>\r\n                            <input [type]=\"fieldTextType ? 'text' : 'password'\" class=\"form-control\"\r\n                                formControlName=\"newPassword\" placeholder=\"****\">\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label>Confirm Password </label><br />\r\n                            <small\r\n                                [class.d-none]=\"resetForm.get('confirmPassword').valid || resetForm.get('confirmPassword').untouched\"\r\n                                class=\"text-danger\">Invalid! at least one number.</small>\r\n                            <input [type]=\"fieldTextType ? 'text' : 'password'\" class=\"form-control\"\r\n                                formControlName=\"confirmPassword\" placeholder=\"****\">\r\n                        </div>\r\n\r\n                    </div>\r\n                    <button type=\"submit\" *ngIf=\"!isLoading\" class=\"btn btn-primary\"\r\n                        [disabled]=\" !resetForm.valid\">Confirm</button>\r\n                    <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\" fa fa-spinner fa-spin\"\r\n                            aria-hidden=\"true\"></i> &nbsp;&nbsp;Loading...</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!--Section ends-->","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NewProfileComponent } from './new-profile/new-profile.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'profile-new',\r\n    component: NewProfileComponent\r\n  },\r\n  {\r\n    path: 'forget/password',\r\n    component: ForgotpasswordComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import * as CryptoJS from 'crypto-js';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../account-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { SocialAuthService } from \"angularx-social-login\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\ndeclare var window: any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public newUserFrom: FormGroup;\r\n  public loginFrom: FormGroup;\r\n  isLoading: boolean;\r\n  fieldTextType;\r\n  link: any;\r\n  toggle: number = 2;\r\n  termsLink = \"https://bolstartimages.s3.ap-south-1.amazonaws.com/Terms+of+Use_Bolstart_End+Users_15122020.pdf\"\r\n  constructor(private fb: FormBuilder, private apiService: AccountApiService,\r\n    private toastr: ToastrService, public router: Router, private authService: SocialAuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    localStorage.clear();\r\n    this.register();\r\n    this.loginUser();\r\n    this.link = location.href.slice(0, - 5) + \"profile-new?userId=\"\r\n\r\n  }\r\n  switch(number) {\r\n    this.toggle = number;\r\n    this.newUserFrom.reset();\r\n    this.loginFrom.reset();\r\n    this.newUserFrom.patchValue({\r\n      countryCode: \"+91\"\r\n    })\r\n    if (this.toggle == 2) {\r\n      document.documentElement.scrollTop = 12;\r\n\r\n    }\r\n  }\r\n\r\n  register() {\r\n    this.newUserFrom = this.fb.group({\r\n      emailId: ['', [Validators.required, Validators.email]],\r\n      firstName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      mobileNumber: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      password: ['', [Validators.required]],\r\n      confirmPassword: ['', [Validators.required]],\r\n      policy: ['', [Validators.required]],\r\n      countryCode: ['+91', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  loginUser() {\r\n    this.loginFrom = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n\r\n  /* ========================= Registartion Module =================================== */\r\n  onRegister() {\r\n    this.newUserFrom.markAllAsTouched();\r\n    if (this.newUserFrom.value.password == this.newUserFrom.value.confirmPassword) {\r\n      if (this.newUserFrom.value.policy == true) {\r\n        if (this.newUserFrom.valid) {\r\n          let obj = {\r\n            emailId: this.newUserFrom.value.emailId,\r\n            firstName: this.newUserFrom.value.firstName,\r\n            lastName: this.newUserFrom.value.lastName,\r\n            mobileNumber: this.newUserFrom.value.mobileNumber,\r\n            password: this.newUserFrom.value.password,\r\n            isEmailVerified: \"false\"\r\n          }\r\n          this.isLoading = true;\r\n          this.apiService.register(obj).subscribe(res => {\r\n            this.isLoading = false;\r\n            if (res.success) {\r\n              this.toggle = 2\r\n              this.sendEmail(res.data);\r\n            } else {\r\n              this.toastr.warning(res.message);\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        this.toastr.error(\"Please accept Bolstart Policies\")\r\n      }\r\n    } else {\r\n      this.toastr.error(\"Password and Confirm Password dosen't match.\")\r\n    }\r\n\r\n  }\r\n\r\n  sendEmail(obj) {\r\n    var formData = new FormData();\r\n    formData.append('toemailId', this.newUserFrom.value.emailId);\r\n    formData.append('subject', 'Bolstart account verification');\r\n    formData.append('message', `${this.link + obj.id}`);\r\n    this.apiService.sendEmail(formData).subscribe(res => {\r\n      if (res.success) {\r\n        this.toastr.success(res.message);\r\n      } else {\r\n        this.toastr.warning(res.message);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  /* ========================================================== */\r\n  /* ========================= Login Module =================================== */\r\n  onLogin() {\r\n    let formData = new FormData;\r\n    formData.append(\"password\", this.loginFrom.value.password);\r\n    formData.append(\"os\", \"web\");\r\n    formData.append(\"deviceId\", \"89ABCDEF-01234567-89ABCDEF\");\r\n    var email_pattern = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n    var mobile_pattern = /^[0-9]/;\r\n    if (email_pattern.test(this.loginFrom.value.username)) {\r\n      formData.append(\"emailId\", this.loginFrom.value.username);\r\n      this.isLoading = true;\r\n      this.apiService.authLoginUsingEmail(formData).subscribe(res => {\r\n        \r\n        this.isLoading = false;\r\n        if (res.data != null) {\r\n          if (res.data.isEmailVerified == 'true') {\r\n            let encrypt = CryptoJS.AES.encrypt(JSON.stringify(res.data), \"Bollstart\").toString();\r\n            localStorage.setItem('member', res.data.id);\r\n            localStorage.setItem(\"company_id\", res.data.company_id)\r\n            localStorage.setItem('Bolstart', encrypt);\r\n            this.router.navigate(['/home']);\r\n          } else {\r\n            this.toastr.error(\"Please Verify Account\")\r\n          }\r\n        } else {\r\n          this.toastr.error(res.message);\r\n        }\r\n      })\r\n    } else if (mobile_pattern.test(this.loginFrom.value.username)) {\r\n      formData.append(\"mobileNumber\", this.loginFrom.value.username);\r\n      this.isLoading = true;\r\n      this.apiService.authLoginUsingMobile(formData).subscribe(res => {\r\n        this.isLoading = false;\r\n        if (res.data != null) {\r\n          if (res.data.isEmailVerified == 'true') {\r\n\r\n            let encrypt = CryptoJS.AES.encrypt(JSON.stringify(res.data), \"Bollstart\").toString();\r\n            localStorage.setItem('member', res.data.id);\r\n            localStorage.setItem('Bolstart', encrypt);\r\n            this.router.navigate(['./home'])\r\n          } else {\r\n            this.toastr.error(\"Please Verify Account\")\r\n          }\r\n        } else {\r\n          this.toastr.error(res.message);\r\n\r\n        }\r\n      })\r\n    } else {\r\n\r\n      this.toastr.warning('Enter Valid Credentials')\r\n    }\r\n  }\r\n  /* ========================================================== */\r\n  /* ========================= Social login =================================== */\r\n\r\n  gmailSignUp() {\r\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(res => {\r\n      let obj = {\r\n        emailId: res.email,\r\n        firstName: res.firstName,\r\n        lastName: res.lastName,\r\n        isGoogleLogged: \"true\"\r\n      }\r\n      this.isLoading = true;\r\n      this.apiService.register(obj).subscribe(res => {\r\n        this.isLoading = false;\r\n        if (res.success) {\r\n          this.isLoading = false;\r\n          if (res.success) {\r\n            this.toggle = 2\r\n            this.sendEmail(res.data);\r\n          } else {\r\n            this.toastr.warning(res.message);\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  scrollTop() {\r\n    document.documentElement.scrollTop = 0;\r\n    this.toggle = 1;\r\n  }\r\n}\r\n","<section>\r\n    <div class=\"logo-header\">\r\n        <img src=\"assets/img/bslogo_1.png\" style=\"height: 55px;width:190px;\" />\r\n        <div class=\"sign-wrap\">\r\n            <label (click)=\"switch(1)\">Join Now</label> &nbsp;\r\n            <span> <button class=\"btn btn-primary outline\" (click)=\"switch(2)\">Sign in</button></span>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-12\">\r\n                <h3 style=\"color: #293266;\">Bolstering the Startup Community</h3>\r\n                <h5>A social network for founders, investors, students, freelancers and everyone else interested\r\n                    in joining the startup\r\n                    community.</h5>\r\n\r\n                <div class=\"inner-wrap\" *ngIf=\"toggle == 2\">\r\n                    <!-- <h2>Welcome to Our <br /> Community</h2> -->\r\n                    <div class=\"form-wrap\">\r\n\r\n                        <!-- <img src=\"assets/img/bslogo_1.png\" style=\"height: 50px;width:190px;\" alt=\"\"\r\n                                    class=\"img-fluid mb-4 d-block\"> -->\r\n                        <form [formGroup]=\"loginFrom\" >\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-12 p-2\">\r\n                                    <input type=\"text\" placeholder=\"Email / Phone Number\" formControlName=\"username\"\r\n                                        class=\"form-control\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"form-control \">\r\n                                    <input class=\"col col-11\" [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                                        placeholder=\"Password\" formControlName=\"password\">\r\n                                    <i class=\"col col-1\" class=\"fa\"\r\n                                        [ngClass]=\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\"\r\n                                        (click)=\"toggleFieldTextType()\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-left\">\r\n                                <a href=\"javascript:void(0)\" data-dismiss=\"modal\"\r\n                                    routerLink=\"/account/forget/password\">Forgot\r\n                                    Password ?</a>\r\n                            </div>\r\n                            <button *ngIf=\"!isLoading\" type=\"submit\" (click)=\"onLogin()\" class=\"btn btn-primary\">Sign in</button>\r\n                        </form>\r\n                        <button *ngIf=\"isLoading\" (click)=\"onLogin()\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                aria-hidden=\"true\"></i>\r\n                            &nbsp;&nbsp;Loading...</button>\r\n\r\n                        <!--  <h6 class=\"divider line razor\" contenteditable>Or</h6>\r\n                                    <button type=\"button\" class=\"btn btn-secondary google\" (click)=\"loginWithGoogle()\"> <img\r\n                                            style=\"width: 18px;\" src=\"assets/img/GoogleLogo.png\">&nbsp;Login with Google</button> -->\r\n                    </div>\r\n                    <!-- <div class=\"text-center\">\r\n                        <label>Want to Join? <a (click)=\"switch(1)\">Sign Up Now </a></label>\r\n                    </div> -->\r\n                </div>\r\n\r\n                <div class=\"inner-wrap\" *ngIf=\"toggle == 1\">\r\n                    <div>\r\n                        <form [formGroup]=\"newUserFrom\" (submit)=\"onRegister()\" class=\"form-wrap\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-12 p-2\">\r\n                                    <input type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('firstName').invalid && newUserFrom.get('firstName').touched\">Enter\r\n                                        First Name.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('lastName').invalid && newUserFrom.get('lastName').touched\">Enter\r\n                                        Last Name.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-2 p-2\">\r\n                                    <select class=\"form-control\" formControlName=\"countryCode\">\r\n                                        <option value=\"+91\" selected>+91</option>\r\n                                        <option value=\"+1\">+1</option>\r\n                                    </select>\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('countryCode').invalid && newUserFrom.get('countryCode').touched\">Code.</small>\r\n                                </div>\r\n                                <div class=\"col col-xl-10 p-2\">\r\n                                    <input type=\"number\" placeholder=\"Mobile Number\" formControlName=\"mobileNumber\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('mobileNumber').invalid && newUserFrom.get('mobileNumber').touched\">Enter\r\n                                        Valid Mobile Number.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input type=\"email\" placeholder=\"Email\" formControlName=\"emailId\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('emailId').invalid && newUserFrom.get('emailId').touched\">Enter\r\n                                        Valid Email Id.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input [type]=\"fieldTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                                        placeholder=\"Password\" class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('password').invalid && newUserFrom.get('password').touched\">Enter\r\n                                        Password.</small>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"text-align: right;\">\r\n                                <i class=\"fa\" [ngClass]=\"{'fa-eye-slash': !fieldTextType,'fa-eye': fieldTextType }\"\r\n                                    (click)=\"toggleFieldTextType()\"></i>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col col-xl-12 p-2\">\r\n                                    <input [type]=\"fieldTextType ? 'text' : 'password'\"\r\n                                        formControlName=\"confirmPassword\" placeholder=\"Confirm Password\"\r\n                                        class=\"form-control\">\r\n                                    <small class=\"text-danger\"\r\n                                        *ngIf=\"newUserFrom.get('confirmPassword').invalid && newUserFrom.get('confirmPassword').touched\">Enter\r\n                                        Confirm Password.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-center\">\r\n                                <label> <input type=\"checkbox\" name=\"policy\" formControlName=\"policy\">\r\n                                    By Clicking Agree & join, you agree to the <br />\r\n                                    <a [href]=\"termsLink\" target=\"_blank\">Bolstart User Agreement</a> and <a\r\n                                        [href]=\"termsLink\" target=\"_blank\">Privacy Policy.</a>\r\n                                </label>\r\n                            </div>\r\n                            <button *ngIf=\"!isLoading\" type=\"submit\" class=\"btn btn-primary\">Agree &\r\n                                Join</button>\r\n                            <button *ngIf=\"isLoading\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                &nbsp;&nbsp;Loading...</button>\r\n                        </form>\r\n\r\n                        <!--  <h6 class=\"divider line razor\" contenteditable>Or</h6>\r\n                                    <button type=\"button\" class=\"btn btn-secondary google\" (click)=\"gmailSignUp()\"> <img\r\n                                            style=\"width: 18px;\" src=\"assets/img/GoogleLogo.png\">&nbsp;Sign up with\r\n                                        Google</button> -->\r\n                    </div>\r\n                    <!-- <div class=\"text-center\">\r\n                        <label>Already on Bolstart? <a>Sign in</a></label>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-6 d-none d-lg-block\">\r\n                <img src=\"assets/img/login/img1.png\" class=\"first-img\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"second-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <img src=\"assets/img/login/img2.png\" class=\"signUp-img\" />\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <h3>Why Bolstart?</h3>\r\n                <h5>\r\n                    Conveniently targeted social network with multiple features that enables you to build strong\r\n                    relations and save time.\r\n                </h5>\r\n                <button class=\"btn btn-primary\" (click)=\"scrollTop()\">Sign Up</button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"third-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <div class=\"content\">\r\n                    <hr>\r\n                    <div>\r\n                        <h5>01 Build investor Relationship</h5>\r\n                        <label>Write structured updates that directly reach investor's email inbox.</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>02 Keep Everyone in loop</h5>\r\n                        <label>Share email updates with your team members, mentors, and stakeholders.</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>03 Keep track of your success</h5>\r\n                        <label>Find all your updates in your timeline and keep track of your success.</label>\r\n                    </div>\r\n                    <hr>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <h3>Build Strong Network</h3>\r\n                <img src=\"assets/img/login/img2.png\" class=\"img-second\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"fourth-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <h3>Investor Dashboard</h3>\r\n                <img src=\"assets/img/login/gipy_1.gif\" class=\"img-third\" />\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>01 One View Dashboard</h5>\r\n                        <label>Investors and Mentors can view all updates from startups they are interested in on one\r\n                            single\r\n                            screen.</label>\r\n                    </div>\r\n                    <hr>\r\n                    <div>\r\n                        <h5>02 Startup Traction Metrics</h5>\r\n                        <label>Analyze a startup's traction metrics and make an informed investment decision.</label>\r\n                    </div>\r\n                    <hr>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"third-wrap\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-7 d-none d-lg-block text-center\" style=\"padding: 13rem;\">\r\n                <!-- <button class=\"btn btn-primary\" (click)=\"scrollTop()\">Join Bolstart</button>\r\n                <h3 class=\"and-label\">AND</h3>\r\n                <button class=\"btn btn-primary outline\">Subscribe to Newsletter</button> -->\r\n\r\n            </div>\r\n            <div class=\"col-lg-5 col-md-12\">\r\n                <h3>And so many more features coming soon.</h3>\r\n                <img src=\"assets/img/activity1.gif\" class=\"signUp-img\" />\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"footer bg-footer\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6 col-md-6 text-center\">\r\n                <img src=\"assets/img/bslogo_1.png\" style=\"height: 55px;width:190px;\" />\r\n            </div>\r\n            <div class=\"col-2 col-md-2\">\r\n                <h6>General</h6>\r\n                <ul>\r\n                    <li (click)=\"scrollTop()\">Signup</li><br />\r\n                    <li>About</li><br />\r\n                    <li>Press</li><br />\r\n                    <li>Blogs</li><br />\r\n                    <li>Careers</li><br />\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-2 col-md-2\">\r\n                <h6>On Bolstart</h6>\r\n                <ul>\r\n                    <li>Q&A Forums </li><br />\r\n                    <li>Jobs</li><br />\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-2 col-md-2\">\r\n                <h6>Contact us</h6>\r\n                <ul>\r\n                    <li><a href=\"https://www.facebook.com/bolstart/\" target=\"_blank\">FaceBook</a></li><br />\r\n                    <li><a href=\"https://www.instagram.com/bolstart_/\" target=\"_blank\">Instagram</a></li><br />\r\n                    <li><a href=\"https://twitter.com/bolstart\" target=\"_blank\">Twitter</a></li><br />\r\n                    <li><a href=\"https://medium.com/bolstart\" target=\"_blank\">Medium</a></li><br />\r\n                    <li><a href='mailto:reachout@bolstart.com' target=\"_blank\">Email</a></li><br />\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"text-center\">\r\n        <label><span>Terms of Service</span> . <span>Privacy Policy</span></label>\r\n    </div>\r\n</section>","import * as $ from 'jquery';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountApiService } from '../account-api.service';\r\nimport { COMETCHAT_CONSTANTS } from 'src/CONSTS';\r\nimport { CometChat } from \"@cometchat-pro/chat\";\r\nimport Stepper from 'bs-stepper';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { common } from 'src/app/shared/common/validator';\r\n\r\n@Component({\r\n  selector: 'app-new-profile',\r\n  templateUrl: './new-profile.component.html',\r\n  styleUrls: ['./new-profile.component.scss']\r\n})\r\n\r\n\r\nexport class NewProfileComponent implements OnInit {\r\n  @ViewChild('model') model: ElementRef;\r\n  private stepper: Stepper;\r\n  public informationForm: FormGroup;\r\n  public educationForm: FormGroup;\r\n  public experianceForm: FormGroup;\r\n  userInfo\r\n  showList: number = 0\r\n  type: number = 2;\r\n  roleType: number;\r\n  selectedType: string;\r\n  currentindex: number;\r\n  monthList: any = common.month;\r\n  dayList: any = common.day;\r\n  stateList: any = [];\r\n  cityList: any = [];\r\n  industryList: any = common.industries;\r\n  countryList: any = common.country;\r\n  yeaList: any = common.years();\r\n  schooleList: any = [];\r\n  experianceList: any = [];\r\n  searchList: any = [];\r\n  isLoader: boolean = false;\r\n  dummyIcon = \"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/unversity.png\"\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private accountService: AccountApiService,\r\n    private toastr: ToastrService) { }\r\n\r\n\r\n  next() {\r\n    this.stepper.next();\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    return false;\r\n  }\r\n\r\n  selectType(value) {\r\n    /* Investors and StartUP   type = 1*/\r\n    /* Freelancer , Mentor And Start Up Enthusiast  type = 2*/\r\n    this.selectedType = value;\r\n    switch (this.selectedType) {\r\n      case 'Startups':\r\n        this.type = 1;\r\n        this.roleType = 1;\r\n        break;\r\n      case 'Investors':\r\n        this.type = 1;\r\n        this.roleType = 2;\r\n        break;\r\n      case 'Mentor':\r\n        this.type = 2;\r\n        this.roleType = 3;\r\n        break;\r\n      case 'Freelancer':\r\n        this.type = 2;\r\n        this.roleType = 4;\r\n        break;\r\n      case 'Startup Enthusiast':\r\n        this.type = 2;\r\n        this.roleType = 5;\r\n        break;\r\n    }\r\n    this.initializedInfoForm();\r\n    this.informationForm.patchValue({\r\n      id: this.userInfo.id,\r\n      firstName: this.userInfo.firstName,\r\n      lastName: this.userInfo.lastName,\r\n    })\r\n  }\r\n  ngOnInit() {\r\n    this.getParams();\r\n    this.initializeEduForm();\r\n    this.initializeExpForm();\r\n    this.initializedInfoForm();\r\n\r\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\r\n      linear: false,\r\n      animation: true\r\n    });\r\n\r\n  }\r\n\r\n  getParams() {\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.getUserInfo(params.userId);\r\n      }\r\n      );\r\n\r\n  }\r\n  /* ================ UserData ======================*/\r\n  getUserInfo(userId) {\r\n    this.accountService.getUserInfoByID(userId, userId).subscribe(res => {\r\n      if (res.success) {\r\n        this.userInfo = res.data;\r\n        if (this.userInfo.isEmailVerified == 'true') {\r\n          this.model.nativeElement.click();\r\n        }\r\n      } else {\r\n        this.toastr.error(res.message);\r\n        this.router.navigate(['./account/login'])\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /* ================ Information Form ======================*/\r\n  initializedInfoForm() {\r\n    this.informationForm = this.fb.group({\r\n      id: ['', [Validators.required]],\r\n      firstName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      middleNmae: ['', [Validators.pattern(common.onlyAlphabetRegex)]],\r\n      lastName: ['', [Validators.required, Validators.pattern(common.onlyAlphabetRegex)]],\r\n      headline: ['', [Validators.required]],\r\n      industry: ['', [Validators.required]],\r\n      state: [''],\r\n      location: [''],\r\n      country: [''],\r\n      month: [''],\r\n      day: [''],\r\n      aboutMe: [''],\r\n    })\r\n  }\r\n\r\n  infoSubmit() {\r\n    this.informationForm.markAllAsTouched();\r\n    if (this.informationForm.valid) {\r\n      if (this.type == 1) {\r\n        this.stepper.to(3);\r\n      } else {\r\n        this.stepper.to(4);\r\n      }\r\n    }\r\n  }\r\n  /* ================= Education Form =========================*/\r\n  initializeEduForm() {\r\n    this.educationForm = this.fb.group({\r\n      institutionId: ['', [Validators.required]],\r\n      institutionLogo: ['', [Validators.required]],\r\n      institutionName: ['', [Validators.required]],\r\n      activities: [''],\r\n      degree: [''],\r\n      endDate: [''],\r\n      grade: [''],\r\n      societies: [''],\r\n      startDate: [''],\r\n      stream: [''],\r\n      userId: [''],\r\n    })\r\n  }\r\n  eduSubmit() {\r\n    this.educationForm.markAllAsTouched();\r\n    if (this.educationForm.valid) {\r\n      this.schooleList.push(this.educationForm.value);\r\n      $('#eductionModel').hide();\r\n      $('.modal-backdrop').hide();\r\n    }\r\n  }\r\n  /* =============== Experiance Form ============================*/\r\n  initializeExpForm() {\r\n    this.experianceForm = this.fb.group({\r\n      companyId: [''],\r\n      companyName: ['', [Validators.required]],\r\n      companyLogo: ['', [Validators.required]],\r\n      title: ['', [Validators.required]],\r\n      userId: ['', [Validators.required]],\r\n      startYear: ['', [Validators.required]],\r\n      startMonth: ['', [Validators.required]],\r\n      jobLocation: ['', [Validators.required]],\r\n      isWorking: [false],\r\n      endMonth: [''],\r\n      endYear: [''],\r\n      description: [''],\r\n    })\r\n  }\r\n\r\n  onsetValue() {\r\n    this.experianceForm.patchValue({\r\n      companyLogo: this.dummyIcon,\r\n      userId: this.userInfo.id\r\n    })\r\n  }\r\n  expSubmit() {\r\n    this.onsetValue()\r\n    this.experianceForm.markAllAsTouched();\r\n    if (this.experianceForm.valid) {\r\n      let obj = {\r\n        companyId: this.experianceForm.value.companyId,\r\n        companyName: this.experianceForm.value.companyName,\r\n        companyLogo: this.experianceForm.value.companyLogo,\r\n        description: this.experianceForm.value.description,\r\n        jobLocation: this.experianceForm.value.jobLocation,\r\n        endMonth: this.experianceForm.value.endMonth,\r\n        endYear: this.experianceForm.value.endYear,\r\n        isWorking: this.experianceForm.value.isWorking,\r\n        startMonth: this.experianceForm.value.startMonth,\r\n        startYear: this.experianceForm.value.startYear,\r\n        title: this.experianceForm.value.title,\r\n        userId: this.experianceForm.value.userId,\r\n\r\n      }\r\n\r\n      this.experianceList.push(obj);\r\n      $('#experianceModel').hide();\r\n      $('.modal-backdrop').hide();\r\n\r\n    }\r\n  }\r\n  verifyAccount() {\r\n    let obj = {\r\n      adhaarCard: this.informationForm.value.adhar,\r\n      bio: this.informationForm.value.aboutMe,\r\n      day: this.informationForm.value.day,\r\n      education: this.schooleList,\r\n      experience: this.experianceList,\r\n      firstName: this.informationForm.value.firstName,\r\n      headline: this.informationForm.value.headline,\r\n      gst: this.informationForm.value.gst,\r\n      id: this.userInfo.id,\r\n      isEmailVerified: \"true\",\r\n      lastName: this.informationForm.value.lastName,\r\n      location: this.informationForm.value.location,\r\n      country: this.informationForm.value.country,\r\n      month: this.informationForm.value.month,\r\n      state: this.informationForm.value.state,\r\n      typeOfUser: this.roleType,\r\n      industryName: this.informationForm.value.industry,\r\n      uid: this.userInfo.isPriority == 'true' ? this.userInfo.firstName.toLowerCase() + this.userInfo.id : \"\"\r\n    }\r\n    this.accountService.verifyAccount(obj).subscribe(res => {\r\n      this.isLoader = false;\r\n      if (res.success) {\r\n        this.toastr.success(\"User Verified Successfully\");\r\n        this.router.navigate(['/account/login']);\r\n        setTimeout(() => {\r\n          location.reload();\r\n        }, 0.100)\r\n      }\r\n    })\r\n  }\r\n\r\n  addUserToCometChat() {\r\n    this.isLoader = true;\r\n    if (this.userInfo.isPriority == 'true') {\r\n      var user = new CometChat.User(this.userInfo.firstName.toLowerCase() + this.userInfo.id);\r\n      user.setName(this.userInfo.firstName + \" \" + this.userInfo.lastName);\r\n      user.setAvatar(\"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/profile_avater.png\")\r\n      CometChat.createUser(user, COMETCHAT_CONSTANTS.AUTH_KEY).then(\r\n        user => {\r\n          this.verifyAccount();\r\n        }, error => {\r\n          this.isLoader = false;\r\n        }\r\n      )\r\n    } else {\r\n      this.verifyAccount()\r\n    }\r\n\r\n  }\r\n\r\n  /* =============== Inpuut Focus ============================ */\r\n  onFocus(value) {\r\n    switch (value) {\r\n      case 1:\r\n        this.showList = 1\r\n        break;\r\n      case 2:\r\n        this.showList = 2\r\n        break;\r\n      case 3:\r\n        this.showList = 3\r\n        break;\r\n      case 4:\r\n        this.showList = 4\r\n        break;\r\n    }\r\n  }\r\n  onBlur() {\r\n    setTimeout(() => {\r\n      this.showList = 0\r\n      this.searchList = [];\r\n    }, 500)\r\n  }\r\n  search(event) {\r\n    switch (this.showList) {\r\n      case 1:\r\n        this.getUniversityList();\r\n        break;\r\n      case 2:\r\n        this.searchList = common.degree;\r\n        break;\r\n      case 3:\r\n        this.searchList = common.field;\r\n        break;\r\n      case 4:\r\n        this.getAllCompanyList(event.target.value)\r\n        break;\r\n    }\r\n  }\r\n\r\n  selectItem(event, item) {\r\n    switch (event) {\r\n      case 1:\r\n        this.educationForm.patchValue({\r\n          institutionId: item.id,\r\n          institutionLogo: this.dummyIcon,\r\n          institutionName: item.name,\r\n          userId: this.userInfo.id\r\n        })\r\n        this.searchList = []\r\n        break;\r\n      case 2:\r\n        this.educationForm.patchValue({\r\n          degree: item\r\n        })\r\n        this.searchList = []\r\n        break;\r\n      case 3:\r\n        this.educationForm.patchValue({\r\n          stream: item\r\n        })\r\n        this.searchList = []\r\n        break;\r\n      case 4:\r\n        this.experianceForm.patchValue({\r\n          companyId: item.id,\r\n          companyName: item.name,\r\n          companyLogo: item.logo,\r\n          userId: this.userInfo.id,\r\n        })\r\n        break;\r\n    }\r\n    this.showList = 0;\r\n  }\r\n\r\n  deleteSchool(index) {\r\n    this.schooleList.splice(index, 1)\r\n  }\r\n  deleteExp(index) {\r\n    this.experianceList.splice(index, 1)\r\n  }\r\n\r\n  /* ===================== country select  =========================== */\r\n  selectCountry() {\r\n    let country = this.informationForm.value.country;\r\n    this.countryList.map(res => {\r\n      if (res.name == country) {\r\n        this.getStateList(res.id)\r\n      }\r\n    })\r\n  }\r\n\r\n  getStateList(countryID) {\r\n    this.accountService.getStateListBasedOnCountry(countryID).subscribe(res => {\r\n      if (res.success) {\r\n        this.stateList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  selectState() {\r\n    let state = this.informationForm.value.state;\r\n    this.stateList.map(res => {\r\n      if (res.name == state) {\r\n        this.getCityList(res.id);\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityList(stateID) {\r\n    this.accountService.getCityListBasedOnState(stateID).subscribe(res => {\r\n      if (res.success) {\r\n        this.cityList = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  /* ==================== University ====================== */\r\n\r\n  getUniversityList() {\r\n    this.accountService.getUniversityList().subscribe(res => {\r\n      if (res.success) {\r\n        this.searchList = res.data\r\n      }\r\n    })\r\n  }\r\n  /* =============== Company List =============== */\r\n  getAllCompanyList(keyWord) {\r\n    this.accountService.getAllCompanyList(keyWord).subscribe(res => {\r\n      if (res.success) {\r\n        this.searchList = res.data\r\n      }\r\n    })\r\n  }\r\n\r\n  /* ========================= */\r\n  goToLogin() {\r\n    this.router.navigate(['/account/login']);\r\n    setTimeout(() => {\r\n      location.reload();\r\n    }, 100)\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <img src=\"assets/img/bslogo_1.png\" style=\"height: 50px;width:190px;\" alt=\"\" class=\"img-fluid mb-4 d-block m-3\">\r\n    <div id=\"stepper1\" class=\"bs-stepper\">\r\n        <div class=\"bs-stepper-header m-4\">\r\n            <div class=\"step\" data-target=\"#test-l-1\">\r\n                <button class=\"step-trigger\">\r\n                    <span class=\"bs-stepper-circle\">1</span>\r\n                    <span class=\"bs-stepper-label\">Profile</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"step\" data-target=\"#test-l-2\">\r\n                <button class=\"step-trigger\" [disabled]=\"selectedType == undefined\">\r\n                    <span class=\"bs-stepper-circle\">2</span>\r\n                    <span class=\"bs-stepper-label\">Information</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"line\" [hidden]=\"type != 1\"></div>\r\n            <div [hidden]=\"type != 1\">\r\n                <div class=\"step\" data-target=\"#test-l-4\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">3</span>\r\n                        <span class=\"bs-stepper-label\">Experiance</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"line\" [hidden]=\"type != 2\"></div>\r\n            <div [hidden]=\"type != 2\">\r\n                <div class=\"step\" data-target=\"#test-l-3\">\r\n                    <button class=\"step-trigger\" [disabled]=\"!informationForm.valid\">\r\n                        <span class=\"bs-stepper-circle\">3</span>\r\n                        <span class=\"bs-stepper-label\">Education</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"line\" [hidden]=\"type != 2\"></div>\r\n            <div [hidden]=\"type != 2\">\r\n                <div class=\"step\" data-target=\"#test-l-4\">\r\n                    <button class=\"step-trigger\">\r\n                        <span class=\"bs-stepper-circle\">4</span>\r\n                        <span class=\"bs-stepper-label\">Experiance</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"bs-stepper-content\">\r\n            <div class=\"text-center mb-5\">\r\n                <h6>Your Profile helps you discover new people and opportunities</h6>\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-2\"></div>\r\n                <div class=\"col-md-8\">\r\n                    <div class=\"card content\" id=\"test-l-1\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Select Profile Type</h6>\r\n                        </div>\r\n                        <div class=\"card-body text-center\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Startups'}\"\r\n                                        (click)=\"selectType('Startups')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6><i class=\"fa fa-building\"></i> &nbsp; Startup Founder</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Investors'}\"\r\n                                        (click)=\"selectType('Investors')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6> <i class=\"fa fa-sitemap\"></i>&nbsp;Investor</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Mentor'}\"\r\n                                        (click)=\"selectType('Mentor')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6> <i class=\"fa fa-binoculars\"></i>&nbsp; Mentor</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-2\"></div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\" [ngClass]=\"{'selected': selectedType == 'Freelancer'}\"\r\n                                        (click)=\"selectType('Freelancer')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6><i class=\"fa fa-briefcase\"></i> &nbsp; Freelancer</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"card type\"\r\n                                        [ngClass]=\"{'selected': selectedType == 'Startup Enthusiast'}\"\r\n                                        (click)=\"selectType('Startup Enthusiast')\">\r\n                                        <div class=\"card-body\">\r\n                                            <h6><i class=\"fa fa-black-tie\"></i> &nbsp; Startup Enthusiast-Student</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-2\"></div>\r\n                            </div>\r\n                            <div class=\"text-right\">\r\n                                <button class=\"btn btn-outline-primary\" [disabled]=\"selectedType == undefined\"\r\n                                    (click)=\"next()\">Continue</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card content\" id=\"test-l-2\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Information</h6>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <form [formGroup]=\"informationForm\" (submit)=\"infoSubmit()\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>First Name <span class=\"mandatory\">*</span></label>\r\n                                        <input type=\"text\" placeholder=\"eg. First Name\" formControlName=\"firstName\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('firstName').invalid && informationForm.get('firstName').touched\">Enter\r\n                                            First Name.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>Middle Name</label>\r\n                                        <input type=\"text\" placeholder=\"eg. Middle Name\" formControlName=\"middleNmae\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('middleNmae').invalid && informationForm.get('middleNmae').touched\">Enter\r\n                                            Middle Name.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>Last Name <span class=\"mandatory\">*</span></label>\r\n                                        <input type=\"text\" placeholder=\"eg. Last Name\" formControlName=\"lastName\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('lastName').invalid && informationForm.get('lastName').touched\">Enter\r\n                                            Last Name.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <!-- <div class=\"col col-md-4 p-2\">\r\n                                        <label>Company Name</label>\r\n                                        <input type=\"text\" placeholder=\"eg. company Name\" formControlName=\"companyName\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\" *ngIf=\"informationForm.get('companyName').invalid && informationForm.get('companyName').touched\">Enter\r\n                                            company Name.</small>\r\n                                    </div> -->\r\n                                    <!-- <div class=\"col col-md-4 p-2\" *ngIf=\"type == 1\">\r\n                                        <label>GST</label>\r\n                                        <input type=\"text\" placeholder=\"eg. 22AAAAA0000A1Z5\" formControlName=\"gst\"\r\n                                            class=\"form-control\">\r\n                                        <small class=\"text-danger\" *ngIf=\"informationForm.get('gst').invalid && informationForm.get('gst').touched\">Enter\r\n                                            GST Number.</small>\r\n                                    </div> -->\r\n                                    <div class=\"col col-md-4 p-2\" *ngIf=\"type == 2\">\r\n                                        <label>Birthday</label>\r\n                                        <select class=\"form-control\" formControlName=\"month\">\r\n                                            <option value=\"\" selected hidden disabled>select Month</option>\r\n                                            <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('month').invalid && informationForm.get('month').touched\">Select\r\n                                            Month.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\" *ngIf=\"type == 2\">\r\n                                        <label></label>\r\n                                        <select class=\"form-control\" formControlName=\"day\">\r\n                                            <option value='' selected hidden disabled>select Day</option>\r\n                                            <option [value]='item' *ngFor=\"let item of dayList\">{{item}}</option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('day').invalid && informationForm.get('day').touched\">Select\r\n                                            Day.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 p-2\">\r\n                                        <label>Headline <span class=\"mandatory\">*</span></label>\r\n                                        <input type=\"text\" placeholder=\"eg. Assistant manager\"\r\n                                            formControlName=\"headline\" class=\"form-control\">\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('headline').invalid && informationForm.get('headline').touched\">Add\r\n                                            Short\r\n                                            Headline.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 p-2\">\r\n                                        <label>Industry <span class=\"mandatory\">*</span></label>\r\n                                        <select class=\"form-control\" formControlName=\"industry\">\r\n                                            <option value='' selected hidden disabled>select industry</option>\r\n                                            <option [value]='item' *ngFor=\"let item of industryList\">{{item}}</option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('industry').invalid && informationForm.get('industry').touched\">Select\r\n                                            Industry.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>Country</label>\r\n                                        <select class=\"form-control\" formControlName=\"country\"\r\n                                            (change)=\"selectCountry()\">\r\n                                            <option value='' selected hidden disabled>select country\r\n                                            </option>\r\n                                            <option [value]='item.name' *ngFor=\"let item of countryList\">{{item.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('country').invalid && informationForm.get('country').touched\">Select\r\n                                            Country.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>States/Union territories</label>\r\n                                        <select class=\"form-control\" formControlName=\"state\" (change)=\"selectState()\">\r\n                                            <option value='' selected hidden disabled>select States/Union territory\r\n                                            </option>\r\n                                            <option [value]='item.name' *ngFor=\"let item of stateList\">{{item.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('state').invalid && informationForm.get('state').touched\">Select\r\n                                            States/Union territories.</small>\r\n                                    </div>\r\n                                    <div class=\"col col-md-4 p-2\">\r\n                                        <label>City/Location/Landmark</label>\r\n                                        <!-- <input class=\"form-control\" formArrayName=\"location\" type=\"text\"\r\n                                            placeholder=\"eg. Mumbai\" /> -->\r\n                                        <select class=\"form-control\" formControlName=\"location\">\r\n                                            <option value='' selected hidden disabled>select States/Union territory\r\n                                            </option>\r\n                                            <option [value]='item.name' *ngFor=\"let item of cityList\">{{item.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('location').invalid && informationForm.get('location').touched\">Select\r\n                                            Location.</small>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col col-md-12 p-2\">\r\n                                        <label>About</label>\r\n                                        <textarea rows=\"4\" type=\"text\" placeholder=\"eg. About Me\"\r\n                                            formControlName=\"aboutMe\" class=\"form-control\"></textarea>\r\n                                        <small class=\"text-danger\"\r\n                                            *ngIf=\"informationForm.get('aboutMe').invalid && informationForm.get('aboutMe').touched\">Add\r\n                                            About Information..</small>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" class=\"btn btn-outline-primary\">Next</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card content\" id=\"test-l-3\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Education Detail <span class=\"add-icon\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"\r\n                                        data-target=\"#eductionModel\" data-toggle=\"modal\"></i></span> </h6>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"list-group\">\r\n                                <div class=\"row\" *ngFor=\"let item of schooleList;let i = index\">\r\n                                    <div class=\"col-xl-1 pt-1\">\r\n                                        <img style=\"width: 40px;\" [src]=\"item.institutionLogo\">\r\n                                    </div>\r\n                                    <div class=\"col-xl-10\">\r\n                                        <h6>{{item.institutionName}}<br />\r\n                                            <label>{{item.stream}} {{item.startDate}}-{{item.endDate}}</label>\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div class=\"col-xl-1\">\r\n                                        <span class=\"add-icon\"><i class=\"fa fa-trash\"\r\n                                                (click)=\"deleteSchool(i)\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                                <div class=\"text-right\">\r\n                                    <a href=\"javascript:void(0)\" (click)=\"next()\">Skip</a> &nbsp; <button\r\n                                        class=\"btn btn-outline-primary\" (click)=\"next()\">Next</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card content\" id=\"test-l-4\">\r\n                        <div class=\"card-header\">\r\n                            <h6>Experience Detail <span class=\"add-icon\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"\r\n                                        data-target=\"#experianceModel\" data-toggle=\"modal\"></i></span> </h6>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"list-group\">\r\n                                <div class=\"row\" *ngFor=\"let item of experianceList;let i = index\">\r\n                                    <div class=\"col-xl-1 pt-1\">\r\n                                        <img style=\"width: 40px;\" [src]=\"item.companyLogo\">\r\n                                    </div>\r\n                                    <div class=\"col-xl-10\">\r\n                                        <h6>{{item.companyName}}<br />\r\n                                            <label>{{item.title}} {{item.startYear}}-{{item.endYear}}</label>\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div class=\"col-xl-1\">\r\n                                        <span class=\"add-icon\"><i class=\"fa fa-trash\" (click)=\"deleteExp(i)\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                            </div>\r\n                            <div class=\"text-right\" style=\"position: absolute; bottom: -70%; right: 0px;\">\r\n                                <button *ngIf=\"!isLoader\" class=\"btn btn-outline-primary\"\r\n                                    (click)=\"addUserToCometChat()\">Verify\r\n                                    Account</button>\r\n                                <button *ngIf=\"isLoader\" class=\"btn btn-primary\"><i class=\"fa fa-spinner fa-spin\"\r\n                                        aria-hidden=\"true\"></i>\r\n                                    &nbsp;&nbsp;Loading...</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-2\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- -------------------------------------------------------- -->\r\n    <div class=\"modal fade\" id=\"eductionModel\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-Custheader p-2\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h6 class=\"modal-title\">Add Education</h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form class=\"p-2\" [formGroup]=\"educationForm\" (submit)=\"eduSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>School Name / college <span class=\"mandatory\">*</span></label>\r\n                                <div class=\"form-control\">\r\n                                    <img [src]=\"educationForm.value.institutionLogo\" style=\"width: 20px;\">\r\n                                    <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus(1)\" (keyup)=\"search($event)\"\r\n                                        class=\"school\" placeholder=\"eg. shivaji university\"\r\n                                        formControlName=\"institutionName\">\r\n                                </div>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"educationForm.get('institutionName').invalid && educationForm.get('institutionName').touched\">Select\r\n                                    School\r\n                                    Name / college.</small>\r\n                                <div class=\"card list\" *ngIf=\"showList == 1 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(1,item)\"><img\r\n                                            src=\"https://bolstartimages.s3.ap-south-1.amazonaws.com/profile/default/unversity.png\"\r\n                                            style=\"width: 25px;\">&nbsp;{{item.name}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Degree</label>\r\n                                <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus(2)\" (keyup)=\"search($event)\"\r\n                                    placeholder=\"eg. Bachelor\" class=\"form-control\" formControlName=\"degree\">\r\n                                <div class=\"card\" *ngIf=\"showList == 2 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(2,item)\">{{item}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Field</label>\r\n                                <input type=\"text\" (blur)=\"onBlur()\" (focus)=\"onFocus(3)\" (keyup)=\"search($event)\"\r\n                                    placeholder=\"eg. Business\" class=\"form-control\" formControlName=\"stream\">\r\n                                <div class=\"card\" *ngIf=\"showList == 3 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(3,item)\">{{item}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-xl-6 p-2\">\r\n                                <label>Start Year</label>\r\n                                <select class=\"form-control\" formControlName=\"startDate\">\r\n                                    <option value='' selected disabled hidden>Select Start year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-6 p-2\">\r\n                                <label>End Year</label>\r\n                                <select class=\"form-control\" formControlName=\"endDate\">\r\n                                    <option value='' selected disabled hidden>Select End year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Grade</label>\r\n                                <input type=\"text\" formControlName=\"grade\" placeholder=\"Grade\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Activities and societies</label>\r\n                                <textarea type=\"text\" formControlName=\"activities\"\r\n                                    placeholder=\"Activities and societies\" class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Description</label>\r\n                                <textarea formControlName=\"activities\" type=\"text\" placeholder=\"Description\"\r\n                                    class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary\">Save</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- -------------------------------------- -->\r\n    <div class=\"modal fade\" id=\"experianceModel\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-Custheader p-2\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h6 class=\"modal-title\">Add Experience</h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form class=\"p-2\" [formGroup]=\"experianceForm\" (submit)=\"expSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Title<span class=\"mandatory\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"eg. Sales Manager\"\r\n                                    formControlName=\"title\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"experianceForm.get('title').invalid && experianceForm.get('title').touched\">Enter\r\n                                    Tittle.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\" *ngIf=\"type == 2\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Employment Role</label>\r\n                                <select class=\"form-control\">\r\n                                    <option selected disabled hidden>Select Employment Role</option>\r\n                                    <option value=\"Full-time\">Full-time</option>\r\n                                    <option value=\"Part-Time\">Part-Time</option>\r\n                                    <option value=\"Self-Employed\">Self-Employed</option>\r\n                                    <option value=\"Freelance\">Freelance</option>\r\n                                    <option value=\"Trainee\">Trainee</option>\r\n                                    <option value=\"Internship\">Internship</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Company Name <span class=\"mandatory\">*</span></label>\r\n                                <div class=\"form-control\">\r\n                                    <img [src]=\"experianceForm.value.companyLogo\" style=\"width: 20px;\">\r\n                                    <input type=\"text\" class=\"school\" (blur)=\"onBlur()\" (focus)=\"onFocus(4)\"\r\n                                        (keyup)=\"search($event)\" placeholder=\"eg. Tablabs Technology\"\r\n                                        formControlName=\"companyName\">\r\n                                </div>\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"experianceForm.get('companyName').invalid && experianceForm.get('companyName').touched\">Select\r\n                                    Company.</small>\r\n                                <div class=\"card\" *ngIf=\"showList == 4 && searchList.length > 0\">\r\n                                    <li *ngFor=\"let item of searchList\" (click)=\"selectItem(4,item)\"><img\r\n                                            [src]=\"item.logo\" style=\"width: 25px;\">&nbsp;{{item.name}}</li>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <label>Location<span class=\"mandatory\">*</span></label>\r\n                                <input type=\"text\" placeholder=\"Location\" formControlName=\"jobLocation\"\r\n                                    class=\"form-control\">\r\n                                <small class=\"text-danger\"\r\n                                    *ngIf=\"experianceForm.get('jobLocation').invalid && experianceForm.get('jobLocation').touched\">Enter\r\n                                    Location.</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <input style=\"width: 30px;\" type=\"checkbox\" formControlName=\"isWorking\"><span>I am\r\n                                    currently\r\n                                    Working</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-xl-3 p-2\">\r\n                                <label>Start Date <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"startYear\">\r\n                                    <option value='' selected disabled hidden>Select Start year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-3 p-3\">\r\n                                <label></label>\r\n                                <select class=\"form-control\" formControlName=\"startMonth\">\r\n                                    <option value=\"\" selected hidden disabled>Start Month</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-3 p-2\" *ngIf=\"!this.experianceForm.value.isWorking\">\r\n                                <label>End Date <span class=\"mandatory\">*</span></label>\r\n                                <select class=\"form-control\" formControlName=\"endYear\">\r\n                                    <option value='' selected disabled hidden>Select End year</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of yeaList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col col-xl-3 p-3\" *ngIf=\"!this.experianceForm.value.isWorking\">\r\n                                <label></label>\r\n                                <select class=\"form-control\" formControlName=\"endMonth\">\r\n                                    <option value=\"\" selected hidden disabled>End Month</option>\r\n                                    <option [value]=\"item\" *ngFor=\"let item of monthList\">{{item}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col col-md-12 p-2\">\r\n                                <textarea formControlName=\"description\" type=\"text\" placeholder=\"Description\"\r\n                                    class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary\">Save</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal fade\" id=\"verifyModel\" data-backdrop=\"static\" data-keyboard=\"false\" #content role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body text-center\">\r\n                    <img src=\"assets/img/tenor.gif\" />\r\n                    <h4>Hello <b> {{userInfo?.firstName}} {{userInfo?.lastName}}</b>,</h4>\r\n                    <h4> <i> You already verified your account.</i></h4>\r\n                    <div>\r\n                        <button class=\"btn btn-primary\" (click)=\"goToLogin()\">Back to login</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button hidden #model type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#verifyModel\"></button>","import { Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ReplaySubject, AsyncSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\n\nimport * as ɵngcc0 from '@angular/core';\nclass BaseLoginProvider {\n    constructor() { }\n    loadScript(id, src, onload, parentElement = null) {\n        // get document if platform is only browser\n        if (typeof document !== 'undefined' && !document.getElementById(id)) {\n            let signInJS = document.createElement('script');\n            signInJS.async = true;\n            signInJS.src = src;\n            signInJS.onload = onload;\n            if (!parentElement) {\n                parentElement = document.head;\n            }\n            parentElement.appendChild(signInJS);\n        }\n    }\n}\n\nclass SocialUser {\n}\n\nclass GoogleLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = { scope: 'email' }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript(GoogleLoginProvider.PROVIDER_ID, 'https://apis.google.com/js/platform.js', () => {\n                    gapi.load('auth2', () => {\n                        this.auth2 = gapi.auth2.init(Object.assign(Object.assign({}, this.initOptions), { client_id: this.clientId }));\n                        this.auth2\n                            .then(() => {\n                            resolve();\n                        })\n                            .catch((err) => {\n                            reject(err);\n                        });\n                    });\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus(loginStatusOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), loginStatusOptions);\n        return new Promise((resolve, reject) => {\n            if (this.auth2.isSignedIn.get()) {\n                let user = new SocialUser();\n                const profile = this.auth2.currentUser.get().getBasicProfile();\n                const authResponse = this.auth2.currentUser.get().getAuthResponse(true); // get complete authResponse object\n                user.id = profile.getId();\n                user.name = profile.getName();\n                user.email = profile.getEmail();\n                user.photoUrl = profile.getImageUrl();\n                user.firstName = profile.getGivenName();\n                user.lastName = profile.getFamilyName();\n                user.response = authResponse;\n                const resolveUser = authResponse => {\n                    user.authToken = authResponse.access_token;\n                    user.idToken = authResponse.id_token;\n                    resolve(user);\n                };\n                if (options.refreshToken) {\n                    this.auth2.currentUser.get().reloadAuthResponse().then(resolveUser);\n                }\n                else {\n                    const authResponse = this.auth2.currentUser.get().getAuthResponse(true);\n                    resolveUser(authResponse);\n                }\n            }\n            else {\n                reject(`No user is currently logged in with ${GoogleLoginProvider.PROVIDER_ID}`);\n            }\n        });\n    }\n    signIn(signInOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\n        return new Promise((resolve, reject) => {\n            const offlineAccess = options && options.offline_access;\n            let promise = !offlineAccess\n                ? this.auth2.signIn(signInOptions)\n                : this.auth2.grantOfflineAccess(signInOptions);\n            promise\n                .then((response) => {\n                let user = new SocialUser();\n                if (response && response.code) {\n                    user.authorizationCode = response.code;\n                }\n                else {\n                    let profile = this.auth2.currentUser.get().getBasicProfile();\n                    let authResponse = this.auth2.currentUser.get().getAuthResponse(true);\n                    let token = authResponse.access_token;\n                    let backendToken = authResponse.id_token;\n                    user.id = profile.getId();\n                    user.name = profile.getName();\n                    user.email = profile.getEmail();\n                    user.photoUrl = profile.getImageUrl();\n                    user.firstName = profile.getGivenName();\n                    user.lastName = profile.getFamilyName();\n                    user.authToken = token;\n                    user.idToken = backendToken;\n                    user.response = authResponse;\n                }\n                resolve(user);\n            }, (closed) => {\n                reject(closed);\n            })\n                .catch((err) => {\n                reject(err);\n            });\n        });\n    }\n    signOut(revoke) {\n        return new Promise((resolve, reject) => {\n            let signOutPromise;\n            if (revoke) {\n                signOutPromise = this.auth2.disconnect();\n            }\n            else {\n                signOutPromise = this.auth2.signOut();\n            }\n            signOutPromise\n                .then((err) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch((err) => {\n                reject(err);\n            });\n        });\n    }\n}\nGoogleLoginProvider.PROVIDER_ID = 'GOOGLE';\n\n/**\n * The service encapsulating the social login functionality. Exposes methods like\n * `signIn`, `signOut`. Also, exposes an `authState` `Observable` that one can\n * subscribe to get the current logged in user information.\n *\n * @dynamic\n */\nclass SocialAuthService {\n    /**\n     * @param config A `SocialAuthServiceConfig` object or a `Promise` that resolves to a `SocialAuthServiceConfig` object\n     */\n    constructor(config) {\n        this.providers = new Map();\n        this.autoLogin = false;\n        this._user = null;\n        this._authState = new ReplaySubject(1);\n        /* Consider making this an enum comprising LOADING, LOADED, FAILED etc. */\n        this.initialized = false;\n        this._initState = new AsyncSubject();\n        if (config instanceof Promise) {\n            config.then((config) => {\n                this.initialize(config);\n            });\n        }\n        else {\n            this.initialize(config);\n        }\n    }\n    /** An `Observable` that one can subscribe to get the current logged in user information */\n    get authState() {\n        return this._authState.asObservable();\n    }\n    /** An `Observable` to communicate the readiness of the service and associated login providers */\n    get initState() {\n        return this._initState.asObservable();\n    }\n    initialize(config) {\n        this.autoLogin = config.autoLogin !== undefined ? config.autoLogin : false;\n        const { onError = console.error } = config;\n        config.providers.forEach((item) => {\n            this.providers.set(item.id, item.provider);\n        });\n        Promise.all(Array.from(this.providers.values()).map((provider) => provider.initialize()))\n            .then(() => {\n            if (this.autoLogin) {\n                const loginStatusPromises = [];\n                let loggedIn = false;\n                this.providers.forEach((provider, key) => {\n                    let promise = provider.getLoginStatus();\n                    loginStatusPromises.push(promise);\n                    promise\n                        .then((user) => {\n                        user.provider = key;\n                        this._user = user;\n                        this._authState.next(user);\n                        loggedIn = true;\n                    })\n                        .catch(console.debug);\n                });\n                Promise.all(loginStatusPromises).catch(() => {\n                    if (!loggedIn) {\n                        this._user = null;\n                        this._authState.next(null);\n                    }\n                });\n            }\n        })\n            .catch((error) => {\n            onError(error);\n        })\n            .finally(() => {\n            this.initialized = true;\n            this._initState.next(this.initialized);\n            this._initState.complete();\n        });\n    }\n    refreshAuthToken(providerId) {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\n            }\n            else if (providerId !== GoogleLoginProvider.PROVIDER_ID) {\n                reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\n            }\n            else {\n                const providerObject = this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject\n                        .getLoginStatus({ refreshToken: true })\n                        .then((user) => {\n                        user.provider = providerId;\n                        this._user = user;\n                        this._authState.next(user);\n                        resolve();\n                    })\n                        .catch((err) => {\n                        reject(err);\n                    });\n                }\n                else {\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n                }\n            }\n        });\n    }\n    /**\n     * A method used to sign in a user with a specific `LoginProvider`.\n     *\n     * @param providerId Id with which the `LoginProvider` has been registered with the service\n     * @param signInOptions Optional `LoginProvider` specific arguments\n     * @returns A `Promise` that resolves to the authenticated user information\n     */\n    signIn(providerId, signInOptions) {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\n            }\n            else {\n                let providerObject = this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject\n                        .signIn(signInOptions)\n                        .then((user) => {\n                        user.provider = providerId;\n                        resolve(user);\n                        this._user = user;\n                        this._authState.next(user);\n                    })\n                        .catch((err) => {\n                        reject(err);\n                    });\n                }\n                else {\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n                }\n            }\n        });\n    }\n    /**\n     * A method used to sign out the currently loggen in user.\n     *\n     * @param revoke Optional parameter to specify whether a hard sign out is to be performed\n     * @returns A `Promise` that resolves if the operation is successful, rejects otherwise\n     */\n    signOut(revoke = false) {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\n            }\n            else if (!this._user) {\n                reject(SocialAuthService.ERR_NOT_LOGGED_IN);\n            }\n            else {\n                let providerId = this._user.provider;\n                let providerObject = this.providers.get(providerId);\n                if (providerObject) {\n                    providerObject\n                        .signOut(revoke)\n                        .then(() => {\n                        resolve();\n                        this._user = null;\n                        this._authState.next(null);\n                    })\n                        .catch((err) => {\n                        reject(err);\n                    });\n                }\n                else {\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\n                }\n            }\n        });\n    }\n}\nSocialAuthService.ɵfac = function SocialAuthService_Factory(t) { return new (t || SocialAuthService)(ɵngcc0.ɵɵinject('SocialAuthServiceConfig')); };\nSocialAuthService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SocialAuthService, factory: SocialAuthService.ɵfac });\nSocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\nSocialAuthService.ERR_NOT_LOGGED_IN = 'Not logged in';\nSocialAuthService.ERR_NOT_INITIALIZED = 'Login providers not ready yet. Are there errors on your console?';\nSocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN = 'Chosen login provider is not supported for refreshing a token';\nSocialAuthService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: ['SocialAuthServiceConfig',] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialAuthService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: ['SocialAuthServiceConfig']\n            }] }]; }, null); })();\n\n/**\n * The main module of angularx-social-login library.\n */\nclass SocialLoginModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error('SocialLoginModule is already loaded. Import it in the AppModule only');\n        }\n    }\n    static initialize(config) {\n        return {\n            ngModule: SocialLoginModule,\n            providers: [\n                SocialAuthService,\n                {\n                    provide: 'SocialAuthServiceConfig',\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nSocialLoginModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SocialLoginModule });\nSocialLoginModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SocialLoginModule_Factory(t) { return new (t || SocialLoginModule)(ɵngcc0.ɵɵinject(SocialLoginModule, 12)); }, providers: [\n        SocialAuthService\n    ], imports: [[\n            CommonModule\n        ]] });\nSocialLoginModule.ctorParameters = () => [\n    { type: SocialLoginModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SocialLoginModule, { imports: function () { return [CommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialLoginModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                providers: [\n                    SocialAuthService\n                ]\n            }]\n    }], function () { return [{ type: SocialLoginModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n\n// Simulates login / logout without actually requiring an Internet connection.\n//\n// Useful for certain development situations.\n//\n// For example, if you want to simulate the greatest football referee England has ever produced:\n//\n//  const dummyUser: SocialUser = {\n//     id: '0123456789',\n//     name: 'Howard Webb',\n//     email: 'howard@webb.com',\n//     firstName: 'Howard',\n//     lastName: 'Webb',\n//     authToken: 'dummyAuthToken',\n//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',\n//     provider: 'DUMMY',\n//     idToken: 'dummyIdToken',\n//     authorizationCode: 'dummyAuthCode'\n// };\n//\n//  let config = new AuthServiceConfig([\n//  { ... },\n//  {\n//       id: DummyLoginProvider.PROVIDER_ID,\n//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor\n//   },\n//  { ... }\n//  ]);\nclass DummyLoginProvider extends BaseLoginProvider {\n    constructor(dummy) {\n        super();\n        if (dummy) {\n            this.dummy = dummy;\n        }\n        else {\n            this.dummy = DummyLoginProvider.DEFAULT_USER;\n        }\n        // Start not logged in\n        this.loggedIn = false;\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => {\n            if (this.loggedIn) {\n                resolve(this.dummy);\n            }\n            else {\n                reject('No user is currently logged in.');\n            }\n        });\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    }\n    signIn() {\n        return new Promise((resolve, reject) => {\n            this.loggedIn = true;\n            resolve(this.dummy);\n        });\n    }\n    signOut(revoke) {\n        return new Promise((resolve, reject) => {\n            this.loggedIn = false;\n            resolve();\n        });\n    }\n}\nDummyLoginProvider.PROVIDER_ID = 'DUMMY';\nDummyLoginProvider.DEFAULT_USER = {\n    id: '1234567890',\n    name: 'Mickey Mouse',\n    email: 'mickey@mouse.com',\n    firstName: 'Mickey',\n    lastName: 'Mouse',\n    authToken: 'dummyAuthToken',\n    photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',\n    provider: 'DUMMY',\n    idToken: 'dummyIdToken',\n    authorizationCode: 'dummyAuthCode',\n    response: {}\n};\n\nclass FacebookLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = {\n        scope: 'email,public_profile',\n        locale: 'en_US',\n        fields: 'name,email,picture,first_name,last_name',\n        version: 'v4.0',\n    }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript(FacebookLoginProvider.PROVIDER_ID, `//connect.facebook.net/${this.initOptions.locale}/sdk.js`, () => {\n                    FB.init({\n                        appId: this.clientId,\n                        autoLogAppEvents: true,\n                        cookie: true,\n                        xfbml: true,\n                        version: this.initOptions.version,\n                    });\n                    resolve();\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => {\n            FB.getLoginStatus((response) => {\n                if (response.status === 'connected') {\n                    let authResponse = response.authResponse;\n                    FB.api(`/me?fields=${this.initOptions.fields}`, (fbUser) => {\n                        let user = new SocialUser();\n                        user.id = fbUser.id;\n                        user.name = fbUser.name;\n                        user.email = fbUser.email;\n                        user.photoUrl =\n                            'https://graph.facebook.com/' +\n                                fbUser.id +\n                                '/picture?type=normal&access_token=' +\n                                authResponse.accessToken;\n                        user.firstName = fbUser.first_name;\n                        user.lastName = fbUser.last_name;\n                        user.authToken = authResponse.accessToken;\n                        user.response = fbUser;\n                        resolve(user);\n                    });\n                }\n                else {\n                    reject(`No user is currently logged in with ${FacebookLoginProvider.PROVIDER_ID}`);\n                }\n            });\n        });\n    }\n    signIn(signInOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\n        return new Promise((resolve, reject) => {\n            FB.login((response) => {\n                if (response.authResponse) {\n                    let authResponse = response.authResponse;\n                    FB.api(`/me?fields=${options.fields}`, (fbUser) => {\n                        let user = new SocialUser();\n                        user.id = fbUser.id;\n                        user.name = fbUser.name;\n                        user.email = fbUser.email;\n                        user.photoUrl =\n                            'https://graph.facebook.com/' +\n                                fbUser.id +\n                                '/picture?type=normal';\n                        user.firstName = fbUser.first_name;\n                        user.lastName = fbUser.last_name;\n                        user.authToken = authResponse.accessToken;\n                        user.response = fbUser;\n                        resolve(user);\n                    });\n                }\n                else {\n                    reject('User cancelled login or did not fully authorize.');\n                }\n            }, options);\n        });\n    }\n    signOut() {\n        return new Promise((resolve, reject) => {\n            FB.logout((response) => {\n                resolve();\n            });\n        });\n    }\n}\nFacebookLoginProvider.PROVIDER_ID = 'FACEBOOK';\n\nclass AmazonLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = {\n        scope: 'profile',\n        scope_data: {\n            profile: { essential: false },\n        },\n        redirect_uri: location.origin,\n    }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n    }\n    initialize() {\n        let amazonRoot = null;\n        if (document) {\n            amazonRoot = document.createElement('div');\n            amazonRoot.id = 'amazon-root';\n            document.body.appendChild(amazonRoot);\n        }\n        window.onAmazonLoginReady = () => {\n            amazon.Login.setClientId(this.clientId);\n        };\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript('amazon-login-sdk', 'https://assets.loginwithamazon.com/sdk/na/login1.js', () => {\n                    resolve();\n                }, amazonRoot);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => {\n            let token = this.retrieveToken();\n            if (token) {\n                amazon.Login.retrieveProfile(token, (response) => {\n                    if (response.success) {\n                        let user = new SocialUser();\n                        user.id = response.profile.CustomerId;\n                        user.name = response.profile.Name;\n                        user.email = response.profile.PrimaryEmail;\n                        user.response = response.profile;\n                        resolve(user);\n                    }\n                    else {\n                        reject(response.error);\n                    }\n                });\n            }\n            else {\n                reject(`No user is currently logged in with ${AmazonLoginProvider.PROVIDER_ID}`);\n            }\n        });\n    }\n    signIn(signInOptions) {\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\n        return new Promise((resolve, reject) => {\n            amazon.Login.authorize(options, (authResponse) => {\n                if (authResponse.error) {\n                    reject(authResponse.error);\n                }\n                else {\n                    amazon.Login.retrieveProfile(authResponse.access_token, (response) => {\n                        let user = new SocialUser();\n                        user.id = response.profile.CustomerId;\n                        user.name = response.profile.Name;\n                        user.email = response.profile.PrimaryEmail;\n                        user.authToken = authResponse.access_token;\n                        user.response = response.profile;\n                        this.persistToken(authResponse.access_token);\n                        resolve(user);\n                    });\n                }\n            });\n        });\n    }\n    signOut() {\n        return new Promise((resolve, reject) => {\n            try {\n                amazon.Login.logout();\n                this.clearToken();\n                resolve();\n            }\n            catch (err) {\n                reject(err.message);\n            }\n        });\n    }\n    persistToken(token) {\n        localStorage.setItem(`${AmazonLoginProvider.PROVIDER_ID}_token`, token);\n    }\n    retrieveToken() {\n        return localStorage.getItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\n    }\n    clearToken() {\n        localStorage.removeItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\n    }\n}\nAmazonLoginProvider.PROVIDER_ID = 'AMAZON';\n\nclass VKLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions = {\n        fields: 'photo_max,contacts',\n        version: '5.124',\n    }) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = initOptions;\n        this.VK_API_URL = '//vk.com/js/api/openapi.js';\n        this.VK_API_GET_USER = 'users.get';\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.loadScript(VKLoginProvider.PROVIDER_ID, this.VK_API_URL, () => {\n                    VK.init({\n                        apiId: this.clientId,\n                    });\n                    resolve();\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return new Promise((resolve, reject) => this.getLoginStatusInternal(resolve, reject));\n    }\n    signIn() {\n        return new Promise((resolve, reject) => this.signInInternal(resolve, reject));\n    }\n    signOut() {\n        return new Promise((resolve, reject) => {\n            VK.Auth.logout((response) => {\n                resolve();\n            });\n        });\n    }\n    signInInternal(resolve, reject) {\n        VK.Auth.login((loginResponse) => {\n            if (loginResponse.status === 'connected') {\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\n            }\n        });\n    }\n    getUser(userId, token, resolve) {\n        VK.Api.call(this.VK_API_GET_USER, {\n            user_id: userId,\n            fields: this.initOptions.fields,\n            v: this.initOptions.version,\n        }, (userResponse) => {\n            resolve(this.createUser(Object.assign({}, { token }, userResponse.response[0])));\n        });\n    }\n    getLoginStatusInternal(resolve, reject) {\n        VK.Auth.getLoginStatus((loginResponse) => {\n            if (loginResponse.status === 'connected') {\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\n            }\n        });\n    }\n    createUser(response) {\n        const user = new SocialUser();\n        user.id = response.id;\n        user.name = `${response.first_name} ${response.last_name}`;\n        user.photoUrl = response.photo_max;\n        user.authToken = response.token;\n        return user;\n    }\n}\nVKLoginProvider.PROVIDER_ID = 'VK';\n\n/**\n * Protocol modes supported by MSAL.\n */\nvar ProtocolMode;\n(function (ProtocolMode) {\n    ProtocolMode[\"AAD\"] = \"AAD\";\n    ProtocolMode[\"OIDC\"] = \"OIDC\";\n})(ProtocolMode || (ProtocolMode = {}));\nconst COMMON_AUTHORITY = 'https://login.microsoftonline.com/common/';\n/**\n * Microsoft Authentication using MSAL v2: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser\n */\nclass MicrosoftLoginProvider extends BaseLoginProvider {\n    constructor(clientId, initOptions) {\n        super();\n        this.clientId = clientId;\n        this.initOptions = {\n            authority: COMMON_AUTHORITY,\n            scopes: ['openid', 'email', 'profile', 'User.Read'],\n            knownAuthorities: [],\n            protocolMode: ProtocolMode.AAD,\n            clientCapabilities: [],\n            cacheLocation: 'sessionStorage'\n        };\n        this.initOptions = Object.assign(Object.assign({}, this.initOptions), initOptions);\n    }\n    initialize() {\n        return new Promise((resolve, reject) => {\n            this.loadScript(MicrosoftLoginProvider.PROVIDER_ID, 'https://alcdn.msauth.net/browser/2.13.1/js/msal-browser.js', () => {\n                var _a;\n                try {\n                    const config = {\n                        auth: {\n                            clientId: this.clientId,\n                            redirectUri: (_a = this.initOptions.redirect_uri) !== null && _a !== void 0 ? _a : location.origin,\n                            authority: this.initOptions.authority,\n                            knownAuthorities: this.initOptions.knownAuthorities,\n                            protocolMode: this.initOptions.protocolMode,\n                            clientCapabilities: this.initOptions.clientCapabilities\n                        },\n                        cache: !this.initOptions.cacheLocation ? null : {\n                            cacheLocation: this.initOptions.cacheLocation\n                        }\n                    };\n                    this._instance = new msal.PublicClientApplication(config);\n                    resolve();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    getSocialUser(loginResponse) {\n        return new Promise((resolve, reject) => {\n            //After login, use Microsoft Graph API to get user info\n            let meRequest = new XMLHttpRequest();\n            meRequest.onreadystatechange = () => {\n                if (meRequest.readyState == 4) {\n                    try {\n                        if (meRequest.status == 200) {\n                            let userInfo = JSON.parse(meRequest.responseText);\n                            let user = new SocialUser();\n                            user.provider = MicrosoftLoginProvider.PROVIDER_ID;\n                            user.id = loginResponse.idToken;\n                            user.authToken = loginResponse.accessToken;\n                            user.name = loginResponse.idTokenClaims.name;\n                            user.email = loginResponse.account.username;\n                            user.idToken = loginResponse.idToken;\n                            user.response = loginResponse;\n                            user.firstName = userInfo.givenName;\n                            user.lastName = userInfo.surname;\n                            resolve(user);\n                        }\n                        else {\n                            reject(`Error retrieving user info: ${meRequest.status}`);\n                        }\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                }\n            };\n            //Microsoft Graph ME Endpoint: https://docs.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http\n            meRequest.open('GET', 'https://graph.microsoft.com/v1.0/me');\n            meRequest.setRequestHeader('Authorization', `Bearer ${loginResponse.accessToken}`);\n            try {\n                meRequest.send();\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    getLoginStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = this._instance.getAllAccounts();\n            if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\n                const loginResponse = yield this._instance.ssoSilent({\n                    scopes: this.initOptions.scopes,\n                    loginHint: accounts[0].username\n                });\n                return yield this.getSocialUser(loginResponse);\n            }\n            else {\n                throw `No user is currently logged in with ${MicrosoftLoginProvider.PROVIDER_ID}`;\n            }\n        });\n    }\n    signIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const loginResponse = yield this._instance.loginPopup({\n                scopes: this.initOptions.scopes\n            });\n            return yield this.getSocialUser(loginResponse);\n        });\n    }\n    signOut(revoke) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accounts = this._instance.getAllAccounts();\n            if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\n                yield this._instance.logoutPopup({\n                    account: accounts[0],\n                    postLogoutRedirectUri: (_b = (_a = this.initOptions.logout_redirect_uri) !== null && _a !== void 0 ? _a : this.initOptions.redirect_uri) !== null && _b !== void 0 ? _b : location.href\n                });\n            }\n        });\n    }\n}\nMicrosoftLoginProvider.PROVIDER_ID = 'MICROSOFT';\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AmazonLoginProvider, BaseLoginProvider, DummyLoginProvider, FacebookLoginProvider, GoogleLoginProvider, MicrosoftLoginProvider, SocialAuthService, SocialLoginModule, SocialUser, VKLoginProvider };\n\n//# sourceMappingURL=angularx-social-login.js.map","import { FacebookLoginProvider, GoogleLoginProvider } from 'angularx-social-login';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SocialAuthServiceConfig, SocialLoginModule } from 'angularx-social-login';\r\n\r\nimport { AccountApiService } from './account-api.service';\r\nimport { AccountComponent } from './account.component';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NewProfileComponent } from './new-profile/new-profile.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [AccountComponent, LoginComponent, ForgotpasswordComponent, NewProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SocialLoginModule,\r\n    AccountRoutingModule,\r\n  ],\r\n  providers: [AccountApiService,\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(\r\n              '761689346542-r4m604edknk2jmuq99cr9tssm7j5r7ut.apps.googleusercontent.com'\r\n            )\r\n          },\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider('419759909345362')\r\n          }\r\n        ]\r\n      } as SocialAuthServiceConfig,\r\n    }\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n"]}