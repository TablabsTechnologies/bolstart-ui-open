{"version":3,"sources":["./src/app/components/investor/investor-routing.module.ts","./src/app/components/investor/investor.module.ts","./src/app/components/investor/investor.component.ts","./src/app/components/investor/investor.component.html","./src/app/components/investor/inv-comp-detail/inv-comp-detail.component.ts","./src/app/components/investor/inv-comp-detail/inv-comp-detail.component.html","./src/app/components/investor/investor.service.ts"],"names":[],"mappings":"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","file":"components-investor-investor-module-es2015.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CompanyInfoComponent } from '../company/company-info/company-info.component';\r\nimport { CompanyPublishComponent } from '../company/company-publish/company-publish.component';\r\nimport { InvCompDetailComponent } from './inv-comp-detail/inv-comp-detail.component';\r\nimport { InvestorComponent } from './investor.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: InvestorComponent,\r\n  children: [\r\n    {\r\n      path: 'companyDetail',\r\n      component: InvCompDetailComponent,\r\n      children: [\r\n        {\r\n          path: 'publish',\r\n          component: CompanyPublishComponent\r\n        },\r\n        {\r\n          path: 'detail',\r\n          component: CompanyInfoComponent\r\n        },\r\n      ]\r\n    }\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestorRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { CompanyModule } from '../company/company.module';\r\nimport { InvCompDetailComponent } from './inv-comp-detail/inv-comp-detail.component';\r\nimport { InvestorComponent } from './investor.component';\r\nimport { InvestorRoutingModule } from './investor-routing.module';\r\nimport { InvestorService } from './investor.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from './../../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [InvestorComponent, InvCompDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InvestorRoutingModule,\r\n    SharedModule,\r\n    CompanyModule\r\n\r\n\r\n  ],\r\n  providers: [\r\n    InvestorService\r\n  ]\r\n})\r\nexport class InvestorModule { }\r\n","import * as CryptoJS from 'crypto-js';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { InvestorService } from './investor.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-investor',\r\n  templateUrl: './investor.component.html',\r\n  styleUrls: ['./investor.component.scss']\r\n})\r\nexport class InvestorComponent implements OnInit {\r\n  companyList: any = [];\r\n  userInfo: any;\r\n\r\n  constructor(private investorApi: InvestorService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    let encrypt = localStorage.getItem('Bolstart');\r\n    this.userInfo = JSON.parse(CryptoJS.AES.decrypt(encrypt, \"Bollstart\").toString(CryptoJS.enc.Utf8));\r\n\r\n    this.getCompanyList();\r\n  }\r\n\r\n  getCompanyList() {\r\n    this.investorApi.getAllCompanyListByInvestorId(this.userInfo.id).subscribe(response => {\r\n      if (response.success) {\r\n        this.companyList = response.data;\r\n      }\r\n    })\r\n  }\r\n\r\n  goToCompanyDetail(companyId) {\r\n    this.router.navigate(['./investor/companyDetail/publish'], { queryParams: { companyId: companyId } });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<app-header></app-header>\r\n<section class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5>Company List</h5>\r\n                </div>\r\n                <ul>\r\n                    <li *ngFor=\"let item of companyList\" class=\"pointer\">\r\n                        <span style=\"display: flex;\" (click)=\"goToCompanyDetail(item.id)\">\r\n                            <img [src]=\"item.logo\" class=\"profile\" />&nbsp;\r\n                            <h6 class=\"pt-2\">\r\n                                {{item.name}}<br>\r\n                                <label style=\"color: darkgray;\">{{item.industry}}</label>\r\n                            </h6>\r\n                        </span>\r\n                        <hr>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { InvestorService } from './../investor.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-inv-comp-detail',\r\n  templateUrl: './inv-comp-detail.component.html',\r\n  styleUrls: ['./inv-comp-detail.component.scss']\r\n})\r\nexport class InvCompDetailComponent implements OnInit {\r\n  companyDetail: any;\r\n  timelineImage: string = environment.defaultTimlineImage;\r\n\r\n  constructor(\r\n    private routes: ActivatedRoute,\r\n    private investorApi: InvestorService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.routes.queryParams.subscribe(response => {\r\n      this.getCompanyDetailById(response.companyId);\r\n    })\r\n  }\r\n\r\n\r\n  getCompanyDetailById(companyId) {\r\n    this.investorApi.getCompanyDetailById(companyId).subscribe(res => {\r\n      if (res.success) {\r\n        this.companyDetail = res.data;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"bg\" [style.background-image]=\"timelineImage\">\r\n        <div class=\"inner\">\r\n            <div class=\"profile-image\">\r\n                <img class=\"profile\" [src]=\"companyDetail?.logo\">\r\n            </div>\r\n            <div class=\"custom-padding\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                        <div class=\"name\" style=\"display: inline-flex;\">{{companyDetail?.name}}\r\n                            ({{companyDetail?.company_type}})&nbsp; <h6 data-toggle=\"tooltip\" data-placement=\"right\"\r\n                                title=\"Not Verified\" style=\"color: #F0541E;\"\r\n                                *ngIf=\"companyDetail?.isVerified == 'false'\"><i\r\n                                    class=\"fa fa-exclamation-circle\"></i>&nbsp;\r\n\r\n                            </h6>\r\n                            <h6 data-toggle=\"tooltip\" data-placement=\"right\" title=\"Verified\" style=\"color: #009944;\"\r\n                                *ngIf=\"companyDetail?.isVerified == 'approved'\"><i class=\"fa fa-check-circle\"\r\n                                    aria-hidden=\"true\"></i>\r\n                                &nbsp;\r\n                            </h6>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"//{{companyDetail?.websiteLink}}\" target=\"_blank\"\r\n                                class=\"connection\">{{companyDetail?.websiteLink}}</a>\r\n                        </div>\r\n                        <span class=\"name_second\">{{companyDetail?.industry}}</span>\r\n                        <div>\r\n                            <span>{{companyDetail?.city}},\r\n                                {{companyDetail?.state}},{{companyDetail?.country}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style=\"display: inline-flex;\">\r\n                <div class=\"btn-1\" routerLink=\"./publish\" [queryParams]=\"{companyId:companyDetail?.id}\"\r\n                    routerLinkActive=\"active-link\">Updates</div> &nbsp;\r\n                <div class=\"btn-1\" routerLink=\"./detail\" [queryParams]=\"{companyId:companyDetail?.id}\"\r\n                    routerLinkActive=\"active-link\">About</div>&nbsp;\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvestorService {\r\n  baseUrl = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllCompanyListByInvestorId(userId): Observable<any> {\r\n    return this.http.get(this.baseUrl + `investorportal/getcompany/byconnection?userid=${userId}`)\r\n  }\r\n\r\n  getCompanyDetailById(companyId): Observable<any> {\r\n    return this.http.get(this.baseUrl + `company/getById?id=${companyId}`)\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}